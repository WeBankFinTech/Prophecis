//
// Copyright 2017-2018 IBM Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: lcm.proto

package service

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	grpc_trainer_v2 "webank/DI/trainer/trainer/grpc_trainer_v2"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type StatusMessages int32

const (
	StatusMessages_NORMAL_OPERATION       StatusMessages = 0
	StatusMessages_INTERNAL_ERROR         StatusMessages = 10
	StatusMessages_INSUFFICIENT_RESOURCES StatusMessages = 20
)

// Enum value maps for StatusMessages.
var (
	StatusMessages_name = map[int32]string{
		0:  "NORMAL_OPERATION",
		10: "INTERNAL_ERROR",
		20: "INSUFFICIENT_RESOURCES",
	}
	StatusMessages_value = map[string]int32{
		"NORMAL_OPERATION":       0,
		"INTERNAL_ERROR":         10,
		"INSUFFICIENT_RESOURCES": 20,
	}
)

func (x StatusMessages) Enum() *StatusMessages {
	p := new(StatusMessages)
	*p = x
	return p
}

func (x StatusMessages) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusMessages) Descriptor() protoreflect.EnumDescriptor {
	return file_lcm_proto_enumTypes[0].Descriptor()
}

func (StatusMessages) Type() protoreflect.EnumType {
	return &file_lcm_proto_enumTypes[0]
}

func (x StatusMessages) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusMessages.Descriptor instead.
func (StatusMessages) EnumDescriptor() ([]byte, []int) {
	return file_lcm_proto_rawDescGZIP(), []int{0}
}

type ResourceRequirements_MemoryUnit int32

const (
	ResourceRequirements_MB  ResourceRequirements_MemoryUnit = 0
	ResourceRequirements_MiB ResourceRequirements_MemoryUnit = 1
	ResourceRequirements_GB  ResourceRequirements_MemoryUnit = 2
	ResourceRequirements_GiB ResourceRequirements_MemoryUnit = 3
	ResourceRequirements_TB  ResourceRequirements_MemoryUnit = 4
	ResourceRequirements_TiB ResourceRequirements_MemoryUnit = 5
)

// Enum value maps for ResourceRequirements_MemoryUnit.
var (
	ResourceRequirements_MemoryUnit_name = map[int32]string{
		0: "MB",
		1: "MiB",
		2: "GB",
		3: "GiB",
		4: "TB",
		5: "TiB",
	}
	ResourceRequirements_MemoryUnit_value = map[string]int32{
		"MB":  0,
		"MiB": 1,
		"GB":  2,
		"GiB": 3,
		"TB":  4,
		"TiB": 5,
	}
)

func (x ResourceRequirements_MemoryUnit) Enum() *ResourceRequirements_MemoryUnit {
	p := new(ResourceRequirements_MemoryUnit)
	*p = x
	return p
}

func (x ResourceRequirements_MemoryUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceRequirements_MemoryUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_lcm_proto_enumTypes[1].Descriptor()
}

func (ResourceRequirements_MemoryUnit) Type() protoreflect.EnumType {
	return &file_lcm_proto_enumTypes[1]
}

func (x ResourceRequirements_MemoryUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceRequirements_MemoryUnit.Descriptor instead.
func (ResourceRequirements_MemoryUnit) EnumDescriptor() ([]byte, []int) {
	return file_lcm_proto_rawDescGZIP(), []int{0, 0}
}

type ResourceRequirements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpus         float64                         `protobuf:"fixed64,1,opt,name=cpus,proto3" json:"cpus,omitempty"`
	Gpus         float64                         `protobuf:"fixed64,2,opt,name=gpus,proto3" json:"gpus,omitempty"`
	Memory       float64                         `protobuf:"fixed64,3,opt,name=memory,proto3" json:"memory,omitempty"`
	MemoryUnit   ResourceRequirements_MemoryUnit `protobuf:"varint,4,opt,name=memory_unit,json=memoryUnit,proto3,enum=service.ResourceRequirements_MemoryUnit" json:"memory_unit,omitempty"`
	Learners     int32                           `protobuf:"varint,5,opt,name=learners,proto3" json:"learners,omitempty"`
	Schedpolicy  string                          `protobuf:"bytes,6,opt,name=schedpolicy,proto3" json:"schedpolicy,omitempty"`
	Topology     string                          `protobuf:"bytes,7,opt,name=topology,proto3" json:"topology,omitempty"`
	Architecture string                          `protobuf:"bytes,8,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Storage      float64                         `protobuf:"fixed64,9,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageUnit  ResourceRequirements_MemoryUnit `protobuf:"varint,10,opt,name=storage_unit,json=storageUnit,proto3,enum=service.ResourceRequirements_MemoryUnit" json:"storage_unit,omitempty"`
	GpuType      string                          `protobuf:"bytes,11,opt,name=gpu_type,json=gpuType,proto3" json:"gpu_type,omitempty"`
}

func (x *ResourceRequirements) Reset() {
	*x = ResourceRequirements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRequirements) ProtoMessage() {}

func (x *ResourceRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_lcm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRequirements.ProtoReflect.Descriptor instead.
func (*ResourceRequirements) Descriptor() ([]byte, []int) {
	return file_lcm_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceRequirements) GetCpus() float64 {
	if x != nil {
		return x.Cpus
	}
	return 0
}

func (x *ResourceRequirements) GetGpus() float64 {
	if x != nil {
		return x.Gpus
	}
	return 0
}

func (x *ResourceRequirements) GetMemory() float64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ResourceRequirements) GetMemoryUnit() ResourceRequirements_MemoryUnit {
	if x != nil {
		return x.MemoryUnit
	}
	return ResourceRequirements_MB
}

func (x *ResourceRequirements) GetLearners() int32 {
	if x != nil {
		return x.Learners
	}
	return 0
}

func (x *ResourceRequirements) GetSchedpolicy() string {
	if x != nil {
		return x.Schedpolicy
	}
	return ""
}

func (x *ResourceRequirements) GetTopology() string {
	if x != nil {
		return x.Topology
	}
	return ""
}

func (x *ResourceRequirements) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *ResourceRequirements) GetStorage() float64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *ResourceRequirements) GetStorageUnit() ResourceRequirements_MemoryUnit {
	if x != nil {
		return x.StorageUnit
	}
	return ResourceRequirements_MB
}

func (x *ResourceRequirements) GetGpuType() string {
	if x != nil {
		return x.GpuType
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Roles     []string `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	Firstname string   `protobuf:"bytes,3,opt,name=firstname,proto3" json:"firstname,omitempty"`
	Lastname  string   `protobuf:"bytes,4,opt,name=lastname,proto3" json:"lastname,omitempty"`
	Email     string   `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_lcm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_lcm_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *User) GetFirstname() string {
	if x != nil {
		return x.Firstname
	}
	return ""
}

func (x *User) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type JobDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  string                           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Resources             *ResourceRequirements            `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	EnvVars               map[string]string                `protobuf:"bytes,3,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels                map[string]string                `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UserId                string                           `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TrainingId            string                           `protobuf:"bytes,6,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	Framework             string                           `protobuf:"bytes,7,opt,name=framework,proto3" json:"framework,omitempty"`
	Version               string                           `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	EvaluationMetricsSpec string                           `protobuf:"bytes,9,opt,name=evaluation_metrics_spec,json=evaluationMetricsSpec,proto3" json:"evaluation_metrics_spec,omitempty"`
	ImageTag              string                           `protobuf:"bytes,10,opt,name=image_tag,json=imageTag,proto3" json:"image_tag,omitempty"`
	ImageLocation         *ImageLocation                   `protobuf:"bytes,11,opt,name=image_location,json=imageLocation,proto3" json:"image_location,omitempty"`
	JobNamespace          string                           `protobuf:"bytes,12,opt,name=job_namespace,json=jobNamespace,proto3" json:"job_namespace,omitempty"`
	DataStores            []*grpc_trainer_v2.Datastore     `protobuf:"bytes,13,rep,name=data_stores,json=dataStores,proto3" json:"data_stores,omitempty"`
	ModelDefinition       *grpc_trainer_v2.ModelDefinition `protobuf:"bytes,14,opt,name=model_definition,json=modelDefinition,proto3" json:"model_definition,omitempty"`
	Training              *grpc_trainer_v2.Training        `protobuf:"bytes,15,opt,name=training,proto3" json:"training,omitempty"`
	TrainingStatus        *grpc_trainer_v2.TrainingStatus  `protobuf:"bytes,16,opt,name=training_status,json=trainingStatus,proto3" json:"training_status,omitempty"`
	JobAlert              string                           `protobuf:"bytes,17,opt,name=job_alert,json=jobAlert,proto3" json:"job_alert,omitempty"`
	CodeSelector          string                           `protobuf:"bytes,18,opt,name=code_selector,json=codeSelector,proto3" json:"code_selector,omitempty"`
	DataPath              string                           `protobuf:"bytes,19,opt,name=data_path,json=dataPath,proto3" json:"data_path,omitempty"`
	JobType               string                           `protobuf:"bytes,20,opt,name=job_type,json=jobType,proto3" json:"job_type,omitempty"`
	PSs                   string                           `protobuf:"bytes,21,opt,name=p_ss,json=pSs,proto3" json:"p_ss,omitempty"`
	PSCPU                 string                           `protobuf:"bytes,22,opt,name=p_s_c_p_u,json=pSCPU,proto3" json:"p_s_c_p_u,omitempty"`
	PSImage               string                           `protobuf:"bytes,23,opt,name=p_s_image,json=pSImage,proto3" json:"p_s_image,omitempty"`
	PSMemory              string                           `protobuf:"bytes,24,opt,name=p_s_memory,json=pSMemory,proto3" json:"p_s_memory,omitempty"`
	TFosRequest           string                           `protobuf:"bytes,25,opt,name=t_fos_request,json=tFosRequest,proto3" json:"t_fos_request,omitempty"`
	ExpRunId              string                           `protobuf:"bytes,26,opt,name=exp_run_id,json=expRunId,proto3" json:"exp_run_id,omitempty"`
	ExpName               string                           `protobuf:"bytes,27,opt,name=exp_name,json=expName,proto3" json:"exp_name,omitempty"`
	FileName              string                           `protobuf:"bytes,28,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FilePath              string                           `protobuf:"bytes,29,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	ProxyUser             string                           `protobuf:"bytes,30,opt,name=proxy_user,json=proxyUser,proto3" json:"proxy_user,omitempty"`
	JobParams             string                           `protobuf:"bytes,31,opt,name=job_params,json=jobParams,proto3" json:"job_params,omitempty"`
	DataSet               *grpc_trainer_v2.DataSet         `protobuf:"bytes,32,opt,name=data_set,json=dataSet,proto3" json:"data_set,omitempty"`
	MfModel               *grpc_trainer_v2.MFModel         `protobuf:"bytes,33,opt,name=mf_model,json=mfModel,proto3" json:"mf_model,omitempty"`
	Algorithm             string                           `protobuf:"bytes,34,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	FitParams             string                           `protobuf:"bytes,35,opt,name=fit_params,json=fitParams,proto3" json:"fit_params,omitempty"`
	APIType               string                           `protobuf:"bytes,36,opt,name=API_type,json=APIType,proto3" json:"API_type,omitempty"`
}

func (x *JobDeploymentRequest) Reset() {
	*x = JobDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDeploymentRequest) ProtoMessage() {}

func (x *JobDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDeploymentRequest.ProtoReflect.Descriptor instead.
func (*JobDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_lcm_proto_rawDescGZIP(), []int{2}
}

func (x *JobDeploymentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobDeploymentRequest) GetResources() *ResourceRequirements {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *JobDeploymentRequest) GetEnvVars() map[string]string {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

func (x *JobDeploymentRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *JobDeploymentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *JobDeploymentRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *JobDeploymentRequest) GetFramework() string {
	if x != nil {
		return x.Framework
	}
	return ""
}

func (x *JobDeploymentRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *JobDeploymentRequest) GetEvaluationMetricsSpec() string {
	if x != nil {
		return x.EvaluationMetricsSpec
	}
	return ""
}

func (x *JobDeploymentRequest) GetImageTag() string {
	if x != nil {
		return x.ImageTag
	}
	return ""
}

func (x *JobDeploymentRequest) GetImageLocation() *ImageLocation {
	if x != nil {
		return x.ImageLocation
	}
	return nil
}

func (x *JobDeploymentRequest) GetJobNamespace() string {
	if x != nil {
		return x.JobNamespace
	}
	return ""
}

func (x *JobDeploymentRequest) GetDataStores() []*grpc_trainer_v2.Datastore {
	if x != nil {
		return x.DataStores
	}
	return nil
}

func (x *JobDeploymentRequest) GetModelDefinition() *grpc_trainer_v2.ModelDefinition {
	if x != nil {
		return x.ModelDefinition
	}
	return nil
}

func (x *JobDeploymentRequest) GetTraining() *grpc_trainer_v2.Training {
	if x != nil {
		return x.Training
	}
	return nil
}

func (x *JobDeploymentRequest) GetTrainingStatus() *grpc_trainer_v2.TrainingStatus {
	if x != nil {
		return x.TrainingStatus
	}
	return nil
}

func (x *JobDeploymentRequest) GetJobAlert() string {
	if x != nil {
		return x.JobAlert
	}
	return ""
}

func (x *JobDeploymentRequest) GetCodeSelector() string {
	if x != nil {
		return x.CodeSelector
	}
	return ""
}

func (x *JobDeploymentRequest) GetDataPath() string {
	if x != nil {
		return x.DataPath
	}
	return ""
}

func (x *JobDeploymentRequest) GetJobType() string {
	if x != nil {
		return x.JobType
	}
	return ""
}

func (x *JobDeploymentRequest) GetPSs() string {
	if x != nil {
		return x.PSs
	}
	return ""
}

func (x *JobDeploymentRequest) GetPSCPU() string {
	if x != nil {
		return x.PSCPU
	}
	return ""
}

func (x *JobDeploymentRequest) GetPSImage() string {
	if x != nil {
		return x.PSImage
	}
	return ""
}

func (x *JobDeploymentRequest) GetPSMemory() string {
	if x != nil {
		return x.PSMemory
	}
	return ""
}

func (x *JobDeploymentRequest) GetTFosRequest() string {
	if x != nil {
		return x.TFosRequest
	}
	return ""
}

func (x *JobDeploymentRequest) GetExpRunId() string {
	if x != nil {
		return x.ExpRunId
	}
	return ""
}

func (x *JobDeploymentRequest) GetExpName() string {
	if x != nil {
		return x.ExpName
	}
	return ""
}

func (x *JobDeploymentRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *JobDeploymentRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *JobDeploymentRequest) GetProxyUser() string {
	if x != nil {
		return x.ProxyUser
	}
	return ""
}

func (x *JobDeploymentRequest) GetJobParams() string {
	if x != nil {
		return x.JobParams
	}
	return ""
}

func (x *JobDeploymentRequest) GetDataSet() *grpc_trainer_v2.DataSet {
	if x != nil {
		return x.DataSet
	}
	return nil
}

func (x *JobDeploymentRequest) GetMfModel() *grpc_trainer_v2.MFModel {
	if x != nil {
		return x.MfModel
	}
	return nil
}

func (x *JobDeploymentRequest) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *JobDeploymentRequest) GetFitParams() string {
	if x != nil {
		return x.FitParams
	}
	return ""
}

func (x *JobDeploymentRequest) GetAPIType() string {
	if x != nil {
		return x.APIType
	}
	return ""
}

type ImageLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registry    string `protobuf:"bytes,1,opt,name=registry,proto3" json:"registry,omitempty"`                          // the server name for the docker registry
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`                        // namespace within the registry
	AccessToken string `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // Token used to access images stored in the registry+namespace
	Email       string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`                                // Email address associated with the account
}

func (x *ImageLocation) Reset() {
	*x = ImageLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageLocation) ProtoMessage() {}

func (x *ImageLocation) ProtoReflect() protoreflect.Message {
	mi := &file_lcm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageLocation.ProtoReflect.Descriptor instead.
func (*ImageLocation) Descriptor() ([]byte, []int) {
	return file_lcm_proto_rawDescGZIP(), []int{3}
}

func (x *ImageLocation) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

func (x *ImageLocation) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImageLocation) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ImageLocation) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type JobDeploymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // TODO remove
}

func (x *JobDeploymentResponse) Reset() {
	*x = JobDeploymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDeploymentResponse) ProtoMessage() {}

func (x *JobDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDeploymentResponse.ProtoReflect.Descriptor instead.
func (*JobDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_lcm_proto_rawDescGZIP(), []int{4}
}

func (x *JobDeploymentResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobDeploymentResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type JobKillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TrainingId string `protobuf:"bytes,2,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// FIXME MLSS Change: for kill job on specific namespace
	JobNamespace string `protobuf:"bytes,4,opt,name=job_namespace,json=jobNamespace,proto3" json:"job_namespace,omitempty"`
	JobType      string `protobuf:"bytes,5,opt,name=job_type,json=jobType,proto3" json:"job_type,omitempty"`
}

func (x *JobKillRequest) Reset() {
	*x = JobKillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobKillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobKillRequest) ProtoMessage() {}

func (x *JobKillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobKillRequest.ProtoReflect.Descriptor instead.
func (*JobKillRequest) Descriptor() ([]byte, []int) {
	return file_lcm_proto_rawDescGZIP(), []int{5}
}

func (x *JobKillRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobKillRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *JobKillRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *JobKillRequest) GetJobNamespace() string {
	if x != nil {
		return x.JobNamespace
	}
	return ""
}

func (x *JobKillRequest) GetJobType() string {
	if x != nil {
		return x.JobType
	}
	return ""
}

type JobKillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobKillResponse) Reset() {
	*x = JobKillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobKillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobKillResponse) ProtoMessage() {}

func (x *JobKillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobKillResponse.ProtoReflect.Descriptor instead.
func (*JobKillResponse) Descriptor() ([]byte, []int) {
	return file_lcm_proto_rawDescGZIP(), []int{6}
}

type JobHaltRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TrainingId string `protobuf:"bytes,2,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// FIXME MLSS Change: for halt job on specific namespace
	JobNamespace string `protobuf:"bytes,4,opt,name=job_namespace,json=jobNamespace,proto3" json:"job_namespace,omitempty"`
}

func (x *JobHaltRequest) Reset() {
	*x = JobHaltRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobHaltRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobHaltRequest) ProtoMessage() {}

func (x *JobHaltRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobHaltRequest.ProtoReflect.Descriptor instead.
func (*JobHaltRequest) Descriptor() ([]byte, []int) {
	return file_lcm_proto_rawDescGZIP(), []int{7}
}

func (x *JobHaltRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobHaltRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *JobHaltRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *JobHaltRequest) GetJobNamespace() string {
	if x != nil {
		return x.JobNamespace
	}
	return ""
}

type JobHaltResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobHaltResponse) Reset() {
	*x = JobHaltResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobHaltResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobHaltResponse) ProtoMessage() {}

func (x *JobHaltResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobHaltResponse.ProtoReflect.Descriptor instead.
func (*JobHaltResponse) Descriptor() ([]byte, []int) {
	return file_lcm_proto_rawDescGZIP(), []int{8}
}

var File_lcm_proto protoreflect.FileDescriptor

var file_lcm_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6c, 0x63, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x1a, 0x0d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x03, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x70, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x70, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x70, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x67, 0x70, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x0b,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0a, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x4b, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x52,
	0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x70, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x70, 0x75, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x42, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x4d, 0x69, 0x42, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x42, 0x10, 0x02, 0x12, 0x07,
	0x0a, 0x03, 0x47, 0x69, 0x42, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x42, 0x10, 0x04, 0x12,
	0x07, 0x0a, 0x03, 0x54, 0x69, 0x42, 0x10, 0x05, 0x22, 0x7c, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x96, 0x0c, 0x0a, 0x14, 0x4a, 0x6f, 0x62, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x45, 0x0a, 0x08, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x62,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x17,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x61,
	0x67, 0x12, 0x3d, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x4b, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x35, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76,
	0x32, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x04, 0x70, 0x5f,
	0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x53, 0x73, 0x12, 0x18, 0x0a,
	0x09, 0x70, 0x5f, 0x73, 0x5f, 0x63, 0x5f, 0x70, 0x5f, 0x75, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x53, 0x43, 0x50, 0x55, 0x12, 0x1a, 0x0a, 0x09, 0x70, 0x5f, 0x73, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x53, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x70, 0x5f, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x53, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x5f, 0x66, 0x6f, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x46, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x5f, 0x72, 0x75, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x52, 0x75,
	0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x62,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x65, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x74, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x6d,
	0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e,
	0x4d, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x6d, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x41, 0x50, 0x49, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x50, 0x49, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x6e, 0x76, 0x56,
	0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x82, 0x01, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x22, 0x43, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x0e, 0x4a, 0x6f,
	0x62, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6a, 0x6f,
	0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4a, 0x6f,
	0x62, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x83, 0x01,
	0x0a, 0x0e, 0x4a, 0x6f, 0x62, 0x48, 0x61, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4a, 0x6f, 0x62, 0x48, 0x61, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x56, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x4f, 0x52, 0x4d,
	0x41, 0x4c, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x0a, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x53, 0x55, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45,
	0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x10, 0x14, 0x32, 0xbe,
	0x02, 0x0a, 0x10, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x4b, 0x69, 0x6c,
	0x6c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x12, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4a, 0x6f, 0x62, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x46, 0x0a, 0x0f, 0x48, 0x61, 0x6c, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x4a, 0x6f, 0x62, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4a,
	0x6f, 0x62, 0x48, 0x61, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x48, 0x61, 0x6c, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x4b, 0x69, 0x6c,
	0x6c, 0x4d, 0x4c, 0x46, 0x6c, 0x6f, 0x77, 0x4a, 0x6f, 0x62, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4a, 0x6f,
	0x62, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x1b, 0x5a, 0x19, 0x77, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2f, 0x44, 0x49, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lcm_proto_rawDescOnce sync.Once
	file_lcm_proto_rawDescData = file_lcm_proto_rawDesc
)

func file_lcm_proto_rawDescGZIP() []byte {
	file_lcm_proto_rawDescOnce.Do(func() {
		file_lcm_proto_rawDescData = protoimpl.X.CompressGZIP(file_lcm_proto_rawDescData)
	})
	return file_lcm_proto_rawDescData
}

var file_lcm_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_lcm_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_lcm_proto_goTypes = []interface{}{
	(StatusMessages)(0),                     // 0: service.StatusMessages
	(ResourceRequirements_MemoryUnit)(0),    // 1: service.ResourceRequirements.MemoryUnit
	(*ResourceRequirements)(nil),            // 2: service.ResourceRequirements
	(*User)(nil),                            // 3: service.User
	(*JobDeploymentRequest)(nil),            // 4: service.JobDeploymentRequest
	(*ImageLocation)(nil),                   // 5: service.ImageLocation
	(*JobDeploymentResponse)(nil),           // 6: service.JobDeploymentResponse
	(*JobKillRequest)(nil),                  // 7: service.JobKillRequest
	(*JobKillResponse)(nil),                 // 8: service.JobKillResponse
	(*JobHaltRequest)(nil),                  // 9: service.JobHaltRequest
	(*JobHaltResponse)(nil),                 // 10: service.JobHaltResponse
	nil,                                     // 11: service.JobDeploymentRequest.EnvVarsEntry
	nil,                                     // 12: service.JobDeploymentRequest.LabelsEntry
	(*grpc_trainer_v2.Datastore)(nil),       // 13: grpc_trainer_v2.Datastore
	(*grpc_trainer_v2.ModelDefinition)(nil), // 14: grpc_trainer_v2.ModelDefinition
	(*grpc_trainer_v2.Training)(nil),        // 15: grpc_trainer_v2.Training
	(*grpc_trainer_v2.TrainingStatus)(nil),  // 16: grpc_trainer_v2.TrainingStatus
	(*grpc_trainer_v2.DataSet)(nil),         // 17: grpc_trainer_v2.DataSet
	(*grpc_trainer_v2.MFModel)(nil),         // 18: grpc_trainer_v2.MFModel
}
var file_lcm_proto_depIdxs = []int32{
	1,  // 0: service.ResourceRequirements.memory_unit:type_name -> service.ResourceRequirements.MemoryUnit
	1,  // 1: service.ResourceRequirements.storage_unit:type_name -> service.ResourceRequirements.MemoryUnit
	2,  // 2: service.JobDeploymentRequest.resources:type_name -> service.ResourceRequirements
	11, // 3: service.JobDeploymentRequest.env_vars:type_name -> service.JobDeploymentRequest.EnvVarsEntry
	12, // 4: service.JobDeploymentRequest.labels:type_name -> service.JobDeploymentRequest.LabelsEntry
	5,  // 5: service.JobDeploymentRequest.image_location:type_name -> service.ImageLocation
	13, // 6: service.JobDeploymentRequest.data_stores:type_name -> grpc_trainer_v2.Datastore
	14, // 7: service.JobDeploymentRequest.model_definition:type_name -> grpc_trainer_v2.ModelDefinition
	15, // 8: service.JobDeploymentRequest.training:type_name -> grpc_trainer_v2.Training
	16, // 9: service.JobDeploymentRequest.training_status:type_name -> grpc_trainer_v2.TrainingStatus
	17, // 10: service.JobDeploymentRequest.data_set:type_name -> grpc_trainer_v2.DataSet
	18, // 11: service.JobDeploymentRequest.mf_model:type_name -> grpc_trainer_v2.MFModel
	4,  // 12: service.LifecycleManager.DeployTrainingJob:input_type -> service.JobDeploymentRequest
	7,  // 13: service.LifecycleManager.KillTrainingJob:input_type -> service.JobKillRequest
	9,  // 14: service.LifecycleManager.HaltTrainingJob:input_type -> service.JobHaltRequest
	7,  // 15: service.LifecycleManager.KillMLFlowJob:input_type -> service.JobKillRequest
	6,  // 16: service.LifecycleManager.DeployTrainingJob:output_type -> service.JobDeploymentResponse
	8,  // 17: service.LifecycleManager.KillTrainingJob:output_type -> service.JobKillResponse
	10, // 18: service.LifecycleManager.HaltTrainingJob:output_type -> service.JobHaltResponse
	8,  // 19: service.LifecycleManager.KillMLFlowJob:output_type -> service.JobKillResponse
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_lcm_proto_init() }
func file_lcm_proto_init() {
	if File_lcm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lcm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRequirements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDeploymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobKillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobKillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobHaltRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobHaltResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lcm_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lcm_proto_goTypes,
		DependencyIndexes: file_lcm_proto_depIdxs,
		EnumInfos:         file_lcm_proto_enumTypes,
		MessageInfos:      file_lcm_proto_msgTypes,
	}.Build()
	File_lcm_proto = out.File
	file_lcm_proto_rawDesc = nil
	file_lcm_proto_goTypes = nil
	file_lcm_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LifecycleManagerClient is the client API for LifecycleManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LifecycleManagerClient interface {
	DeployTrainingJob(ctx context.Context, in *JobDeploymentRequest, opts ...grpc.CallOption) (*JobDeploymentResponse, error)
	KillTrainingJob(ctx context.Context, in *JobKillRequest, opts ...grpc.CallOption) (*JobKillResponse, error)
	HaltTrainingJob(ctx context.Context, in *JobHaltRequest, opts ...grpc.CallOption) (*JobHaltResponse, error)
	KillMLFlowJob(ctx context.Context, in *JobKillRequest, opts ...grpc.CallOption) (*JobKillResponse, error)
}

type lifecycleManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewLifecycleManagerClient(cc grpc.ClientConnInterface) LifecycleManagerClient {
	return &lifecycleManagerClient{cc}
}

func (c *lifecycleManagerClient) DeployTrainingJob(ctx context.Context, in *JobDeploymentRequest, opts ...grpc.CallOption) (*JobDeploymentResponse, error) {
	out := new(JobDeploymentResponse)
	err := c.cc.Invoke(ctx, "/service.LifecycleManager/DeployTrainingJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecycleManagerClient) KillTrainingJob(ctx context.Context, in *JobKillRequest, opts ...grpc.CallOption) (*JobKillResponse, error) {
	out := new(JobKillResponse)
	err := c.cc.Invoke(ctx, "/service.LifecycleManager/KillTrainingJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecycleManagerClient) HaltTrainingJob(ctx context.Context, in *JobHaltRequest, opts ...grpc.CallOption) (*JobHaltResponse, error) {
	out := new(JobHaltResponse)
	err := c.cc.Invoke(ctx, "/service.LifecycleManager/HaltTrainingJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecycleManagerClient) KillMLFlowJob(ctx context.Context, in *JobKillRequest, opts ...grpc.CallOption) (*JobKillResponse, error) {
	out := new(JobKillResponse)
	err := c.cc.Invoke(ctx, "/service.LifecycleManager/KillMLFlowJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LifecycleManagerServer is the server API for LifecycleManager service.
type LifecycleManagerServer interface {
	DeployTrainingJob(context.Context, *JobDeploymentRequest) (*JobDeploymentResponse, error)
	KillTrainingJob(context.Context, *JobKillRequest) (*JobKillResponse, error)
	HaltTrainingJob(context.Context, *JobHaltRequest) (*JobHaltResponse, error)
	KillMLFlowJob(context.Context, *JobKillRequest) (*JobKillResponse, error)
}

// UnimplementedLifecycleManagerServer can be embedded to have forward compatible implementations.
type UnimplementedLifecycleManagerServer struct {
}

func (*UnimplementedLifecycleManagerServer) DeployTrainingJob(context.Context, *JobDeploymentRequest) (*JobDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeployTrainingJob not implemented")
}
func (*UnimplementedLifecycleManagerServer) KillTrainingJob(context.Context, *JobKillRequest) (*JobKillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KillTrainingJob not implemented")
}
func (*UnimplementedLifecycleManagerServer) HaltTrainingJob(context.Context, *JobHaltRequest) (*JobHaltResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HaltTrainingJob not implemented")
}
func (*UnimplementedLifecycleManagerServer) KillMLFlowJob(context.Context, *JobKillRequest) (*JobKillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KillMLFlowJob not implemented")
}

func RegisterLifecycleManagerServer(s *grpc.Server, srv LifecycleManagerServer) {
	s.RegisterService(&_LifecycleManager_serviceDesc, srv)
}

func _LifecycleManager_DeployTrainingJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecycleManagerServer).DeployTrainingJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LifecycleManager/DeployTrainingJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecycleManagerServer).DeployTrainingJob(ctx, req.(*JobDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecycleManager_KillTrainingJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobKillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecycleManagerServer).KillTrainingJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LifecycleManager/KillTrainingJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecycleManagerServer).KillTrainingJob(ctx, req.(*JobKillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecycleManager_HaltTrainingJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobHaltRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecycleManagerServer).HaltTrainingJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LifecycleManager/HaltTrainingJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecycleManagerServer).HaltTrainingJob(ctx, req.(*JobHaltRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecycleManager_KillMLFlowJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobKillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecycleManagerServer).KillMLFlowJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LifecycleManager/KillMLFlowJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecycleManagerServer).KillMLFlowJob(ctx, req.(*JobKillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LifecycleManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.LifecycleManager",
	HandlerType: (*LifecycleManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeployTrainingJob",
			Handler:    _LifecycleManager_DeployTrainingJob_Handler,
		},
		{
			MethodName: "KillTrainingJob",
			Handler:    _LifecycleManager_KillTrainingJob_Handler,
		},
		{
			MethodName: "HaltTrainingJob",
			Handler:    _LifecycleManager_HaltTrainingJob_Handler,
		},
		{
			MethodName: "KillMLFlowJob",
			Handler:    _LifecycleManager_KillMLFlowJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lcm.proto",
}
