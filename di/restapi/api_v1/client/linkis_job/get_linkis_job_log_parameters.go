// Code generated by go-swagger; DO NOT EDIT.

package linkis_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetLinkisJobLogParams creates a new GetLinkisJobLogParams object
// with the default values initialized.
func NewGetLinkisJobLogParams() *GetLinkisJobLogParams {
	var ()
	return &GetLinkisJobLogParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLinkisJobLogParamsWithTimeout creates a new GetLinkisJobLogParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLinkisJobLogParamsWithTimeout(timeout time.Duration) *GetLinkisJobLogParams {
	var ()
	return &GetLinkisJobLogParams{

		timeout: timeout,
	}
}

// NewGetLinkisJobLogParamsWithContext creates a new GetLinkisJobLogParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLinkisJobLogParamsWithContext(ctx context.Context) *GetLinkisJobLogParams {
	var ()
	return &GetLinkisJobLogParams{

		Context: ctx,
	}
}

// NewGetLinkisJobLogParamsWithHTTPClient creates a new GetLinkisJobLogParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLinkisJobLogParamsWithHTTPClient(client *http.Client) *GetLinkisJobLogParams {
	var ()
	return &GetLinkisJobLogParams{
		HTTPClient: client,
	}
}

/*GetLinkisJobLogParams contains all the parameters to send to the API endpoint
for the get linkis job log operation typically these are written to a http.Request
*/
type GetLinkisJobLogParams struct {

	/*LinkisTaskID*/
	LinkisTaskID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get linkis job log params
func (o *GetLinkisJobLogParams) WithTimeout(timeout time.Duration) *GetLinkisJobLogParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get linkis job log params
func (o *GetLinkisJobLogParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get linkis job log params
func (o *GetLinkisJobLogParams) WithContext(ctx context.Context) *GetLinkisJobLogParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get linkis job log params
func (o *GetLinkisJobLogParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get linkis job log params
func (o *GetLinkisJobLogParams) WithHTTPClient(client *http.Client) *GetLinkisJobLogParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get linkis job log params
func (o *GetLinkisJobLogParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLinkisTaskID adds the linkisTaskID to the get linkis job log params
func (o *GetLinkisJobLogParams) WithLinkisTaskID(linkisTaskID int64) *GetLinkisJobLogParams {
	o.SetLinkisTaskID(linkisTaskID)
	return o
}

// SetLinkisTaskID adds the linkisTaskId to the get linkis job log params
func (o *GetLinkisJobLogParams) SetLinkisTaskID(linkisTaskID int64) {
	o.LinkisTaskID = linkisTaskID
}

// WriteToRequest writes these params to a swagger request
func (o *GetLinkisJobLogParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param linkis_task_id
	if err := r.SetPathParam("linkis_task_id", swag.FormatInt64(o.LinkisTaskID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
