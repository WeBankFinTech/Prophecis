// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetJobLogByLineParams creates a new GetJobLogByLineParams object
// with the default values initialized.
func NewGetJobLogByLineParams() *GetJobLogByLineParams {
	var ()
	return &GetJobLogByLineParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetJobLogByLineParamsWithTimeout creates a new GetJobLogByLineParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetJobLogByLineParamsWithTimeout(timeout time.Duration) *GetJobLogByLineParams {
	var ()
	return &GetJobLogByLineParams{

		timeout: timeout,
	}
}

// NewGetJobLogByLineParamsWithContext creates a new GetJobLogByLineParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetJobLogByLineParamsWithContext(ctx context.Context) *GetJobLogByLineParams {
	var ()
	return &GetJobLogByLineParams{

		Context: ctx,
	}
}

// NewGetJobLogByLineParamsWithHTTPClient creates a new GetJobLogByLineParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetJobLogByLineParamsWithHTTPClient(client *http.Client) *GetJobLogByLineParams {
	var ()
	return &GetJobLogByLineParams{
		HTTPClient: client,
	}
}

/*GetJobLogByLineParams contains all the parameters to send to the API endpoint
for the get job log by line operation typically these are written to a http.Request
*/
type GetJobLogByLineParams struct {

	/*From
	  log end line

	*/
	From int64
	/*Size
	  log start line

	*/
	Size int64
	/*TrainingID*/
	TrainingID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get job log by line params
func (o *GetJobLogByLineParams) WithTimeout(timeout time.Duration) *GetJobLogByLineParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get job log by line params
func (o *GetJobLogByLineParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get job log by line params
func (o *GetJobLogByLineParams) WithContext(ctx context.Context) *GetJobLogByLineParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get job log by line params
func (o *GetJobLogByLineParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get job log by line params
func (o *GetJobLogByLineParams) WithHTTPClient(client *http.Client) *GetJobLogByLineParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get job log by line params
func (o *GetJobLogByLineParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFrom adds the from to the get job log by line params
func (o *GetJobLogByLineParams) WithFrom(from int64) *GetJobLogByLineParams {
	o.SetFrom(from)
	return o
}

// SetFrom adds the from to the get job log by line params
func (o *GetJobLogByLineParams) SetFrom(from int64) {
	o.From = from
}

// WithSize adds the size to the get job log by line params
func (o *GetJobLogByLineParams) WithSize(size int64) *GetJobLogByLineParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get job log by line params
func (o *GetJobLogByLineParams) SetSize(size int64) {
	o.Size = size
}

// WithTrainingID adds the trainingID to the get job log by line params
func (o *GetJobLogByLineParams) WithTrainingID(trainingID string) *GetJobLogByLineParams {
	o.SetTrainingID(trainingID)
	return o
}

// SetTrainingID adds the trainingId to the get job log by line params
func (o *GetJobLogByLineParams) SetTrainingID(trainingID string) {
	o.TrainingID = trainingID
}

// WriteToRequest writes these params to a swagger request
func (o *GetJobLogByLineParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param from
	qrFrom := o.From
	qFrom := swag.FormatInt64(qrFrom)
	if qFrom != "" {
		if err := r.SetQueryParam("from", qFrom); err != nil {
			return err
		}
	}

	// query param size
	qrSize := o.Size
	qSize := swag.FormatInt64(qrSize)
	if qSize != "" {
		if err := r.SetQueryParam("size", qSize); err != nil {
			return err
		}
	}

	// path param training_id
	if err := r.SetPathParam("training_id", o.TrainingID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
