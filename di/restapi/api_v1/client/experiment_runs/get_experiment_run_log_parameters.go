// Code generated by go-swagger; DO NOT EDIT.

package experiment_runs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetExperimentRunLogParams creates a new GetExperimentRunLogParams object
// with the default values initialized.
func NewGetExperimentRunLogParams() *GetExperimentRunLogParams {
	var ()
	return &GetExperimentRunLogParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetExperimentRunLogParamsWithTimeout creates a new GetExperimentRunLogParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetExperimentRunLogParamsWithTimeout(timeout time.Duration) *GetExperimentRunLogParams {
	var ()
	return &GetExperimentRunLogParams{

		timeout: timeout,
	}
}

// NewGetExperimentRunLogParamsWithContext creates a new GetExperimentRunLogParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetExperimentRunLogParamsWithContext(ctx context.Context) *GetExperimentRunLogParams {
	var ()
	return &GetExperimentRunLogParams{

		Context: ctx,
	}
}

// NewGetExperimentRunLogParamsWithHTTPClient creates a new GetExperimentRunLogParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetExperimentRunLogParamsWithHTTPClient(client *http.Client) *GetExperimentRunLogParams {
	var ()
	return &GetExperimentRunLogParams{
		HTTPClient: client,
	}
}

/*GetExperimentRunLogParams contains all the parameters to send to the API endpoint
for the get experiment run log operation typically these are written to a http.Request
*/
type GetExperimentRunLogParams struct {

	/*FromLine
	  log from line number

	*/
	FromLine *int64
	/*ID*/
	ID int64
	/*Size
	  get log size

	*/
	Size *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get experiment run log params
func (o *GetExperimentRunLogParams) WithTimeout(timeout time.Duration) *GetExperimentRunLogParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get experiment run log params
func (o *GetExperimentRunLogParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get experiment run log params
func (o *GetExperimentRunLogParams) WithContext(ctx context.Context) *GetExperimentRunLogParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get experiment run log params
func (o *GetExperimentRunLogParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get experiment run log params
func (o *GetExperimentRunLogParams) WithHTTPClient(client *http.Client) *GetExperimentRunLogParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get experiment run log params
func (o *GetExperimentRunLogParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFromLine adds the fromLine to the get experiment run log params
func (o *GetExperimentRunLogParams) WithFromLine(fromLine *int64) *GetExperimentRunLogParams {
	o.SetFromLine(fromLine)
	return o
}

// SetFromLine adds the fromLine to the get experiment run log params
func (o *GetExperimentRunLogParams) SetFromLine(fromLine *int64) {
	o.FromLine = fromLine
}

// WithID adds the id to the get experiment run log params
func (o *GetExperimentRunLogParams) WithID(id int64) *GetExperimentRunLogParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get experiment run log params
func (o *GetExperimentRunLogParams) SetID(id int64) {
	o.ID = id
}

// WithSize adds the size to the get experiment run log params
func (o *GetExperimentRunLogParams) WithSize(size *int64) *GetExperimentRunLogParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get experiment run log params
func (o *GetExperimentRunLogParams) SetSize(size *int64) {
	o.Size = size
}

// WriteToRequest writes these params to a swagger request
func (o *GetExperimentRunLogParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FromLine != nil {

		// query param from_line
		var qrFromLine int64
		if o.FromLine != nil {
			qrFromLine = *o.FromLine
		}
		qFromLine := swag.FormatInt64(qrFromLine)
		if qFromLine != "" {
			if err := r.SetQueryParam("from_line", qFromLine); err != nil {
				return err
			}
		}

	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if o.Size != nil {

		// query param size
		var qrSize int64
		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt64(qrSize)
		if qSize != "" {
			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
