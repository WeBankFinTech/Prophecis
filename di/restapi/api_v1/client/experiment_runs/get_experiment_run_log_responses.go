// Code generated by go-swagger; DO NOT EDIT.

package experiment_runs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	restmodels "webank/DI/restapi/api_v1/restmodels"
)

// GetExperimentRunLogReader is a Reader for the GetExperimentRunLog structure.
type GetExperimentRunLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExperimentRunLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExperimentRunLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetExperimentRunLogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExperimentRunLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetExperimentRunLogOK creates a GetExperimentRunLogOK with default headers values
func NewGetExperimentRunLogOK() *GetExperimentRunLogOK {
	return &GetExperimentRunLogOK{}
}

/*GetExperimentRunLogOK handles this case with default header values.

OK
*/
type GetExperimentRunLogOK struct {
}

func (o *GetExperimentRunLogOK) Error() string {
	return fmt.Sprintf("[GET /di/v1/experimentRun/{id}/log][%d] getExperimentRunLogOK ", 200)
}

func (o *GetExperimentRunLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExperimentRunLogUnauthorized creates a GetExperimentRunLogUnauthorized with default headers values
func NewGetExperimentRunLogUnauthorized() *GetExperimentRunLogUnauthorized {
	return &GetExperimentRunLogUnauthorized{}
}

/*GetExperimentRunLogUnauthorized handles this case with default header values.

Unauthorized
*/
type GetExperimentRunLogUnauthorized struct {
	Payload *restmodels.Error
}

func (o *GetExperimentRunLogUnauthorized) Error() string {
	return fmt.Sprintf("[GET /di/v1/experimentRun/{id}/log][%d] getExperimentRunLogUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExperimentRunLogUnauthorized) GetPayload() *restmodels.Error {
	return o.Payload
}

func (o *GetExperimentRunLogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(restmodels.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExperimentRunLogNotFound creates a GetExperimentRunLogNotFound with default headers values
func NewGetExperimentRunLogNotFound() *GetExperimentRunLogNotFound {
	return &GetExperimentRunLogNotFound{}
}

/*GetExperimentRunLogNotFound handles this case with default header values.

Model create failed
*/
type GetExperimentRunLogNotFound struct {
	Payload *restmodels.Error
}

func (o *GetExperimentRunLogNotFound) Error() string {
	return fmt.Sprintf("[GET /di/v1/experimentRun/{id}/log][%d] getExperimentRunLogNotFound  %+v", 404, o.Payload)
}

func (o *GetExperimentRunLogNotFound) GetPayload() *restmodels.Error {
	return o.Payload
}

func (o *GetExperimentRunLogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(restmodels.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
