// Code generated by go-swagger; DO NOT EDIT.

package experiment_runs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	restmodels "webank/DI/restapi/api_v1/restmodels"
)

// GetExperimentRunStatusReader is a Reader for the GetExperimentRunStatus structure.
type GetExperimentRunStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExperimentRunStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExperimentRunStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetExperimentRunStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExperimentRunStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetExperimentRunStatusOK creates a GetExperimentRunStatusOK with default headers values
func NewGetExperimentRunStatusOK() *GetExperimentRunStatusOK {
	return &GetExperimentRunStatusOK{}
}

/*GetExperimentRunStatusOK handles this case with default header values.

OK
*/
type GetExperimentRunStatusOK struct {
	Payload *restmodels.ExperimentRunStatusResponse
}

func (o *GetExperimentRunStatusOK) Error() string {
	return fmt.Sprintf("[GET /di/v1/experimentRun/{id}/status][%d] getExperimentRunStatusOK  %+v", 200, o.Payload)
}

func (o *GetExperimentRunStatusOK) GetPayload() *restmodels.ExperimentRunStatusResponse {
	return o.Payload
}

func (o *GetExperimentRunStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(restmodels.ExperimentRunStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExperimentRunStatusUnauthorized creates a GetExperimentRunStatusUnauthorized with default headers values
func NewGetExperimentRunStatusUnauthorized() *GetExperimentRunStatusUnauthorized {
	return &GetExperimentRunStatusUnauthorized{}
}

/*GetExperimentRunStatusUnauthorized handles this case with default header values.

Unauthorized
*/
type GetExperimentRunStatusUnauthorized struct {
	Payload *restmodels.Error
}

func (o *GetExperimentRunStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /di/v1/experimentRun/{id}/status][%d] getExperimentRunStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExperimentRunStatusUnauthorized) GetPayload() *restmodels.Error {
	return o.Payload
}

func (o *GetExperimentRunStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(restmodels.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExperimentRunStatusNotFound creates a GetExperimentRunStatusNotFound with default headers values
func NewGetExperimentRunStatusNotFound() *GetExperimentRunStatusNotFound {
	return &GetExperimentRunStatusNotFound{}
}

/*GetExperimentRunStatusNotFound handles this case with default header values.

Model create failed
*/
type GetExperimentRunStatusNotFound struct {
	Payload *restmodels.Error
}

func (o *GetExperimentRunStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /di/v1/experimentRun/{id}/status][%d] getExperimentRunStatusNotFound  %+v", 404, o.Payload)
}

func (o *GetExperimentRunStatusNotFound) GetPayload() *restmodels.Error {
	return o.Payload
}

func (o *GetExperimentRunStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(restmodels.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
