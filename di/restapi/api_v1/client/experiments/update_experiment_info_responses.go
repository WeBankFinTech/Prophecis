// Code generated by go-swagger; DO NOT EDIT.

package experiments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	restmodels "webank/DI/restapi/api_v1/restmodels"
)

// UpdateExperimentInfoReader is a Reader for the UpdateExperimentInfo structure.
type UpdateExperimentInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateExperimentInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateExperimentInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateExperimentInfoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateExperimentInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateExperimentInfoOK creates a UpdateExperimentInfoOK with default headers values
func NewUpdateExperimentInfoOK() *UpdateExperimentInfoOK {
	return &UpdateExperimentInfoOK{}
}

/*UpdateExperimentInfoOK handles this case with default header values.

OK
*/
type UpdateExperimentInfoOK struct {
}

func (o *UpdateExperimentInfoOK) Error() string {
	return fmt.Sprintf("[PUT /di/v1/experiment/{id}][%d] updateExperimentInfoOK ", 200)
}

func (o *UpdateExperimentInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateExperimentInfoUnauthorized creates a UpdateExperimentInfoUnauthorized with default headers values
func NewUpdateExperimentInfoUnauthorized() *UpdateExperimentInfoUnauthorized {
	return &UpdateExperimentInfoUnauthorized{}
}

/*UpdateExperimentInfoUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateExperimentInfoUnauthorized struct {
	Payload *restmodels.Error
}

func (o *UpdateExperimentInfoUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /di/v1/experiment/{id}][%d] updateExperimentInfoUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateExperimentInfoUnauthorized) GetPayload() *restmodels.Error {
	return o.Payload
}

func (o *UpdateExperimentInfoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(restmodels.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateExperimentInfoNotFound creates a UpdateExperimentInfoNotFound with default headers values
func NewUpdateExperimentInfoNotFound() *UpdateExperimentInfoNotFound {
	return &UpdateExperimentInfoNotFound{}
}

/*UpdateExperimentInfoNotFound handles this case with default header values.

Model create failed
*/
type UpdateExperimentInfoNotFound struct {
	Payload *restmodels.Error
}

func (o *UpdateExperimentInfoNotFound) Error() string {
	return fmt.Sprintf("[PUT /di/v1/experiment/{id}][%d] updateExperimentInfoNotFound  %+v", 404, o.Payload)
}

func (o *UpdateExperimentInfoNotFound) GetPayload() *restmodels.Error {
	return o.Payload
}

func (o *UpdateExperimentInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(restmodels.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
