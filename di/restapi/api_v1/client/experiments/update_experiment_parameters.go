// Code generated by go-swagger; DO NOT EDIT.

package experiments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	restmodels "webank/DI/restapi/api_v1/restmodels"
)

// NewUpdateExperimentParams creates a new UpdateExperimentParams object
// with the default values initialized.
func NewUpdateExperimentParams() *UpdateExperimentParams {
	var ()
	return &UpdateExperimentParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateExperimentParamsWithTimeout creates a new UpdateExperimentParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateExperimentParamsWithTimeout(timeout time.Duration) *UpdateExperimentParams {
	var ()
	return &UpdateExperimentParams{

		timeout: timeout,
	}
}

// NewUpdateExperimentParamsWithContext creates a new UpdateExperimentParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateExperimentParamsWithContext(ctx context.Context) *UpdateExperimentParams {
	var ()
	return &UpdateExperimentParams{

		Context: ctx,
	}
}

// NewUpdateExperimentParamsWithHTTPClient creates a new UpdateExperimentParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateExperimentParamsWithHTTPClient(client *http.Client) *UpdateExperimentParams {
	var ()
	return &UpdateExperimentParams{
		HTTPClient: client,
	}
}

/*UpdateExperimentParams contains all the parameters to send to the API endpoint
for the update experiment operation typically these are written to a http.Request
*/
type UpdateExperimentParams struct {

	/*Experiment
	  The Experiment Put Request.

	*/
	Experiment *restmodels.ProphecisExperimentPutRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update experiment params
func (o *UpdateExperimentParams) WithTimeout(timeout time.Duration) *UpdateExperimentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update experiment params
func (o *UpdateExperimentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update experiment params
func (o *UpdateExperimentParams) WithContext(ctx context.Context) *UpdateExperimentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update experiment params
func (o *UpdateExperimentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update experiment params
func (o *UpdateExperimentParams) WithHTTPClient(client *http.Client) *UpdateExperimentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update experiment params
func (o *UpdateExperimentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExperiment adds the experiment to the update experiment params
func (o *UpdateExperimentParams) WithExperiment(experiment *restmodels.ProphecisExperimentPutRequest) *UpdateExperimentParams {
	o.SetExperiment(experiment)
	return o
}

// SetExperiment adds the experiment to the update experiment params
func (o *UpdateExperimentParams) SetExperiment(experiment *restmodels.ProphecisExperimentPutRequest) {
	o.Experiment = experiment
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateExperimentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Experiment != nil {
		if err := r.SetBodyParam(o.Experiment); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
