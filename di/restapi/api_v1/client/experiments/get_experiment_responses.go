// Code generated by go-swagger; DO NOT EDIT.

package experiments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	restmodels "webank/DI/restapi/api_v1/restmodels"
)

// GetExperimentReader is a Reader for the GetExperiment structure.
type GetExperimentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExperimentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExperimentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetExperimentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExperimentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetExperimentOK creates a GetExperimentOK with default headers values
func NewGetExperimentOK() *GetExperimentOK {
	return &GetExperimentOK{}
}

/*GetExperimentOK handles this case with default header values.

OK
*/
type GetExperimentOK struct {
	Payload *restmodels.ProphecisExperimentGetResponse
}

func (o *GetExperimentOK) Error() string {
	return fmt.Sprintf("[GET /di/v1/experiment/{id}][%d] getExperimentOK  %+v", 200, o.Payload)
}

func (o *GetExperimentOK) GetPayload() *restmodels.ProphecisExperimentGetResponse {
	return o.Payload
}

func (o *GetExperimentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(restmodels.ProphecisExperimentGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExperimentUnauthorized creates a GetExperimentUnauthorized with default headers values
func NewGetExperimentUnauthorized() *GetExperimentUnauthorized {
	return &GetExperimentUnauthorized{}
}

/*GetExperimentUnauthorized handles this case with default header values.

Unauthorized
*/
type GetExperimentUnauthorized struct {
	Payload *restmodels.Error
}

func (o *GetExperimentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /di/v1/experiment/{id}][%d] getExperimentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetExperimentUnauthorized) GetPayload() *restmodels.Error {
	return o.Payload
}

func (o *GetExperimentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(restmodels.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExperimentNotFound creates a GetExperimentNotFound with default headers values
func NewGetExperimentNotFound() *GetExperimentNotFound {
	return &GetExperimentNotFound{}
}

/*GetExperimentNotFound handles this case with default header values.

Model create failed
*/
type GetExperimentNotFound struct {
	Payload *restmodels.Error
}

func (o *GetExperimentNotFound) Error() string {
	return fmt.Sprintf("[GET /di/v1/experiment/{id}][%d] getExperimentNotFound  %+v", 404, o.Payload)
}

func (o *GetExperimentNotFound) GetPayload() *restmodels.Error {
	return o.Payload
}

func (o *GetExperimentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(restmodels.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
