// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ExportModelHandlerFunc turns a function with the right signature into a export model handler
type ExportModelHandlerFunc func(ExportModelParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ExportModelHandlerFunc) Handle(params ExportModelParams) middleware.Responder {
	return fn(params)
}

// ExportModelHandler interface for that can handle valid export model params
type ExportModelHandler interface {
	Handle(ExportModelParams) middleware.Responder
}

// NewExportModel creates a new http.Handler for the export model operation
func NewExportModel(ctx *middleware.Context, handler ExportModelHandler) *ExportModel {
	return &ExportModel{Context: ctx, Handler: handler}
}

/*ExportModel swagger:route GET /di/v1/models/{model_id}/export Models exportModel

Export the model definition.

Export the model definition

*/
type ExportModel struct {
	Context *middleware.Context
	Handler ExportModelHandler
}

func (o *ExportModel) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewExportModelParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
