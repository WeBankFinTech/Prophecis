// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostModelHandlerFunc turns a function with the right signature into a post model handler
type PostModelHandlerFunc func(PostModelParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostModelHandlerFunc) Handle(params PostModelParams) middleware.Responder {
	return fn(params)
}

// PostModelHandler interface for that can handle valid post model params
type PostModelHandler interface {
	Handle(PostModelParams) middleware.Responder
}

// NewPostModel creates a new http.Handler for the post model operation
func NewPostModel(ctx *middleware.Context, handler PostModelHandler) *PostModel {
	return &PostModel{Context: ctx, Handler: handler}
}

/*PostModel swagger:route POST /di/v1/models Models postModel

Trains a new deep learning model.

Trains a deep neural network written in a DL framework supported by the DLaaS platform (such as Caffe, Tensorflow, etc.). The model code has to be uploaded and configuration parameters have to be provided.


*/
type PostModel struct {
	Context *middleware.Context
	Handler PostModelHandler
}

func (o *PostModel) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostModelParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
