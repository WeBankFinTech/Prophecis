// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Prophecis Rest Service v2\n",
    "title": "Prophecis Rest Service v2",
    "version": "1.0.0"
  },
  "host": "di.prophecis.com",
  "basePath": "/",
  "paths": {
    "/di/v2/experiment": {
      "post": {
        "description": "创建一个新实验",
        "tags": [
          "Experiment"
        ],
        "summary": "CreateExperiment",
        "operationId": "CreateExperiment",
        "parameters": [
          {
            "description": "新建实验的具体内容",
            "name": "experiment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateExperimentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/code_upload": {
      "post": {
        "description": "upload code.zip to s3",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Experiment"
        ],
        "summary": "CodeUpload",
        "operationId": "CodeUpload",
        "parameters": [
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CodeUploadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Code ZIP upload failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/dss_flow_names": {
      "get": {
        "description": "列出所有的实验的dss工作流名称",
        "tags": [
          "Experiment"
        ],
        "summary": "ListExperimentDSSFlowNames",
        "operationId": "ListExperimentDSSFlowNames",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "dss工作流名称列表",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/dss_jump_mlss_user": {
      "get": {
        "description": "dss跳转到mlss的获取用户的name",
        "tags": [
          "Experiment"
        ],
        "summary": "GetDSSJumpMLSSUser",
        "operationId": "GetDSSJumpMLSSUser",
        "parameters": [
          {
            "type": "string",
            "description": "dss的url后带的dss_user_ticket_id内容",
            "name": "dss_user_ticket_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "dss的url后带的dss_workspace_id内容",
            "name": "dss_workspace_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetDSSJumpMLSSUserResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Get UserInfo Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/dss_project_names": {
      "get": {
        "description": "列出所有的实验的dss项目名称",
        "tags": [
          "Experiment"
        ],
        "summary": "ListExperimentDSSProjectNames",
        "operationId": "ListExperimentDSSProjectNames",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "dss项目名称列表",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/source_systems": {
      "get": {
        "description": "列出所有的实验来源类型",
        "tags": [
          "Experiment"
        ],
        "summary": "ListExperimentSourceSystems",
        "operationId": "ListExperimentSourceSystems",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "实验来源类型列表",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/upload": {
      "post": {
        "description": "通过上传方式创建一个实验",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Experiment"
        ],
        "summary": "CreateExperimentByUpload",
        "operationId": "CreateExperimentByUpload",
        "parameters": [
          {
            "type": "file",
            "description": "上传的表示实验工作流的zip文件，zip文件里应该包含一个名为flow.json的json文件",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "上传文件的文件名",
            "name": "fileName",
            "in": "formData"
          },
          {
            "minLength": 1,
            "type": "string",
            "description": "创建实验的名称",
            "name": "name",
            "in": "formData",
            "required": true
          },
          {
            "minLength": 1,
            "type": "string",
            "description": "创建实验所属的项目组",
            "name": "group_name",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "创建实验的描述",
            "name": "description",
            "in": "formData"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "创建实验的标签",
            "name": "tags",
            "in": "formData"
          },
          {
            "enum": [
              "MLSS",
              "DSS",
              "WTSS"
            ],
            "type": "string",
            "default": "MLSS",
            "description": "表示实验在哪个系统创建的, 默认为\"MLSS\"；可选的枚举值为 \"WTSS\" \"DSS\" \"MLSS\"",
            "name": "origin_system",
            "in": "formData"
          },
          {
            "enum": [
              "BDAP",
              "BDP"
            ],
            "type": "string",
            "default": "BDAP",
            "description": "实验所属的集群类型，默认为\"BDAP\"；可选枚举值为 \"BDAP\" \"BDP\"",
            "name": "cluster_type",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的工作空间id）",
            "name": "dss_workspace_id",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的工作空间名称）",
            "name": "dss_workspace_name",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的项目id）",
            "name": "dss_project_id",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的项目名）",
            "name": "dss_project_name",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的id）",
            "name": "dss_flow_id",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的名称）",
            "name": "dss_flow_name",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的版本）",
            "name": "dss_flow_version",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/upload_flow_json": {
      "post": {
        "description": "上传一个实验的FlowJson zip包，该接口会返回一个上传id，在CreateExperiment时用于 flowjson_upload_id字段",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Experiment"
        ],
        "summary": "UploadExperimentFlowJson",
        "operationId": "UploadExperimentFlowJson",
        "parameters": [
          {
            "type": "file",
            "description": "上传的表示实验工作流的zip文件，zip文件里应该包含一个名为flow.json的json文件",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UploadExperimentFlowJsonResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}": {
      "get": {
        "description": "通过实验ID获取实验信息(实际获取的是这个实验最新版本的信息）",
        "tags": [
          "Experiment"
        ],
        "summary": "GetExperiment",
        "operationId": "GetExperiment",
        "parameters": [
          {
            "type": "string",
            "description": "实验的Id",
            "name": "exp_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentWithoutPipeline"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "根据实验ID删除对应的实验",
        "tags": [
          "Experiment"
        ],
        "summary": "DeleteExperiment",
        "operationId": "DeleteExperiment",
        "parameters": [
          {
            "type": "string",
            "description": "实验的Id",
            "name": "exp_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "description": "修改实验的部分信息",
        "tags": [
          "Experiment"
        ],
        "summary": "PatchExperiment",
        "operationId": "PatchExperiment",
        "parameters": [
          {
            "type": "string",
            "description": "实验的Id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "description": "修改实验的部分信息(其中的字段有值表示修改为对应的值，为空表示不进行修改）",
            "name": "experiment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PatchExperimentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/copy": {
      "post": {
        "description": "复制一个已有的实验来创建一个新的实验",
        "tags": [
          "Experiment"
        ],
        "summary": "CopyExperiment",
        "operationId": "CopyExperiment",
        "parameters": [
          {
            "type": "string",
            "description": "实验ID",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "description": "复制后新建的实验的信息（其中的字段有值表示修改为对应的值，为空表示不进行修改）",
            "name": "experiment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PatchExperimentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/export_flow_json": {
      "get": {
        "description": "导出实验的工作流flowjson，导出结果为一个zip包",
        "tags": [
          "Experiment"
        ],
        "summary": "ExportExperimentFlowJson",
        "operationId": "ExportExperimentFlowJson",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "导出的实验定义"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Experiment cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/version": {
      "post": {
        "description": "新增一个实验版本（也就是将当前实验存为一个固定版本）",
        "tags": [
          "Experiment"
        ],
        "summary": "CreateExperimentVersion",
        "operationId": "CreateExperimentVersion",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "description": "新建实验的具体内容",
            "name": "experiment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateExperimentVersionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/version/{version_name}": {
      "get": {
        "description": "获取某个版本的实验信息（如果传入的版本为最新版本，同 GetExperiment 接口效果一样）",
        "tags": [
          "Experiment"
        ],
        "summary": "GetExperimentVersion",
        "operationId": "GetExperimentVersion",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "experiment version name",
            "name": "version_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentWithoutPipeline"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "删除某个版本的实验",
        "tags": [
          "Experiment"
        ],
        "summary": "DeleteExperimentVersion",
        "operationId": "DeleteExperimentVersion",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "experiment version name",
            "name": "version_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "description": "修改实验版本的部分信息",
        "tags": [
          "Experiment"
        ],
        "summary": "PatchExperimentVersion",
        "operationId": "PatchExperimentVersion",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "experiment version name",
            "name": "version_name",
            "in": "path",
            "required": true
          },
          {
            "description": "修改实验版本的部分信息(其中的字段有值表示修改为对应的值，为空表示不进行修改）",
            "name": "experiment_version",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PatchExperimentVersionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/version/{version_name}/flow_json": {
      "get": {
        "description": "获取某个版本的实验的工作流描述，也就是所谓的flowjson",
        "tags": [
          "Experiment"
        ],
        "summary": "GetExperimentVersionFlowJson",
        "operationId": "GetExperimentVersionFlowJson",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "experiment version name",
            "name": "version_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "导出的实验工作流描述",
            "schema": {
              "$ref": "#/definitions/FlowJsonResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Experiment cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/version/{version_name}/global_variables_str": {
      "get": {
        "description": "获取某个版本的实验的工作流的默认全局变量",
        "tags": [
          "Experiment"
        ],
        "summary": "GetExperimentVersionGlobalVariablesStr",
        "operationId": "GetExperimentVersionGlobalVariablesStr",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "experiment version name",
            "name": "version_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "导出的实验工作流描述",
            "schema": {
              "$ref": "#/definitions/FlowJsonResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Experiment cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/version_names": {
      "get": {
        "description": "列出某个实验的所有可用版本名称",
        "tags": [
          "Experiment"
        ],
        "summary": "ListExperimentVersionNames",
        "operationId": "ListExperimentVersionNames",
        "parameters": [
          {
            "type": "string",
            "description": "实验的Id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "过滤可以发布的实验版本",
            "name": "can_deploy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "实验所有可用版本名称",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/versions": {
      "get": {
        "description": "获取实验的所有版本信息",
        "tags": [
          "Experiment"
        ],
        "summary": "ListExperimentVersions",
        "operationId": "ListExperimentVersions",
        "parameters": [
          {
            "minLength": 1,
            "type": "string",
            "description": "实验ID",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "根据“实验版本号”过滤实验版本列表",
            "name": "version_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“更新时间的开始”过滤实验列表",
            "name": "update_time_st",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“更新时间的结束”过滤实验列表",
            "name": "update_time_ed",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "default": 1,
            "description": "分页查询的page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "default": 10,
            "description": "分页查询的size",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListExperimentsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run": {
      "post": {
        "description": "根据传入的实验ID和版本信息，创建了一个基于该实验的执行",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "CreateExperimentRun",
        "operationId": "CreateExperimentRun",
        "parameters": [
          {
            "name": "experimentRunRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateExperimentRunRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentRunResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}": {
      "get": {
        "description": "根据传入的实验执行ID，获取实验执行详情",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "GetExperimentRun",
        "operationId": "GetExperimentRun",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentRun"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "根据传入的实验执行ID，删除该实验执行(只有终态的实验执行才能被删除，否则会报错；非终态的应该等其执行完或者终止执行）",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "DeleteExperimentRun",
        "operationId": "DeleteExperimentRun",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}/flow_json": {
      "get": {
        "description": "根据传入的实验执行ID，获取实验执行的flowjson",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "GetExperimentRunFlowJson",
        "operationId": "GetExperimentRunFlowJson",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FlowJsonResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}/kill": {
      "post": {
        "description": "根据传入的实验执行ID，终止该运行",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "KillExperimentRun",
        "operationId": "KillExperimentRun",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}/node_executions": {
      "get": {
        "description": "根据传入的实验执行ID，获取实验执行的节点状态信息",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "GetExperimentRunNodeExecutions",
        "operationId": "GetExperimentRunNodeExecutions",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NodeExecutionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}/retry": {
      "post": {
        "description": "根据传入的实验执行ID，新建一个新的实验执行",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "RetryExperimentRun",
        "operationId": "RetryExperimentRun",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentRunResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}/status": {
      "get": {
        "description": "根据传入的实验执行ID，获取实验执行的状态",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "GetExperimentRunStatus",
        "operationId": "GetExperimentRunStatus",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentRunStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}/{node_id}/logs": {
      "get": {
        "description": "根据传入的实验执行ID，节点ID获取对应的日志",
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "ExperimentRun"
        ],
        "summary": "GetExperimentRunNodeLogs",
        "operationId": "GetExperimentRunNodeLogs",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "节点的Id",
            "name": "node_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_runs": {
      "get": {
        "description": "根据传入的过滤参数，获取实验执行列表",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "ListExperimentRuns",
        "operationId": "ListExperimentRuns",
        "parameters": [
          {
            "type": "string",
            "description": "获取实验的执行记录，那个实验的Id",
            "name": "exp_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "根据“实验版本”过滤实验执行列表",
            "name": "exp_version_name",
            "in": "query"
          },
          {
            "enum": [
              "Initializing",
              "Running",
              "Succeed",
              "Failed",
              "Cancelled"
            ],
            "type": "string",
            "description": "根据“执行状态”过滤实验执行列表",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“提交时间的开始”过滤实验列表",
            "name": "create_time_st",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“提交时间的结束”过滤实验列表",
            "name": "create_time_ed",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "default": 1,
            "description": "分页查询的page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "default": 10,
            "description": "分页查询的size",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListExperimentRunsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_test": {
      "post": {
        "description": "仅仅是为了测试接口",
        "tags": [
          "Experiment"
        ],
        "summary": "CreateExperimentTest",
        "operationId": "CreateExperimentTest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiments": {
      "get": {
        "description": "根据传入的过滤参数，获取实验列表",
        "tags": [
          "Experiment"
        ],
        "summary": "ListExperiments",
        "operationId": "ListExperiments",
        "parameters": [
          {
            "type": "string",
            "description": "根据“实验名称”过滤实验列表，支持模糊搜索",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“实验标签”过滤实验列表，多个标签用逗号隔开",
            "name": "tag",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“来源系统”过滤实验列表",
            "name": "source_system",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“所属项目组（ID）”过滤实验列表",
            "name": "group_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“所属项目组（名字）”过滤实验列表",
            "name": "group_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“创建人”过滤实验列表",
            "name": "create_user",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“创建时间的结束”过滤实验列表",
            "name": "create_time_st",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“创建时间的结束”过滤实验列表",
            "name": "create_time_ed",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“更新时间的开始”过滤实验列表",
            "name": "update_time_st",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“更新时间的结束”过滤实验列表",
            "name": "update_time_ed",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“（DSS）工作流项目”过滤实验列表",
            "name": "dss_project_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“（DSS）工作流名称”过滤实验列表",
            "name": "dss_flow_name",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "default": 1,
            "description": "分页查询的page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "default": 10,
            "description": "分页查询的size",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListExperimentsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "批量删除实验",
        "tags": [
          "Experiment"
        ],
        "summary": "BatchDeleteExperiments",
        "operationId": "BatchDeleteExperiments",
        "parameters": [
          {
            "name": "BatchDeleteExperimentsRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BatchDeleteExperimentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/eventsender_node_content": {
      "get": {
        "description": "获取可视化编辑/工作流中的信号发送节点的描述数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineEventSenderNodeContent",
        "operationId": "GetPipelineEventSenderNodeContent",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSenderNodeContent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/global_variables": {
      "get": {
        "description": "获取可视化编辑/工作流中的全局变量的数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineGlobalVariables",
        "operationId": "GetPipelineGlobalVariables",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GlobalVariable"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/global_variables/model": {
      "get": {
        "description": "获取可视化编辑/工作流中的全局变量的模型变量数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineGlobalVariablesModel",
        "operationId": "GetPipelineGlobalVariablesModel",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/global_variables/process_line": {
      "get": {
        "description": "获取可视化编辑/工作流中的全局变量的加工线变量数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineGlobalVariablesProcessLine",
        "operationId": "GetPipelineGlobalVariablesProcessLine",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProcessLine"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/gpu_node_manifest": {
      "get": {
        "description": "获取可视化编辑/工作流中的GPU节点的描述数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineGPUNodeManifest",
        "operationId": "GetPipelineGPUNodeManifest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GPUNodeManifest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/modelpredict_node_manifest": {
      "get": {
        "description": "获取可视化编辑/工作流中的模型预测节点的描述数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineModelPredictNodeManifest",
        "operationId": "GetPipelineModelPredictNodeManifest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelPredictNodeManifest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/processline_node_manifest": {
      "get": {
        "description": "获取可视化编辑/工作流中的加工线节点的描述数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineProcessLineNodeManifest",
        "operationId": "GetPipelineProcessLineNodeManifest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProcessLineNodeManifest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BatchDeleteExperimentsRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CodeUploadResponse": {
      "type": "object",
      "properties": {
        "s3path": {
          "description": "S3 Path",
          "type": "string"
        }
      }
    },
    "ComputeResource": {
      "type": "object",
      "properties": {
        "cpus": {
          "type": "number",
          "title": "该计算资源类型所申请的cpu个数"
        },
        "gpus": {
          "type": "number",
          "title": "该计算资源所申请的gpu个数"
        },
        "memory": {
          "type": "string",
          "title": "该计算资源类型所申请的内存大小"
        },
        "nums": {
          "type": "number",
          "title": "该计算资源类型的个数"
        }
      }
    },
    "CreateExperimentRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "cluster_type": {
          "description": "实验所属的集群类型，默认为\"BDAP\"；可选枚举值为 \"BDAP\" \"BDP\"",
          "type": "string",
          "default": "BDAP",
          "enum": [
            "BDAP",
            "BDP"
          ]
        },
        "description": {
          "description": "创建实验的描述",
          "type": "string"
        },
        "dss_info": {
          "description": "DSS相关的信息，如果实验的origin_system是DSS，则需要传入该字段",
          "type": "object",
          "$ref": "#/definitions/DSSInfo"
        },
        "flow_json": {
          "description": "创建的实验的工作流",
          "type": "string"
        },
        "flow_json_upload_id": {
          "description": "创建的实验的工作流上传的id（来自UploadExperimentFlowJson接口的返回）",
          "type": "string"
        },
        "group_id": {
          "description": "创建实验所属的项目组ID(理论上传group_id就够了，但是group的相关接口暂时不支持byId查询，所以暂时需要传group_id和group_name)",
          "type": "string"
        },
        "group_name": {
          "description": "创建实验所属的项目组名字(理论上传group_id就够了，但是group的相关接口暂时不支持byId查询，所以暂时需要传group_id和group_name)",
          "type": "string"
        },
        "name": {
          "description": "创建实验的名称",
          "type": "string",
          "minLength": 1
        },
        "source_system": {
          "description": "表示实验在哪个系统创建的, 默认为\"MLSS\"；可选的枚举值为 \"WTSS\" \"DSS\" \"MLSS\"",
          "type": "string",
          "default": "MLSS",
          "enum": [
            "MLSS",
            "DSS",
            "WTSS"
          ]
        },
        "tags": {
          "description": "创建实验的标签",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateExperimentResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "返回创建的实验的id",
          "type": "string"
        }
      }
    },
    "CreateExperimentRunRequest": {
      "type": "object",
      "properties": {
        "exp_id": {
          "description": "所要执行的实验ID",
          "type": "string"
        },
        "exp_version_name": {
          "description": "所要执行的实验的版本名字",
          "type": "string"
        },
        "run_config": {
          "description": "执行配置（现在主要是动态设置执行时候的全局变量的值）",
          "type": "object",
          "$ref": "#/definitions/RunConfig"
        }
      }
    },
    "CreateExperimentRunResponse": {
      "type": "object",
      "properties": {
        "create_time": {
          "description": "执行创建的时候/执行提交的时间",
          "type": "string",
          "format": "date-time"
        },
        "create_user": {
          "description": "执行创建人",
          "type": "string"
        },
        "end_time": {
          "description": "执行结束的时间",
          "type": "string",
          "format": "date-time"
        },
        "exp_id": {
          "description": "执行的实验ID",
          "type": "string"
        },
        "exp_run_id": {
          "description": "实验执行记录的ID",
          "type": "string"
        },
        "exp_version_name": {
          "description": "执行的实验的版本名字",
          "type": "string"
        }
      }
    },
    "CreateExperimentVersionRequest": {
      "type": "object",
      "properties": {
        "description": {
          "description": "固化当前版本的同时修改其描述",
          "type": "string"
        }
      }
    },
    "CreateExperimentVersionResponse": {
      "type": "object",
      "properties": {
        "archived_version_name": {
          "description": "返回固化的版本",
          "type": "string"
        },
        "latest_version_name": {
          "description": "返回当前最新的版本（一般是固化的版本+1）",
          "type": "string"
        }
      }
    },
    "DSSInfo": {
      "type": "object",
      "properties": {
        "flow_id": {
          "type": "number",
          "format": "int64"
        },
        "flow_name": {
          "type": "string"
        },
        "flow_version": {
          "type": "string"
        },
        "project_id": {
          "type": "number",
          "format": "int64"
        },
        "project_name": {
          "type": "string"
        },
        "workspace_id": {
          "description": "workspace id",
          "type": "integer"
        },
        "workspace_name": {
          "description": "workspace name,choose next value, \"bdapWorkspace\" \"bdapWorkspace0x\"",
          "type": "string",
          "default": ""
        }
      }
    },
    "DataConfig": {
      "type": "object",
      "properties": {
        "mapping_path": {
          "type": "string",
          "title": "将存储挂载进容器内部的映射路径, 当前为空表示默认的映射"
        },
        "mlss_platform_parent_dir": {
          "description": "当前输出的存储根目录需要和输入的存储根目录一致",
          "type": "string",
          "title": "当data_source_type为 MLSSPlatformStorage，需要填充该字段的内容，平台存储根目录"
        },
        "mlss_platform_sub_dir": {
          "type": "string",
          "title": "当data_source_type为 MLSSPlatformStorage，需要填充该字段的内容，平台存储子目录"
        },
        "source_type": {
          "type": "string",
          "title": "数据来源类型",
          "enum": [
            "MLSSPlatformStorage"
          ]
        }
      }
    },
    "DependResources": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数配置-模型用户组"
        },
        "model_id": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数配置-模型名称"
        },
        "model_version_id": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数配置-模型版本"
        },
        "processline_id": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数配置-加工线名称"
        },
        "processline_version_id": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数配置-加工线版本"
        },
        "type": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数配置-物料类型",
          "enum": [
            "MODEL"
          ]
        }
      }
    },
    "DeploySetting": {
      "type": "object",
      "properties": {
        "can_deploy_as_offline_service": {
          "description": "是否可发布为离线服务",
          "type": "boolean",
          "default": false
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "error": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "EventSenderNodeContent": {
      "type": "object",
      "properties": {
        "dcn": {
          "type": "string",
          "title": "现在固定为FA0?"
        },
        "exp_id": {
          "type": "string",
          "title": "信号发送节点所属的工作流所属的实验的id"
        },
        "exp_name": {
          "type": "string",
          "title": "信号发送节点所属的工作流所属的实验的名称"
        },
        "group_id": {
          "type": "string",
          "title": "属性信息-项目组的id"
        },
        "group_name": {
          "type": "string",
          "title": "属性信息-项目组的名称"
        },
        "msg_body": {
          "type": "string",
          "title": "属性信息-msg.body"
        },
        "msg_type": {
          "type": "string",
          "title": "属性信息-msg.messageType"
        },
        "name": {
          "type": "string",
          "title": "信号发送节点的名称"
        },
        "service_id": {
          "type": "string",
          "title": "现在固定为 11200257 ?"
        }
      }
    },
    "ExperimentRun": {
      "type": "object",
      "properties": {
        "create_time": {
          "description": "实验执行的提交时间",
          "type": "string",
          "format": "date-time"
        },
        "create_user": {
          "description": "实验执行的提交者",
          "type": "string"
        },
        "end_time": {
          "description": "实验执行的结束时间",
          "type": "string",
          "format": "date-time"
        },
        "execute_status": {
          "description": "实验执行的状态",
          "type": "string",
          "enum": [
            "Initializing",
            "Running",
            "Succeed",
            "Failed",
            "Cancelled",
            "Deleted"
          ]
        },
        "exp_id": {
          "description": "实验执行记录关联的实验的ID",
          "type": "string"
        },
        "exp_run_id": {
          "description": "实验执行记录的ID",
          "type": "string"
        },
        "exp_version_name": {
          "description": "实验执行记录关联的实验的版本名",
          "type": "string"
        }
      }
    },
    "ExperimentRunStatus": {
      "type": "object",
      "properties": {
        "status": {
          "description": "实验执行的状态",
          "type": "string",
          "enum": [
            "Initializing",
            "Running",
            "Succeed",
            "Failed",
            "Cancelled",
            "Deleted"
          ]
        }
      }
    },
    "ExperimentWithoutPipeline": {
      "description": "返回获取、修改后、复制后等操作的实验",
      "type": "object",
      "properties": {
        "create_time": {
          "description": "实验的创建时间",
          "type": "string",
          "format": "date-time"
        },
        "create_user": {
          "description": "实验的创建人",
          "type": "string"
        },
        "deploy_setting": {
          "description": "实验的发布配置信息",
          "type": "object",
          "$ref": "#/definitions/DeploySetting"
        },
        "description": {
          "description": "实验描述",
          "type": "string"
        },
        "dss_info": {
          "description": "如果该实验来自DSS系统，其关联的DSS信息",
          "type": "object",
          "$ref": "#/definitions/DSSInfo"
        },
        "group_id": {
          "description": "实验所属的项目组ID",
          "type": "string"
        },
        "group_name": {
          "description": "实验所属的项目组",
          "type": "string"
        },
        "id": {
          "description": "实验Id",
          "type": "string"
        },
        "latest_execute_time": {
          "description": "实验最近的执行时间",
          "type": "string"
        },
        "name": {
          "description": "实验名称",
          "type": "string"
        },
        "source_system": {
          "description": "实验的来源系统",
          "type": "string",
          "default": "MLSS",
          "enum": [
            "MLSS",
            "DSS",
            "WTSS"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "update_time": {
          "description": "实验最后的操作时间",
          "type": "string",
          "format": "date-time"
        },
        "update_user": {
          "description": "实验最后的操作人",
          "type": "string"
        },
        "version_name": {
          "description": "实验的版本",
          "type": "string"
        }
      }
    },
    "FlowJsonResponse": {
      "type": "object",
      "properties": {
        "flow_json": {
          "type": "string",
          "title": "实验的工作流描述，所谓的flowjson"
        }
      }
    },
    "FrameWork": {
      "description": "xxx",
      "type": "object",
      "properties": {
        "command": {
          "type": "string",
          "title": "参数设置-任务执行设置-执行入口"
        },
        "name": {
          "type": "string",
          "title": "目前开发测试环境固定为\"uat.sf.dockerhub.stgwebank/webank/mlss-di\"; 生产环境待确定"
        },
        "version": {
          "type": "string",
          "title": "[镜像设置为标准情况下，下拉接口获取数据] 资源设置-镜像选择"
        }
      }
    },
    "GPUNodeDataStores": {
      "type": "object",
      "properties": {
        "connection": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "title": "现在固定为host-mount"
            },
            "path": {
              "type": "string",
              "title": "[下拉接口获取数据] 资源设置-目录设置-数据根目录"
            },
            "type": {
              "type": "string",
              "title": "现在固定为host_mount"
            }
          }
        },
        "id": {
          "type": "string",
          "title": "目前固定为hostmount"
        },
        "training_data": {
          "type": "object",
          "title": "其container字段对应 资源设置-目录设置-数据子目录",
          "$ref": "#/definitions/GPUNodeDataStoresSubDirectory"
        },
        "training_results": {
          "type": "object",
          "title": "其container字段对应 资源设置-目录设置-结果子目录",
          "$ref": "#/definitions/GPUNodeDataStoresSubDirectory"
        },
        "training_workspace": {
          "type": "object",
          "title": "其container字段目前默认为workspace，只有当 参数设置-任务执行设置-执行代码设置 为storagePath时，其值来自  参数设置-任务执行设置-训练代码子目录",
          "$ref": "#/definitions/GPUNodeDataStoresSubDirectory"
        },
        "type": {
          "type": "string",
          "title": "目前固定为mount_volume"
        }
      }
    },
    "GPUNodeDataStoresSDirectory": {
      "description": "存储根目录",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "目前固定为hostmount"
        },
        "name": {
          "type": "string",
          "title": "目前固定为host-mount"
        },
        "path": {
          "type": "string",
          "title": "资源设置-存储根目录"
        },
        "type": {
          "type": "string",
          "title": "存储的类型（目前只支持host_mount）",
          "enum": [
            "host_mount"
          ]
        }
      }
    },
    "GPUNodeDataStoresSubDirectory": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string",
          "title": "子目录的路径"
        }
      }
    },
    "GPUNodeManifest": {
      "type": "object",
      "properties": {
        "code_path": {
          "type": "string",
          "title": "[调用接口获取数据] 参数设置-任务执行设置-执行代码设置 为codeFile时，调用 codeUpload 接口返回的s3Path"
        },
        "code_selector": {
          "type": "string",
          "title": "参数设置-任务执行设置-执行代码设置（storagePath对应训练代码子目录；codeFile对应手动上传）",
          "enum": [
            "storagePath",
            "codeFile"
          ]
        },
        "cpus": {
          "type": "number",
          "format": "int64",
          "title": "资源设置-计算资源设置-计算任务CPU"
        },
        "data_stores": {
          "title": "资源设置-目录设置",
          "$ref": "#/definitions/GPUNodeDataStores"
        },
        "depend_resources": {
          "type": "object",
          "title": "参数设置-任务执行设置-高级参数设置",
          "$ref": "#/definitions/DependResources"
        },
        "description": {
          "type": "string",
          "title": "基本信息-节点描述"
        },
        "evaluation_metrics": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "title": "目前固定为fluent-bit"
            }
          }
        },
        "exp_id": {
          "type": "string",
          "title": "该节点所属工作流所属的MLSS实验的id"
        },
        "exp_name": {
          "type": "string",
          "title": "该节点所属工作流所属的MLSS实验的name"
        },
        "fileName": {
          "type": "string",
          "title": "[调用接口获取数据] 参数设置-任务执行设置-执行代码设置 为codeFile时，上传文件的文件名"
        },
        "framework": {
          "title": "资源设置-镜像设置 和 参数设置-执行入口 相关信息",
          "$ref": "#/definitions/FrameWork"
        },
        "gpus": {
          "description": "资源设置-计算资源设置-计算任务GPU",
          "type": "number",
          "format": "int64"
        },
        "ignore_fail": {
          "type": "number",
          "format": "int64",
          "title": "参数设置-任务执行设置-高级参数设置-忽略失败状态（1表示是，0表示否）"
        },
        "job_type": {
          "type": "string",
          "title": "资源设置-计算资源设置-任务类型（Local表示单机; dist-tf表示分布式）",
          "enum": [
            "Local",
            "dist-tf"
          ]
        },
        "learners": {
          "type": "number",
          "format": "int64",
          "title": "当job_type为dist_tf时，资源设置-计算资源设置-计算任务数"
        },
        "memory": {
          "type": "string",
          "title": "资源设置-计算资源设置-计算任务内存"
        },
        "name": {
          "type": "string",
          "title": "基本信息-节点名"
        },
        "namespace": {
          "type": "string",
          "title": "[下拉接口获取数据] 资源设置-计算资源设置-命名空间"
        },
        "proxy_user": {
          "type": "string",
          "title": "[下拉接口获取数据] 基本信息-代理用户设置开启-代理用户设置"
        },
        "ps_cpu": {
          "type": "number",
          "format": "int64",
          "title": "当job_type为dist_tf时，资源设置-计算资源设置-参数服务器CPU"
        },
        "ps_image": {
          "type": "number",
          "format": "int64",
          "title": "当job_type为dist_tf时，资源设置-计算资源设置-参数服务器镜像"
        },
        "ps_imageType": {
          "type": "string",
          "title": "当job_type为dist_tf时，资源设置-计算资源设置-参数服务器镜像类型",
          "enum": [
            "Standard",
            "Custom"
          ]
        },
        "ps_memory": {
          "type": "string",
          "title": "当job_type为dist_tf时，资源设置-计算资源设置-参数服务器内存"
        },
        "pss": {
          "type": "number",
          "format": "int64",
          "title": "当job_type为dist_tf时，资源设置-计算资源设置-参数服务器数"
        },
        "python_hdfs_path": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数设置-python环境配置(其value来自哪里todo)"
        },
        "version": {
          "type": "string",
          "title": "目前固定为 1.0"
        }
      }
    },
    "GetDSSJumpMLSSUserResponse": {
      "type": "object",
      "properties": {
        "user_name": {
          "description": "用户名",
          "type": "string"
        }
      }
    },
    "GetExperimentGlobalVariablesStrResponse": {
      "type": "object",
      "properties": {
        "global_variables_str": {
          "type": "string",
          "title": "实验的工作流全局变量"
        }
      }
    },
    "GlobalVariable": {
      "type": "object",
      "properties": {
        "key": {
          "description": "全局变量，变量的key",
          "type": "string"
        },
        "type": {
          "description": "全局变量，变量的类型",
          "type": "string",
          "enum": [
            "string",
            "number",
            "model",
            "processline"
          ]
        },
        "value": {
          "description": "全局变量的值，根据类型的不同，可能是String, Number, Model, ProcessLine; Model的数据结构请看GetPipelineGlobalVariablesModel的返回，PorcessLine的数据结构请看GetPipelineGlobalVariablesProcessLine的返回",
          "type": "object",
          "enum": [
            "String",
            "Number",
            "Model",
            "ProcessLine"
          ]
        }
      }
    },
    "ListExperimentRunsResponse": {
      "type": "object",
      "properties": {
        "experiment_runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExperimentRun"
          }
        },
        "page_number": {
          "type": "number",
          "format": "int64"
        },
        "page_size": {
          "type": "number",
          "format": "int64"
        },
        "total": {
          "type": "number",
          "format": "int64"
        },
        "total_page": {
          "type": "number",
          "format": "int64"
        }
      }
    },
    "ListExperimentsResponse": {
      "type": "object",
      "properties": {
        "experiments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExperimentWithoutPipeline"
          }
        },
        "page_number": {
          "type": "number",
          "format": "int64"
        },
        "page_size": {
          "type": "number",
          "format": "int64"
        },
        "total": {
          "type": "number",
          "format": "int64"
        },
        "total_page": {
          "type": "number",
          "format": "int64"
        }
      }
    },
    "MLSSPlatformStorageConfig": {
      "type": "object",
      "properties": {
        "parent_dir": {
          "type": "string",
          "title": "存储根目录"
        },
        "sub_dir": {
          "type": "string",
          "title": "存储子目录"
        }
      }
    },
    "MetaData": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "节点的描述"
        },
        "exp_id": {
          "type": "string",
          "title": "节点所属的实验的ID（不需用户配置）"
        },
        "exp_name": {
          "type": "string",
          "title": "节点所属的实验的Name（不需用户配置）"
        },
        "name": {
          "type": "string",
          "title": "节点的名称"
        },
        "namespace": {
          "type": "string",
          "title": "节点所在的namespace（同gpu节点的namespace）"
        }
      }
    },
    "Model": {
      "type": "object",
      "title": "Model类型的全局变量的值类型",
      "properties": {
        "group_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型用户组"
        },
        "model_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型名称"
        },
        "model_version_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型版本"
        }
      }
    },
    "ModelInput": {
      "type": "object",
      "title": "Model类型的全局变量的值类型",
      "properties": {
        "group_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型用户组"
        },
        "model_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型名称"
        },
        "model_version_id": {
          "type": "number",
          "format": "int64",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型版本"
        },
        "source_type": {
          "description": "选择全局变量要求在全局参数里定义了模型类型的变量，这里便可以选择该变量，然后在执行工作流和发布工作流的时候可以动态修改该变量；选择自定义则是普通的设置模型相关的设置",
          "type": "string",
          "title": "模型数据的来源类型，枚举值",
          "enum": [
            "Direct",
            "Variable"
          ]
        },
        "variable_key": {
          "type": "string",
          "title": "当source_type为variable的时候，需填充该值为全局变量的某个model类型的key"
        }
      }
    },
    "ModelPredictNodeInput": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "title": "数据输入",
          "$ref": "#/definitions/DataConfig"
        },
        "model": {
          "type": "object",
          "title": "模型输入",
          "$ref": "#/definitions/ModelInput"
        }
      }
    },
    "ModelPredictNodeManifest": {
      "type": "object",
      "properties": {
        "compute_resources": {
          "type": "object",
          "title": "节点的计算资源信息",
          "properties": {
            "worker": {
              "type": "object",
              "$ref": "#/definitions/ComputeResource"
            }
          }
        },
        "input": {
          "type": "object",
          "title": "节点输入信息",
          "$ref": "#/definitions/ModelPredictNodeInput"
        },
        "meta_data": {
          "type": "object",
          "title": "节点的元数据信息",
          "$ref": "#/definitions/MetaData"
        },
        "output": {
          "type": "object",
          "title": "节点的输出信息",
          "$ref": "#/definitions/Output"
        },
        "run_environment": {
          "type": "object",
          "title": "节点的运行环境信息",
          "$ref": "#/definitions/RunEnvironment"
        }
      }
    },
    "NodeExecutionInfo": {
      "type": "object",
      "properties": {
        "exec_run_id": {
          "description": "实验执行的id",
          "type": "string"
        },
        "node_id": {
          "description": "节点的id",
          "type": "string"
        },
        "node_status": {
          "description": "节点的执行状态",
          "type": "string"
        },
        "training_task_id": {
          "description": "训练任务的id，通过该id查询日志",
          "type": "string"
        }
      }
    },
    "NodeExecutionsResponse": {
      "type": "object",
      "properties": {
        "failed_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeExecutionInfo"
          }
        },
        "pending_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeExecutionInfo"
          }
        },
        "running_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeExecutionInfo"
          }
        },
        "skipped_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeExecutionInfo"
          }
        },
        "succeed_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeExecutionInfo"
          }
        }
      }
    },
    "Output": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object",
          "title": "数据输出",
          "$ref": "#/definitions/DataConfig"
        }
      }
    },
    "PatchExperimentRequest": {
      "type": "object",
      "properties": {
        "deploy_setting": {
          "description": "修改的实验的发布配置",
          "type": "object",
          "$ref": "#/definitions/DeploySetting"
        },
        "description": {
          "description": "修改实验的描述.",
          "type": "string"
        },
        "flow_json": {
          "description": "修改的实验的工作流",
          "type": "string"
        },
        "group_id": {
          "description": "修改实验所属的项目组ID.(理论上传group_id就够了，但是group的相关接口暂时不支持byId查询，所以暂时需要传group_id和group_name)",
          "type": "string"
        },
        "group_name": {
          "description": "修改实验所属的项目组名字.(理论上传group_id就够了，但是group的相关接口暂时不支持byId查询，所以暂时需要传group_id和group_name)",
          "type": "string"
        },
        "name": {
          "description": "修改实验的名称.",
          "type": "string"
        },
        "tags": {
          "description": "修改的实验的标签",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PatchExperimentVersionRequest": {
      "type": "object",
      "properties": {
        "description": {
          "description": "修改实验版本的描述.",
          "type": "string"
        }
      }
    },
    "ProcessLine": {
      "description": "加工线类型的全局变量的值类型",
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型用户组/加工线用户组"
        },
        "processline_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-加工线名称"
        },
        "processline_version_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-加工线版本"
        }
      }
    },
    "ProcessLineInput": {
      "type": "object",
      "title": "加工线类型的输入数据结构",
      "properties": {
        "group_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型用户组/加工线用户组"
        },
        "processline_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-加工线名称"
        },
        "processline_version_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-加工线版本"
        },
        "source_type": {
          "description": "选择全局变量要求在全局参数里定义了加工线类型的变量，这里便可以选择该变量，然后在执行工作流和发布工作流的时候可以动态修改该变量；选择自定义则是普通的设置加工线相关的设置",
          "type": "string",
          "title": "模型数据的来源类型，枚举值",
          "enum": [
            "direct",
            "variable"
          ]
        },
        "variable_key": {
          "type": "string",
          "title": "当source_type为variable的时候，需填充该值为全局变量的某个model类型的key"
        }
      }
    },
    "ProcessLineNodeInput": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "title": "数据输入",
          "$ref": "#/definitions/DataConfig"
        },
        "processline": {
          "type": "object",
          "title": "模型输入",
          "$ref": "#/definitions/ProcessLineInput"
        }
      }
    },
    "ProcessLineNodeManifest": {
      "type": "object",
      "properties": {
        "compute_resources": {
          "type": "object",
          "title": "节点的计算资源信息",
          "additionalProperties": {
            "$ref": "#/definitions/ComputeResource"
          }
        },
        "input": {
          "type": "object",
          "title": "节点输入信息",
          "$ref": "#/definitions/ProcessLineNodeInput"
        },
        "meta_data": {
          "type": "object",
          "title": "节点的元数据信息",
          "$ref": "#/definitions/MetaData"
        },
        "output": {
          "type": "object",
          "title": "节点的输出信息",
          "$ref": "#/definitions/Output"
        },
        "run_environment": {
          "type": "object",
          "title": "节点的运行环境信息",
          "$ref": "#/definitions/RunEnvironment"
        }
      }
    },
    "RunConfig": {
      "type": "object",
      "properties": {
        "global_variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlobalVariable"
          }
        },
        "wtss_variables": {
          "type": "object",
          "$ref": "#/definitions/WTSSVariables"
        }
      }
    },
    "RunEnvironment": {
      "type": "object",
      "properties": {
        "code_path": {
          "type": "string",
          "title": "如果用户上传代码，这里就是上传代码接口返回的代码包路径(同gpu节点的code_path)"
        },
        "entry_point": {
          "type": "string",
          "title": "镜像的入口命令(同gpu节点的command)"
        },
        "image_name": {
          "type": "string",
          "title": "镜像的名字(同gpu节点一样暂时是固定的)"
        },
        "image_version": {
          "type": "string",
          "title": "镜像的版本(同gpu节点的镜像版本)"
        }
      }
    },
    "UploadExperimentFlowJsonResponse": {
      "type": "object",
      "properties": {
        "upload_id": {
          "description": "上传实验flowjosn得到的上传id，可以用于CreateExperiment，id有效期为xx分钟",
          "type": "string"
        }
      }
    },
    "WTSSVariables": {
      "type": "object",
      "properties": {
        "run_date": {
          "description": "wtss的变量，run_date",
          "type": "string"
        },
        "run_date_std": {
          "description": "wtss的变量，run_date_std",
          "type": "string"
        },
        "run_mon": {
          "description": "wtss的变量，run_mon",
          "type": "string"
        },
        "run_mon_end": {
          "description": "wtss的变量，run_mon_end",
          "type": "string"
        },
        "run_mon_end_std": {
          "description": "wtss的变量，run_mon_end_std",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "description": "Basic Autentication credentials for using the API.",
      "type": "basic"
    },
    "basicAuthToken": {
      "description": "Watson Developer Cloud Basic Autentication. See [here](https://www.ibm.com/smarterplanet/us/en/ibmwatson/developercloud/doc/getting_started/gs-tokens.shtml) for more information",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "watsonAuthToken": {
      "description": "Watson Developer Cloud Token Autentication. See [here](https://www.ibm.com/smarterplanet/us/en/ibmwatson/developercloud/doc/getting_started/gs-tokens.shtml) for more information",
      "type": "apiKey",
      "name": "X-Watson-Authorization-Token",
      "in": "header"
    },
    "watsonAuthTokenQuery": {
      "description": "Watson Developer Cloud Token Autentication. See [here](https://www.ibm.com/smarterplanet/us/en/ibmwatson/developercloud/doc/getting_started/gs-tokens.shtml) for more information",
      "type": "apiKey",
      "name": "watson-token",
      "in": "query"
    }
  },
  "security": [
    {
      "basicAuthToken": []
    },
    {
      "watsonAuthToken": []
    },
    {
      "watsonAuthTokenQuery": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Prophecis Rest Service v2\n",
    "title": "Prophecis Rest Service v2",
    "version": "1.0.0"
  },
  "host": "di.prophecis.com",
  "basePath": "/",
  "paths": {
    "/di/v2/experiment": {
      "post": {
        "description": "创建一个新实验",
        "tags": [
          "Experiment"
        ],
        "summary": "CreateExperiment",
        "operationId": "CreateExperiment",
        "parameters": [
          {
            "description": "新建实验的具体内容",
            "name": "experiment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateExperimentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/code_upload": {
      "post": {
        "description": "upload code.zip to s3",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Experiment"
        ],
        "summary": "CodeUpload",
        "operationId": "CodeUpload",
        "parameters": [
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CodeUploadResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Code ZIP upload failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/dss_flow_names": {
      "get": {
        "description": "列出所有的实验的dss工作流名称",
        "tags": [
          "Experiment"
        ],
        "summary": "ListExperimentDSSFlowNames",
        "operationId": "ListExperimentDSSFlowNames",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "dss工作流名称列表",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/dss_jump_mlss_user": {
      "get": {
        "description": "dss跳转到mlss的获取用户的name",
        "tags": [
          "Experiment"
        ],
        "summary": "GetDSSJumpMLSSUser",
        "operationId": "GetDSSJumpMLSSUser",
        "parameters": [
          {
            "type": "string",
            "description": "dss的url后带的dss_user_ticket_id内容",
            "name": "dss_user_ticket_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "dss的url后带的dss_workspace_id内容",
            "name": "dss_workspace_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetDSSJumpMLSSUserResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Get UserInfo Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/dss_project_names": {
      "get": {
        "description": "列出所有的实验的dss项目名称",
        "tags": [
          "Experiment"
        ],
        "summary": "ListExperimentDSSProjectNames",
        "operationId": "ListExperimentDSSProjectNames",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "dss项目名称列表",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/source_systems": {
      "get": {
        "description": "列出所有的实验来源类型",
        "tags": [
          "Experiment"
        ],
        "summary": "ListExperimentSourceSystems",
        "operationId": "ListExperimentSourceSystems",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "实验来源类型列表",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/upload": {
      "post": {
        "description": "通过上传方式创建一个实验",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Experiment"
        ],
        "summary": "CreateExperimentByUpload",
        "operationId": "CreateExperimentByUpload",
        "parameters": [
          {
            "type": "file",
            "description": "上传的表示实验工作流的zip文件，zip文件里应该包含一个名为flow.json的json文件",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "上传文件的文件名",
            "name": "fileName",
            "in": "formData"
          },
          {
            "minLength": 1,
            "type": "string",
            "description": "创建实验的名称",
            "name": "name",
            "in": "formData",
            "required": true
          },
          {
            "minLength": 1,
            "type": "string",
            "description": "创建实验所属的项目组",
            "name": "group_name",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "创建实验的描述",
            "name": "description",
            "in": "formData"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "创建实验的标签",
            "name": "tags",
            "in": "formData"
          },
          {
            "enum": [
              "MLSS",
              "DSS",
              "WTSS"
            ],
            "type": "string",
            "default": "MLSS",
            "description": "表示实验在哪个系统创建的, 默认为\"MLSS\"；可选的枚举值为 \"WTSS\" \"DSS\" \"MLSS\"",
            "name": "origin_system",
            "in": "formData"
          },
          {
            "enum": [
              "BDAP",
              "BDP"
            ],
            "type": "string",
            "default": "BDAP",
            "description": "实验所属的集群类型，默认为\"BDAP\"；可选枚举值为 \"BDAP\" \"BDP\"",
            "name": "cluster_type",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的工作空间id）",
            "name": "dss_workspace_id",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的工作空间名称）",
            "name": "dss_workspace_name",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的项目id）",
            "name": "dss_project_id",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的项目名）",
            "name": "dss_project_name",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的id）",
            "name": "dss_flow_id",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的名称）",
            "name": "dss_flow_name",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "创建DSS类型的实验的dss相关信息（dss工作流的版本）",
            "name": "dss_flow_version",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/upload_flow_json": {
      "post": {
        "description": "上传一个实验的FlowJson zip包，该接口会返回一个上传id，在CreateExperiment时用于 flowjson_upload_id字段",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Experiment"
        ],
        "summary": "UploadExperimentFlowJson",
        "operationId": "UploadExperimentFlowJson",
        "parameters": [
          {
            "type": "file",
            "description": "上传的表示实验工作流的zip文件，zip文件里应该包含一个名为flow.json的json文件",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UploadExperimentFlowJsonResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}": {
      "get": {
        "description": "通过实验ID获取实验信息(实际获取的是这个实验最新版本的信息）",
        "tags": [
          "Experiment"
        ],
        "summary": "GetExperiment",
        "operationId": "GetExperiment",
        "parameters": [
          {
            "type": "string",
            "description": "实验的Id",
            "name": "exp_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentWithoutPipeline"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "根据实验ID删除对应的实验",
        "tags": [
          "Experiment"
        ],
        "summary": "DeleteExperiment",
        "operationId": "DeleteExperiment",
        "parameters": [
          {
            "type": "string",
            "description": "实验的Id",
            "name": "exp_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "description": "修改实验的部分信息",
        "tags": [
          "Experiment"
        ],
        "summary": "PatchExperiment",
        "operationId": "PatchExperiment",
        "parameters": [
          {
            "type": "string",
            "description": "实验的Id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "description": "修改实验的部分信息(其中的字段有值表示修改为对应的值，为空表示不进行修改）",
            "name": "experiment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PatchExperimentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/copy": {
      "post": {
        "description": "复制一个已有的实验来创建一个新的实验",
        "tags": [
          "Experiment"
        ],
        "summary": "CopyExperiment",
        "operationId": "CopyExperiment",
        "parameters": [
          {
            "type": "string",
            "description": "实验ID",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "description": "复制后新建的实验的信息（其中的字段有值表示修改为对应的值，为空表示不进行修改）",
            "name": "experiment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PatchExperimentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/export_flow_json": {
      "get": {
        "description": "导出实验的工作流flowjson，导出结果为一个zip包",
        "tags": [
          "Experiment"
        ],
        "summary": "ExportExperimentFlowJson",
        "operationId": "ExportExperimentFlowJson",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "导出的实验定义"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Experiment cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/version": {
      "post": {
        "description": "新增一个实验版本（也就是将当前实验存为一个固定版本）",
        "tags": [
          "Experiment"
        ],
        "summary": "CreateExperimentVersion",
        "operationId": "CreateExperimentVersion",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "description": "新建实验的具体内容",
            "name": "experiment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateExperimentVersionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentVersionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/version/{version_name}": {
      "get": {
        "description": "获取某个版本的实验信息（如果传入的版本为最新版本，同 GetExperiment 接口效果一样）",
        "tags": [
          "Experiment"
        ],
        "summary": "GetExperimentVersion",
        "operationId": "GetExperimentVersion",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "experiment version name",
            "name": "version_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentWithoutPipeline"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "删除某个版本的实验",
        "tags": [
          "Experiment"
        ],
        "summary": "DeleteExperimentVersion",
        "operationId": "DeleteExperimentVersion",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "experiment version name",
            "name": "version_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "description": "修改实验版本的部分信息",
        "tags": [
          "Experiment"
        ],
        "summary": "PatchExperimentVersion",
        "operationId": "PatchExperimentVersion",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "experiment version name",
            "name": "version_name",
            "in": "path",
            "required": true
          },
          {
            "description": "修改实验版本的部分信息(其中的字段有值表示修改为对应的值，为空表示不进行修改）",
            "name": "experiment_version",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PatchExperimentVersionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/version/{version_name}/flow_json": {
      "get": {
        "description": "获取某个版本的实验的工作流描述，也就是所谓的flowjson",
        "tags": [
          "Experiment"
        ],
        "summary": "GetExperimentVersionFlowJson",
        "operationId": "GetExperimentVersionFlowJson",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "experiment version name",
            "name": "version_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "导出的实验工作流描述",
            "schema": {
              "$ref": "#/definitions/FlowJsonResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Experiment cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/version/{version_name}/global_variables_str": {
      "get": {
        "description": "获取某个版本的实验的工作流的默认全局变量",
        "tags": [
          "Experiment"
        ],
        "summary": "GetExperimentVersionGlobalVariablesStr",
        "operationId": "GetExperimentVersionGlobalVariablesStr",
        "parameters": [
          {
            "type": "string",
            "description": "experiment id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "experiment version name",
            "name": "version_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "导出的实验工作流描述",
            "schema": {
              "$ref": "#/definitions/FlowJsonResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Experiment cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/version_names": {
      "get": {
        "description": "列出某个实验的所有可用版本名称",
        "tags": [
          "Experiment"
        ],
        "summary": "ListExperimentVersionNames",
        "operationId": "ListExperimentVersionNames",
        "parameters": [
          {
            "type": "string",
            "description": "实验的Id",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "过滤可以发布的实验版本",
            "name": "can_deploy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "实验所有可用版本名称",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment/{exp_id}/versions": {
      "get": {
        "description": "获取实验的所有版本信息",
        "tags": [
          "Experiment"
        ],
        "summary": "ListExperimentVersions",
        "operationId": "ListExperimentVersions",
        "parameters": [
          {
            "minLength": 1,
            "type": "string",
            "description": "实验ID",
            "name": "exp_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "根据“实验版本号”过滤实验版本列表",
            "name": "version_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“更新时间的开始”过滤实验列表",
            "name": "update_time_st",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“更新时间的结束”过滤实验列表",
            "name": "update_time_ed",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "default": 1,
            "description": "分页查询的page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "default": 10,
            "description": "分页查询的size",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListExperimentsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run": {
      "post": {
        "description": "根据传入的实验ID和版本信息，创建了一个基于该实验的执行",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "CreateExperimentRun",
        "operationId": "CreateExperimentRun",
        "parameters": [
          {
            "name": "experimentRunRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateExperimentRunRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentRunResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}": {
      "get": {
        "description": "根据传入的实验执行ID，获取实验执行详情",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "GetExperimentRun",
        "operationId": "GetExperimentRun",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentRun"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "根据传入的实验执行ID，删除该实验执行(只有终态的实验执行才能被删除，否则会报错；非终态的应该等其执行完或者终止执行）",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "DeleteExperimentRun",
        "operationId": "DeleteExperimentRun",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}/flow_json": {
      "get": {
        "description": "根据传入的实验执行ID，获取实验执行的flowjson",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "GetExperimentRunFlowJson",
        "operationId": "GetExperimentRunFlowJson",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FlowJsonResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}/kill": {
      "post": {
        "description": "根据传入的实验执行ID，终止该运行",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "KillExperimentRun",
        "operationId": "KillExperimentRun",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}/node_executions": {
      "get": {
        "description": "根据传入的实验执行ID，获取实验执行的节点状态信息",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "GetExperimentRunNodeExecutions",
        "operationId": "GetExperimentRunNodeExecutions",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NodeExecutionsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}/retry": {
      "post": {
        "description": "根据传入的实验执行ID，新建一个新的实验执行",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "RetryExperimentRun",
        "operationId": "RetryExperimentRun",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentRunResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}/status": {
      "get": {
        "description": "根据传入的实验执行ID，获取实验执行的状态",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "GetExperimentRunStatus",
        "operationId": "GetExperimentRunStatus",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentRunStatus"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_run/{run_id}/{node_id}/logs": {
      "get": {
        "description": "根据传入的实验执行ID，节点ID获取对应的日志",
        "produces": [
          "application/octet-stream"
        ],
        "tags": [
          "ExperimentRun"
        ],
        "summary": "GetExperimentRunNodeLogs",
        "operationId": "GetExperimentRunNodeLogs",
        "parameters": [
          {
            "type": "string",
            "description": "实验执行的Id",
            "name": "run_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "节点的Id",
            "name": "node_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_runs": {
      "get": {
        "description": "根据传入的过滤参数，获取实验执行列表",
        "tags": [
          "ExperimentRun"
        ],
        "summary": "ListExperimentRuns",
        "operationId": "ListExperimentRuns",
        "parameters": [
          {
            "type": "string",
            "description": "获取实验的执行记录，那个实验的Id",
            "name": "exp_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "根据“实验版本”过滤实验执行列表",
            "name": "exp_version_name",
            "in": "query"
          },
          {
            "enum": [
              "Initializing",
              "Running",
              "Succeed",
              "Failed",
              "Cancelled"
            ],
            "type": "string",
            "description": "根据“执行状态”过滤实验执行列表",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“提交时间的开始”过滤实验列表",
            "name": "create_time_st",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“提交时间的结束”过滤实验列表",
            "name": "create_time_ed",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "default": 1,
            "description": "分页查询的page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "default": 10,
            "description": "分页查询的size",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListExperimentRunsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiment_test": {
      "post": {
        "description": "仅仅是为了测试接口",
        "tags": [
          "Experiment"
        ],
        "summary": "CreateExperimentTest",
        "operationId": "CreateExperimentTest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateExperimentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The Models cannot be found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/experiments": {
      "get": {
        "description": "根据传入的过滤参数，获取实验列表",
        "tags": [
          "Experiment"
        ],
        "summary": "ListExperiments",
        "operationId": "ListExperiments",
        "parameters": [
          {
            "type": "string",
            "description": "根据“实验名称”过滤实验列表，支持模糊搜索",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“实验标签”过滤实验列表，多个标签用逗号隔开",
            "name": "tag",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“来源系统”过滤实验列表",
            "name": "source_system",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“所属项目组（ID）”过滤实验列表",
            "name": "group_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“所属项目组（名字）”过滤实验列表",
            "name": "group_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“创建人”过滤实验列表",
            "name": "create_user",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“创建时间的结束”过滤实验列表",
            "name": "create_time_st",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“创建时间的结束”过滤实验列表",
            "name": "create_time_ed",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“更新时间的开始”过滤实验列表",
            "name": "update_time_st",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“更新时间的结束”过滤实验列表",
            "name": "update_time_ed",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“（DSS）工作流项目”过滤实验列表",
            "name": "dss_project_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "根据“（DSS）工作流名称”过滤实验列表",
            "name": "dss_flow_name",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "default": 1,
            "description": "分页查询的page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "default": 10,
            "description": "分页查询的size",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListExperimentsResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "批量删除实验",
        "tags": [
          "Experiment"
        ],
        "summary": "BatchDeleteExperiments",
        "operationId": "BatchDeleteExperiments",
        "parameters": [
          {
            "name": "BatchDeleteExperimentsRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BatchDeleteExperimentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/eventsender_node_content": {
      "get": {
        "description": "获取可视化编辑/工作流中的信号发送节点的描述数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineEventSenderNodeContent",
        "operationId": "GetPipelineEventSenderNodeContent",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSenderNodeContent"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/global_variables": {
      "get": {
        "description": "获取可视化编辑/工作流中的全局变量的数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineGlobalVariables",
        "operationId": "GetPipelineGlobalVariables",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GlobalVariable"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/global_variables/model": {
      "get": {
        "description": "获取可视化编辑/工作流中的全局变量的模型变量数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineGlobalVariablesModel",
        "operationId": "GetPipelineGlobalVariablesModel",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/global_variables/process_line": {
      "get": {
        "description": "获取可视化编辑/工作流中的全局变量的加工线变量数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineGlobalVariablesProcessLine",
        "operationId": "GetPipelineGlobalVariablesProcessLine",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProcessLine"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/gpu_node_manifest": {
      "get": {
        "description": "获取可视化编辑/工作流中的GPU节点的描述数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineGPUNodeManifest",
        "operationId": "GetPipelineGPUNodeManifest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GPUNodeManifest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/modelpredict_node_manifest": {
      "get": {
        "description": "获取可视化编辑/工作流中的模型预测节点的描述数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineModelPredictNodeManifest",
        "operationId": "GetPipelineModelPredictNodeManifest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelPredictNodeManifest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/di/v2/pipeline/processline_node_manifest": {
      "get": {
        "description": "获取可视化编辑/工作流中的加工线节点的描述数据结构",
        "tags": [
          "Pipeline"
        ],
        "summary": "GetPipelineProcessLineNodeManifest",
        "operationId": "GetPipelineProcessLineNodeManifest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProcessLineNodeManifest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Model create failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BatchDeleteExperimentsRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CodeUploadResponse": {
      "type": "object",
      "properties": {
        "s3path": {
          "description": "S3 Path",
          "type": "string"
        }
      }
    },
    "ComputeResource": {
      "type": "object",
      "properties": {
        "cpus": {
          "type": "number",
          "title": "该计算资源类型所申请的cpu个数"
        },
        "gpus": {
          "type": "number",
          "title": "该计算资源所申请的gpu个数"
        },
        "memory": {
          "type": "string",
          "title": "该计算资源类型所申请的内存大小"
        },
        "nums": {
          "type": "number",
          "title": "该计算资源类型的个数"
        }
      }
    },
    "CreateExperimentRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "cluster_type": {
          "description": "实验所属的集群类型，默认为\"BDAP\"；可选枚举值为 \"BDAP\" \"BDP\"",
          "type": "string",
          "default": "BDAP",
          "enum": [
            "BDAP",
            "BDP"
          ]
        },
        "description": {
          "description": "创建实验的描述",
          "type": "string"
        },
        "dss_info": {
          "description": "DSS相关的信息，如果实验的origin_system是DSS，则需要传入该字段",
          "type": "object",
          "$ref": "#/definitions/DSSInfo"
        },
        "flow_json": {
          "description": "创建的实验的工作流",
          "type": "string"
        },
        "flow_json_upload_id": {
          "description": "创建的实验的工作流上传的id（来自UploadExperimentFlowJson接口的返回）",
          "type": "string"
        },
        "group_id": {
          "description": "创建实验所属的项目组ID(理论上传group_id就够了，但是group的相关接口暂时不支持byId查询，所以暂时需要传group_id和group_name)",
          "type": "string"
        },
        "group_name": {
          "description": "创建实验所属的项目组名字(理论上传group_id就够了，但是group的相关接口暂时不支持byId查询，所以暂时需要传group_id和group_name)",
          "type": "string"
        },
        "name": {
          "description": "创建实验的名称",
          "type": "string",
          "minLength": 1
        },
        "source_system": {
          "description": "表示实验在哪个系统创建的, 默认为\"MLSS\"；可选的枚举值为 \"WTSS\" \"DSS\" \"MLSS\"",
          "type": "string",
          "default": "MLSS",
          "enum": [
            "MLSS",
            "DSS",
            "WTSS"
          ]
        },
        "tags": {
          "description": "创建实验的标签",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateExperimentResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "返回创建的实验的id",
          "type": "string"
        }
      }
    },
    "CreateExperimentRunRequest": {
      "type": "object",
      "properties": {
        "exp_id": {
          "description": "所要执行的实验ID",
          "type": "string"
        },
        "exp_version_name": {
          "description": "所要执行的实验的版本名字",
          "type": "string"
        },
        "run_config": {
          "description": "执行配置（现在主要是动态设置执行时候的全局变量的值）",
          "type": "object",
          "$ref": "#/definitions/RunConfig"
        }
      }
    },
    "CreateExperimentRunResponse": {
      "type": "object",
      "properties": {
        "create_time": {
          "description": "执行创建的时候/执行提交的时间",
          "type": "string",
          "format": "date-time"
        },
        "create_user": {
          "description": "执行创建人",
          "type": "string"
        },
        "end_time": {
          "description": "执行结束的时间",
          "type": "string",
          "format": "date-time"
        },
        "exp_id": {
          "description": "执行的实验ID",
          "type": "string"
        },
        "exp_run_id": {
          "description": "实验执行记录的ID",
          "type": "string"
        },
        "exp_version_name": {
          "description": "执行的实验的版本名字",
          "type": "string"
        }
      }
    },
    "CreateExperimentVersionRequest": {
      "type": "object",
      "properties": {
        "description": {
          "description": "固化当前版本的同时修改其描述",
          "type": "string"
        }
      }
    },
    "CreateExperimentVersionResponse": {
      "type": "object",
      "properties": {
        "archived_version_name": {
          "description": "返回固化的版本",
          "type": "string"
        },
        "latest_version_name": {
          "description": "返回当前最新的版本（一般是固化的版本+1）",
          "type": "string"
        }
      }
    },
    "DSSInfo": {
      "type": "object",
      "properties": {
        "flow_id": {
          "type": "number",
          "format": "int64"
        },
        "flow_name": {
          "type": "string"
        },
        "flow_version": {
          "type": "string"
        },
        "project_id": {
          "type": "number",
          "format": "int64"
        },
        "project_name": {
          "type": "string"
        },
        "workspace_id": {
          "description": "workspace id",
          "type": "integer"
        },
        "workspace_name": {
          "description": "workspace name,choose next value, \"bdapWorkspace\" \"bdapWorkspace0x\"",
          "type": "string",
          "default": ""
        }
      }
    },
    "DataConfig": {
      "type": "object",
      "properties": {
        "mapping_path": {
          "type": "string",
          "title": "将存储挂载进容器内部的映射路径, 当前为空表示默认的映射"
        },
        "mlss_platform_parent_dir": {
          "description": "当前输出的存储根目录需要和输入的存储根目录一致",
          "type": "string",
          "title": "当data_source_type为 MLSSPlatformStorage，需要填充该字段的内容，平台存储根目录"
        },
        "mlss_platform_sub_dir": {
          "type": "string",
          "title": "当data_source_type为 MLSSPlatformStorage，需要填充该字段的内容，平台存储子目录"
        },
        "source_type": {
          "type": "string",
          "title": "数据来源类型",
          "enum": [
            "MLSSPlatformStorage"
          ]
        }
      }
    },
    "DependResources": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数配置-模型用户组"
        },
        "model_id": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数配置-模型名称"
        },
        "model_version_id": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数配置-模型版本"
        },
        "processline_id": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数配置-加工线名称"
        },
        "processline_version_id": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数配置-加工线版本"
        },
        "type": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数配置-物料类型",
          "enum": [
            "MODEL"
          ]
        }
      }
    },
    "DeploySetting": {
      "type": "object",
      "properties": {
        "can_deploy_as_offline_service": {
          "description": "是否可发布为离线服务",
          "type": "boolean",
          "default": false
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "error": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "EventSenderNodeContent": {
      "type": "object",
      "properties": {
        "dcn": {
          "type": "string",
          "title": "现在固定为FA0?"
        },
        "exp_id": {
          "type": "string",
          "title": "信号发送节点所属的工作流所属的实验的id"
        },
        "exp_name": {
          "type": "string",
          "title": "信号发送节点所属的工作流所属的实验的名称"
        },
        "group_id": {
          "type": "string",
          "title": "属性信息-项目组的id"
        },
        "group_name": {
          "type": "string",
          "title": "属性信息-项目组的名称"
        },
        "msg_body": {
          "type": "string",
          "title": "属性信息-msg.body"
        },
        "msg_type": {
          "type": "string",
          "title": "属性信息-msg.messageType"
        },
        "name": {
          "type": "string",
          "title": "信号发送节点的名称"
        },
        "service_id": {
          "type": "string",
          "title": "现在固定为 11200257 ?"
        }
      }
    },
    "ExperimentRun": {
      "type": "object",
      "properties": {
        "create_time": {
          "description": "实验执行的提交时间",
          "type": "string",
          "format": "date-time"
        },
        "create_user": {
          "description": "实验执行的提交者",
          "type": "string"
        },
        "end_time": {
          "description": "实验执行的结束时间",
          "type": "string",
          "format": "date-time"
        },
        "execute_status": {
          "description": "实验执行的状态",
          "type": "string",
          "enum": [
            "Initializing",
            "Running",
            "Succeed",
            "Failed",
            "Cancelled",
            "Deleted"
          ]
        },
        "exp_id": {
          "description": "实验执行记录关联的实验的ID",
          "type": "string"
        },
        "exp_run_id": {
          "description": "实验执行记录的ID",
          "type": "string"
        },
        "exp_version_name": {
          "description": "实验执行记录关联的实验的版本名",
          "type": "string"
        }
      }
    },
    "ExperimentRunStatus": {
      "type": "object",
      "properties": {
        "status": {
          "description": "实验执行的状态",
          "type": "string",
          "enum": [
            "Initializing",
            "Running",
            "Succeed",
            "Failed",
            "Cancelled",
            "Deleted"
          ]
        }
      }
    },
    "ExperimentWithoutPipeline": {
      "description": "返回获取、修改后、复制后等操作的实验",
      "type": "object",
      "properties": {
        "create_time": {
          "description": "实验的创建时间",
          "type": "string",
          "format": "date-time"
        },
        "create_user": {
          "description": "实验的创建人",
          "type": "string"
        },
        "deploy_setting": {
          "description": "实验的发布配置信息",
          "type": "object",
          "$ref": "#/definitions/DeploySetting"
        },
        "description": {
          "description": "实验描述",
          "type": "string"
        },
        "dss_info": {
          "description": "如果该实验来自DSS系统，其关联的DSS信息",
          "type": "object",
          "$ref": "#/definitions/DSSInfo"
        },
        "group_id": {
          "description": "实验所属的项目组ID",
          "type": "string"
        },
        "group_name": {
          "description": "实验所属的项目组",
          "type": "string"
        },
        "id": {
          "description": "实验Id",
          "type": "string"
        },
        "latest_execute_time": {
          "description": "实验最近的执行时间",
          "type": "string"
        },
        "name": {
          "description": "实验名称",
          "type": "string"
        },
        "source_system": {
          "description": "实验的来源系统",
          "type": "string",
          "default": "MLSS",
          "enum": [
            "MLSS",
            "DSS",
            "WTSS"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "update_time": {
          "description": "实验最后的操作时间",
          "type": "string",
          "format": "date-time"
        },
        "update_user": {
          "description": "实验最后的操作人",
          "type": "string"
        },
        "version_name": {
          "description": "实验的版本",
          "type": "string"
        }
      }
    },
    "FlowJsonResponse": {
      "type": "object",
      "properties": {
        "flow_json": {
          "type": "string",
          "title": "实验的工作流描述，所谓的flowjson"
        }
      }
    },
    "FrameWork": {
      "description": "xxx",
      "type": "object",
      "properties": {
        "command": {
          "type": "string",
          "title": "参数设置-任务执行设置-执行入口"
        },
        "name": {
          "type": "string",
          "title": "目前开发测试环境固定为\"uat.sf.dockerhub.stgwebank/webank/mlss-di\"; 生产环境待确定"
        },
        "version": {
          "type": "string",
          "title": "[镜像设置为标准情况下，下拉接口获取数据] 资源设置-镜像选择"
        }
      }
    },
    "GPUNodeDataStores": {
      "type": "object",
      "properties": {
        "connection": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "title": "现在固定为host-mount"
            },
            "path": {
              "type": "string",
              "title": "[下拉接口获取数据] 资源设置-目录设置-数据根目录"
            },
            "type": {
              "type": "string",
              "title": "现在固定为host_mount"
            }
          }
        },
        "id": {
          "type": "string",
          "title": "目前固定为hostmount"
        },
        "training_data": {
          "type": "object",
          "title": "其container字段对应 资源设置-目录设置-数据子目录",
          "$ref": "#/definitions/GPUNodeDataStoresSubDirectory"
        },
        "training_results": {
          "type": "object",
          "title": "其container字段对应 资源设置-目录设置-结果子目录",
          "$ref": "#/definitions/GPUNodeDataStoresSubDirectory"
        },
        "training_workspace": {
          "type": "object",
          "title": "其container字段目前默认为workspace，只有当 参数设置-任务执行设置-执行代码设置 为storagePath时，其值来自  参数设置-任务执行设置-训练代码子目录",
          "$ref": "#/definitions/GPUNodeDataStoresSubDirectory"
        },
        "type": {
          "type": "string",
          "title": "目前固定为mount_volume"
        }
      }
    },
    "GPUNodeDataStoresSDirectory": {
      "description": "存储根目录",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "目前固定为hostmount"
        },
        "name": {
          "type": "string",
          "title": "目前固定为host-mount"
        },
        "path": {
          "type": "string",
          "title": "资源设置-存储根目录"
        },
        "type": {
          "type": "string",
          "title": "存储的类型（目前只支持host_mount）",
          "enum": [
            "host_mount"
          ]
        }
      }
    },
    "GPUNodeDataStoresSubDirectory": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string",
          "title": "子目录的路径"
        }
      }
    },
    "GPUNodeManifest": {
      "type": "object",
      "properties": {
        "code_path": {
          "type": "string",
          "title": "[调用接口获取数据] 参数设置-任务执行设置-执行代码设置 为codeFile时，调用 codeUpload 接口返回的s3Path"
        },
        "code_selector": {
          "type": "string",
          "title": "参数设置-任务执行设置-执行代码设置（storagePath对应训练代码子目录；codeFile对应手动上传）",
          "enum": [
            "storagePath",
            "codeFile"
          ]
        },
        "cpus": {
          "type": "number",
          "format": "int64",
          "title": "资源设置-计算资源设置-计算任务CPU"
        },
        "data_stores": {
          "title": "资源设置-目录设置",
          "$ref": "#/definitions/GPUNodeDataStores"
        },
        "depend_resources": {
          "type": "object",
          "title": "参数设置-任务执行设置-高级参数设置",
          "$ref": "#/definitions/DependResources"
        },
        "description": {
          "type": "string",
          "title": "基本信息-节点描述"
        },
        "evaluation_metrics": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "title": "目前固定为fluent-bit"
            }
          }
        },
        "exp_id": {
          "type": "string",
          "title": "该节点所属工作流所属的MLSS实验的id"
        },
        "exp_name": {
          "type": "string",
          "title": "该节点所属工作流所属的MLSS实验的name"
        },
        "fileName": {
          "type": "string",
          "title": "[调用接口获取数据] 参数设置-任务执行设置-执行代码设置 为codeFile时，上传文件的文件名"
        },
        "framework": {
          "title": "资源设置-镜像设置 和 参数设置-执行入口 相关信息",
          "$ref": "#/definitions/FrameWork"
        },
        "gpus": {
          "description": "资源设置-计算资源设置-计算任务GPU",
          "type": "number",
          "format": "int64"
        },
        "ignore_fail": {
          "type": "number",
          "format": "int64",
          "title": "参数设置-任务执行设置-高级参数设置-忽略失败状态（1表示是，0表示否）"
        },
        "job_type": {
          "type": "string",
          "title": "资源设置-计算资源设置-任务类型（Local表示单机; dist-tf表示分布式）",
          "enum": [
            "Local",
            "dist-tf"
          ]
        },
        "learners": {
          "type": "number",
          "format": "int64",
          "title": "当job_type为dist_tf时，资源设置-计算资源设置-计算任务数"
        },
        "memory": {
          "type": "string",
          "title": "资源设置-计算资源设置-计算任务内存"
        },
        "name": {
          "type": "string",
          "title": "基本信息-节点名"
        },
        "namespace": {
          "type": "string",
          "title": "[下拉接口获取数据] 资源设置-计算资源设置-命名空间"
        },
        "proxy_user": {
          "type": "string",
          "title": "[下拉接口获取数据] 基本信息-代理用户设置开启-代理用户设置"
        },
        "ps_cpu": {
          "type": "number",
          "format": "int64",
          "title": "当job_type为dist_tf时，资源设置-计算资源设置-参数服务器CPU"
        },
        "ps_image": {
          "type": "number",
          "format": "int64",
          "title": "当job_type为dist_tf时，资源设置-计算资源设置-参数服务器镜像"
        },
        "ps_imageType": {
          "type": "string",
          "title": "当job_type为dist_tf时，资源设置-计算资源设置-参数服务器镜像类型",
          "enum": [
            "Standard",
            "Custom"
          ]
        },
        "ps_memory": {
          "type": "string",
          "title": "当job_type为dist_tf时，资源设置-计算资源设置-参数服务器内存"
        },
        "pss": {
          "type": "number",
          "format": "int64",
          "title": "当job_type为dist_tf时，资源设置-计算资源设置-参数服务器数"
        },
        "python_hdfs_path": {
          "type": "string",
          "title": "参数设置-任务执行设置-高级参数设置-python环境配置(其value来自哪里todo)"
        },
        "version": {
          "type": "string",
          "title": "目前固定为 1.0"
        }
      }
    },
    "GetDSSJumpMLSSUserResponse": {
      "type": "object",
      "properties": {
        "user_name": {
          "description": "用户名",
          "type": "string"
        }
      }
    },
    "GetExperimentGlobalVariablesStrResponse": {
      "type": "object",
      "properties": {
        "global_variables_str": {
          "type": "string",
          "title": "实验的工作流全局变量"
        }
      }
    },
    "GlobalVariable": {
      "type": "object",
      "properties": {
        "key": {
          "description": "全局变量，变量的key",
          "type": "string"
        },
        "type": {
          "description": "全局变量，变量的类型",
          "type": "string",
          "enum": [
            "string",
            "number",
            "model",
            "processline"
          ]
        },
        "value": {
          "description": "全局变量的值，根据类型的不同，可能是String, Number, Model, ProcessLine; Model的数据结构请看GetPipelineGlobalVariablesModel的返回，PorcessLine的数据结构请看GetPipelineGlobalVariablesProcessLine的返回",
          "type": "object",
          "enum": [
            "String",
            "Number",
            "Model",
            "ProcessLine"
          ]
        }
      }
    },
    "ListExperimentRunsResponse": {
      "type": "object",
      "properties": {
        "experiment_runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExperimentRun"
          }
        },
        "page_number": {
          "type": "number",
          "format": "int64"
        },
        "page_size": {
          "type": "number",
          "format": "int64"
        },
        "total": {
          "type": "number",
          "format": "int64"
        },
        "total_page": {
          "type": "number",
          "format": "int64"
        }
      }
    },
    "ListExperimentsResponse": {
      "type": "object",
      "properties": {
        "experiments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExperimentWithoutPipeline"
          }
        },
        "page_number": {
          "type": "number",
          "format": "int64"
        },
        "page_size": {
          "type": "number",
          "format": "int64"
        },
        "total": {
          "type": "number",
          "format": "int64"
        },
        "total_page": {
          "type": "number",
          "format": "int64"
        }
      }
    },
    "MLSSPlatformStorageConfig": {
      "type": "object",
      "properties": {
        "parent_dir": {
          "type": "string",
          "title": "存储根目录"
        },
        "sub_dir": {
          "type": "string",
          "title": "存储子目录"
        }
      }
    },
    "MetaData": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "节点的描述"
        },
        "exp_id": {
          "type": "string",
          "title": "节点所属的实验的ID（不需用户配置）"
        },
        "exp_name": {
          "type": "string",
          "title": "节点所属的实验的Name（不需用户配置）"
        },
        "name": {
          "type": "string",
          "title": "节点的名称"
        },
        "namespace": {
          "type": "string",
          "title": "节点所在的namespace（同gpu节点的namespace）"
        }
      }
    },
    "Model": {
      "type": "object",
      "title": "Model类型的全局变量的值类型",
      "properties": {
        "group_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型用户组"
        },
        "model_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型名称"
        },
        "model_version_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型版本"
        }
      }
    },
    "ModelInput": {
      "type": "object",
      "title": "Model类型的全局变量的值类型",
      "properties": {
        "group_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型用户组"
        },
        "model_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型名称"
        },
        "model_version_id": {
          "type": "number",
          "format": "int64",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型版本"
        },
        "source_type": {
          "description": "选择全局变量要求在全局参数里定义了模型类型的变量，这里便可以选择该变量，然后在执行工作流和发布工作流的时候可以动态修改该变量；选择自定义则是普通的设置模型相关的设置",
          "type": "string",
          "title": "模型数据的来源类型，枚举值",
          "enum": [
            "Direct",
            "Variable"
          ]
        },
        "variable_key": {
          "type": "string",
          "title": "当source_type为variable的时候，需填充该值为全局变量的某个model类型的key"
        }
      }
    },
    "ModelPredictNodeInput": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "title": "数据输入",
          "$ref": "#/definitions/DataConfig"
        },
        "model": {
          "type": "object",
          "title": "模型输入",
          "$ref": "#/definitions/ModelInput"
        }
      }
    },
    "ModelPredictNodeManifest": {
      "type": "object",
      "properties": {
        "compute_resources": {
          "type": "object",
          "title": "节点的计算资源信息",
          "properties": {
            "worker": {
              "type": "object",
              "$ref": "#/definitions/ComputeResource"
            }
          }
        },
        "input": {
          "type": "object",
          "title": "节点输入信息",
          "$ref": "#/definitions/ModelPredictNodeInput"
        },
        "meta_data": {
          "type": "object",
          "title": "节点的元数据信息",
          "$ref": "#/definitions/MetaData"
        },
        "output": {
          "type": "object",
          "title": "节点的输出信息",
          "$ref": "#/definitions/Output"
        },
        "run_environment": {
          "type": "object",
          "title": "节点的运行环境信息",
          "$ref": "#/definitions/RunEnvironment"
        }
      }
    },
    "NodeExecutionInfo": {
      "type": "object",
      "properties": {
        "exec_run_id": {
          "description": "实验执行的id",
          "type": "string"
        },
        "node_id": {
          "description": "节点的id",
          "type": "string"
        },
        "node_status": {
          "description": "节点的执行状态",
          "type": "string"
        },
        "training_task_id": {
          "description": "训练任务的id，通过该id查询日志",
          "type": "string"
        }
      }
    },
    "NodeExecutionsResponse": {
      "type": "object",
      "properties": {
        "failed_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeExecutionInfo"
          }
        },
        "pending_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeExecutionInfo"
          }
        },
        "running_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeExecutionInfo"
          }
        },
        "skipped_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeExecutionInfo"
          }
        },
        "succeed_nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeExecutionInfo"
          }
        }
      }
    },
    "Output": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object",
          "title": "数据输出",
          "$ref": "#/definitions/DataConfig"
        }
      }
    },
    "PatchExperimentRequest": {
      "type": "object",
      "properties": {
        "deploy_setting": {
          "description": "修改的实验的发布配置",
          "type": "object",
          "$ref": "#/definitions/DeploySetting"
        },
        "description": {
          "description": "修改实验的描述.",
          "type": "string"
        },
        "flow_json": {
          "description": "修改的实验的工作流",
          "type": "string"
        },
        "group_id": {
          "description": "修改实验所属的项目组ID.(理论上传group_id就够了，但是group的相关接口暂时不支持byId查询，所以暂时需要传group_id和group_name)",
          "type": "string"
        },
        "group_name": {
          "description": "修改实验所属的项目组名字.(理论上传group_id就够了，但是group的相关接口暂时不支持byId查询，所以暂时需要传group_id和group_name)",
          "type": "string"
        },
        "name": {
          "description": "修改实验的名称.",
          "type": "string"
        },
        "tags": {
          "description": "修改的实验的标签",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PatchExperimentVersionRequest": {
      "type": "object",
      "properties": {
        "description": {
          "description": "修改实验版本的描述.",
          "type": "string"
        }
      }
    },
    "ProcessLine": {
      "description": "加工线类型的全局变量的值类型",
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型用户组/加工线用户组"
        },
        "processline_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-加工线名称"
        },
        "processline_version_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-加工线版本"
        }
      }
    },
    "ProcessLineInput": {
      "type": "object",
      "title": "加工线类型的输入数据结构",
      "properties": {
        "group_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型用户组/加工线用户组"
        },
        "processline_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-加工线名称"
        },
        "processline_version_id": {
          "type": "string",
          "title": "类似GPU节点的 参数设置-任务执行设置-高级参数配置-加工线版本"
        },
        "source_type": {
          "description": "选择全局变量要求在全局参数里定义了加工线类型的变量，这里便可以选择该变量，然后在执行工作流和发布工作流的时候可以动态修改该变量；选择自定义则是普通的设置加工线相关的设置",
          "type": "string",
          "title": "模型数据的来源类型，枚举值",
          "enum": [
            "direct",
            "variable"
          ]
        },
        "variable_key": {
          "type": "string",
          "title": "当source_type为variable的时候，需填充该值为全局变量的某个model类型的key"
        }
      }
    },
    "ProcessLineNodeInput": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "title": "数据输入",
          "$ref": "#/definitions/DataConfig"
        },
        "processline": {
          "type": "object",
          "title": "模型输入",
          "$ref": "#/definitions/ProcessLineInput"
        }
      }
    },
    "ProcessLineNodeManifest": {
      "type": "object",
      "properties": {
        "compute_resources": {
          "type": "object",
          "title": "节点的计算资源信息",
          "additionalProperties": {
            "$ref": "#/definitions/ComputeResource"
          }
        },
        "input": {
          "type": "object",
          "title": "节点输入信息",
          "$ref": "#/definitions/ProcessLineNodeInput"
        },
        "meta_data": {
          "type": "object",
          "title": "节点的元数据信息",
          "$ref": "#/definitions/MetaData"
        },
        "output": {
          "type": "object",
          "title": "节点的输出信息",
          "$ref": "#/definitions/Output"
        },
        "run_environment": {
          "type": "object",
          "title": "节点的运行环境信息",
          "$ref": "#/definitions/RunEnvironment"
        }
      }
    },
    "RunConfig": {
      "type": "object",
      "properties": {
        "global_variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlobalVariable"
          }
        },
        "wtss_variables": {
          "type": "object",
          "$ref": "#/definitions/WTSSVariables"
        }
      }
    },
    "RunEnvironment": {
      "type": "object",
      "properties": {
        "code_path": {
          "type": "string",
          "title": "如果用户上传代码，这里就是上传代码接口返回的代码包路径(同gpu节点的code_path)"
        },
        "entry_point": {
          "type": "string",
          "title": "镜像的入口命令(同gpu节点的command)"
        },
        "image_name": {
          "type": "string",
          "title": "镜像的名字(同gpu节点一样暂时是固定的)"
        },
        "image_version": {
          "type": "string",
          "title": "镜像的版本(同gpu节点的镜像版本)"
        }
      }
    },
    "UploadExperimentFlowJsonResponse": {
      "type": "object",
      "properties": {
        "upload_id": {
          "description": "上传实验flowjosn得到的上传id，可以用于CreateExperiment，id有效期为xx分钟",
          "type": "string"
        }
      }
    },
    "WTSSVariables": {
      "type": "object",
      "properties": {
        "run_date": {
          "description": "wtss的变量，run_date",
          "type": "string"
        },
        "run_date_std": {
          "description": "wtss的变量，run_date_std",
          "type": "string"
        },
        "run_mon": {
          "description": "wtss的变量，run_mon",
          "type": "string"
        },
        "run_mon_end": {
          "description": "wtss的变量，run_mon_end",
          "type": "string"
        },
        "run_mon_end_std": {
          "description": "wtss的变量，run_mon_end_std",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "description": "Basic Autentication credentials for using the API.",
      "type": "basic"
    },
    "basicAuthToken": {
      "description": "Watson Developer Cloud Basic Autentication. See [here](https://www.ibm.com/smarterplanet/us/en/ibmwatson/developercloud/doc/getting_started/gs-tokens.shtml) for more information",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "watsonAuthToken": {
      "description": "Watson Developer Cloud Token Autentication. See [here](https://www.ibm.com/smarterplanet/us/en/ibmwatson/developercloud/doc/getting_started/gs-tokens.shtml) for more information",
      "type": "apiKey",
      "name": "X-Watson-Authorization-Token",
      "in": "header"
    },
    "watsonAuthTokenQuery": {
      "description": "Watson Developer Cloud Token Autentication. See [here](https://www.ibm.com/smarterplanet/us/en/ibmwatson/developercloud/doc/getting_started/gs-tokens.shtml) for more information",
      "type": "apiKey",
      "name": "watson-token",
      "in": "query"
    }
  },
  "security": [
    {
      "basicAuthToken": []
    },
    {
      "watsonAuthToken": []
    },
    {
      "watsonAuthTokenQuery": []
    }
  ]
}`))
}
