// Code generated by go-swagger; DO NOT EDIT.

package pipeline

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"webank/DI/restapi/api_v2/restmodels"
)

// GetPipelineGlobalVariableOKCode is the HTTP code returned for type GetPipelineGlobalVariableOK
const GetPipelineGlobalVariableOKCode int = 200

/*GetPipelineGlobalVariableOK OK

swagger:response getPipelineGlobalVariableOK
*/
type GetPipelineGlobalVariableOK struct {

	/*
	  In: Body
	*/
	Payload []*restmodels.RunGlobalVariable `json:"body,omitempty"`
}

// NewGetPipelineGlobalVariableOK creates GetPipelineGlobalVariableOK with default headers values
func NewGetPipelineGlobalVariableOK() *GetPipelineGlobalVariableOK {

	return &GetPipelineGlobalVariableOK{}
}

// WithPayload adds the payload to the get pipeline global variable o k response
func (o *GetPipelineGlobalVariableOK) WithPayload(payload []*restmodels.RunGlobalVariable) *GetPipelineGlobalVariableOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pipeline global variable o k response
func (o *GetPipelineGlobalVariableOK) SetPayload(payload []*restmodels.RunGlobalVariable) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPipelineGlobalVariableOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*restmodels.RunGlobalVariable, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetPipelineGlobalVariableUnauthorizedCode is the HTTP code returned for type GetPipelineGlobalVariableUnauthorized
const GetPipelineGlobalVariableUnauthorizedCode int = 401

/*GetPipelineGlobalVariableUnauthorized Unauthorized

swagger:response getPipelineGlobalVariableUnauthorized
*/
type GetPipelineGlobalVariableUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetPipelineGlobalVariableUnauthorized creates GetPipelineGlobalVariableUnauthorized with default headers values
func NewGetPipelineGlobalVariableUnauthorized() *GetPipelineGlobalVariableUnauthorized {

	return &GetPipelineGlobalVariableUnauthorized{}
}

// WithPayload adds the payload to the get pipeline global variable unauthorized response
func (o *GetPipelineGlobalVariableUnauthorized) WithPayload(payload *restmodels.Error) *GetPipelineGlobalVariableUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pipeline global variable unauthorized response
func (o *GetPipelineGlobalVariableUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPipelineGlobalVariableUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPipelineGlobalVariableNotFoundCode is the HTTP code returned for type GetPipelineGlobalVariableNotFound
const GetPipelineGlobalVariableNotFoundCode int = 404

/*GetPipelineGlobalVariableNotFound Model create failed

swagger:response getPipelineGlobalVariableNotFound
*/
type GetPipelineGlobalVariableNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetPipelineGlobalVariableNotFound creates GetPipelineGlobalVariableNotFound with default headers values
func NewGetPipelineGlobalVariableNotFound() *GetPipelineGlobalVariableNotFound {

	return &GetPipelineGlobalVariableNotFound{}
}

// WithPayload adds the payload to the get pipeline global variable not found response
func (o *GetPipelineGlobalVariableNotFound) WithPayload(payload *restmodels.Error) *GetPipelineGlobalVariableNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pipeline global variable not found response
func (o *GetPipelineGlobalVariableNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPipelineGlobalVariableNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
