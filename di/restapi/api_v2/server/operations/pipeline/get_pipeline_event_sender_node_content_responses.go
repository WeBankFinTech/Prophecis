// Code generated by go-swagger; DO NOT EDIT.

package pipeline

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	restmodels "webank/DI/restapi/api_v2/restmodels"
)

// GetPipelineEventSenderNodeContentOKCode is the HTTP code returned for type GetPipelineEventSenderNodeContentOK
const GetPipelineEventSenderNodeContentOKCode int = 200

/*GetPipelineEventSenderNodeContentOK OK

swagger:response getPipelineEventSenderNodeContentOK
*/
type GetPipelineEventSenderNodeContentOK struct {

	/*
	  In: Body
	*/
	Payload *restmodels.EventSenderNodeContent `json:"body,omitempty"`
}

// NewGetPipelineEventSenderNodeContentOK creates GetPipelineEventSenderNodeContentOK with default headers values
func NewGetPipelineEventSenderNodeContentOK() *GetPipelineEventSenderNodeContentOK {

	return &GetPipelineEventSenderNodeContentOK{}
}

// WithPayload adds the payload to the get pipeline event sender node content o k response
func (o *GetPipelineEventSenderNodeContentOK) WithPayload(payload *restmodels.EventSenderNodeContent) *GetPipelineEventSenderNodeContentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pipeline event sender node content o k response
func (o *GetPipelineEventSenderNodeContentOK) SetPayload(payload *restmodels.EventSenderNodeContent) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPipelineEventSenderNodeContentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPipelineEventSenderNodeContentUnauthorizedCode is the HTTP code returned for type GetPipelineEventSenderNodeContentUnauthorized
const GetPipelineEventSenderNodeContentUnauthorizedCode int = 401

/*GetPipelineEventSenderNodeContentUnauthorized Unauthorized

swagger:response getPipelineEventSenderNodeContentUnauthorized
*/
type GetPipelineEventSenderNodeContentUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetPipelineEventSenderNodeContentUnauthorized creates GetPipelineEventSenderNodeContentUnauthorized with default headers values
func NewGetPipelineEventSenderNodeContentUnauthorized() *GetPipelineEventSenderNodeContentUnauthorized {

	return &GetPipelineEventSenderNodeContentUnauthorized{}
}

// WithPayload adds the payload to the get pipeline event sender node content unauthorized response
func (o *GetPipelineEventSenderNodeContentUnauthorized) WithPayload(payload *restmodels.Error) *GetPipelineEventSenderNodeContentUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pipeline event sender node content unauthorized response
func (o *GetPipelineEventSenderNodeContentUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPipelineEventSenderNodeContentUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPipelineEventSenderNodeContentNotFoundCode is the HTTP code returned for type GetPipelineEventSenderNodeContentNotFound
const GetPipelineEventSenderNodeContentNotFoundCode int = 404

/*GetPipelineEventSenderNodeContentNotFound Model create failed

swagger:response getPipelineEventSenderNodeContentNotFound
*/
type GetPipelineEventSenderNodeContentNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetPipelineEventSenderNodeContentNotFound creates GetPipelineEventSenderNodeContentNotFound with default headers values
func NewGetPipelineEventSenderNodeContentNotFound() *GetPipelineEventSenderNodeContentNotFound {

	return &GetPipelineEventSenderNodeContentNotFound{}
}

// WithPayload adds the payload to the get pipeline event sender node content not found response
func (o *GetPipelineEventSenderNodeContentNotFound) WithPayload(payload *restmodels.Error) *GetPipelineEventSenderNodeContentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pipeline event sender node content not found response
func (o *GetPipelineEventSenderNodeContentNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPipelineEventSenderNodeContentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
