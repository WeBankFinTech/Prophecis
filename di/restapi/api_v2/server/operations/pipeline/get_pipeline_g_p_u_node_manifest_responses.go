// Code generated by go-swagger; DO NOT EDIT.

package pipeline

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	restmodels "webank/DI/restapi/api_v2/restmodels"
)

// GetPipelineGPUNodeManifestOKCode is the HTTP code returned for type GetPipelineGPUNodeManifestOK
const GetPipelineGPUNodeManifestOKCode int = 200

/*GetPipelineGPUNodeManifestOK OK

swagger:response getPipelineGPUNodeManifestOK
*/
type GetPipelineGPUNodeManifestOK struct {

	/*
	  In: Body
	*/
	Payload *restmodels.GPUNodeManifest `json:"body,omitempty"`
}

// NewGetPipelineGPUNodeManifestOK creates GetPipelineGPUNodeManifestOK with default headers values
func NewGetPipelineGPUNodeManifestOK() *GetPipelineGPUNodeManifestOK {

	return &GetPipelineGPUNodeManifestOK{}
}

// WithPayload adds the payload to the get pipeline g p u node manifest o k response
func (o *GetPipelineGPUNodeManifestOK) WithPayload(payload *restmodels.GPUNodeManifest) *GetPipelineGPUNodeManifestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pipeline g p u node manifest o k response
func (o *GetPipelineGPUNodeManifestOK) SetPayload(payload *restmodels.GPUNodeManifest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPipelineGPUNodeManifestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPipelineGPUNodeManifestUnauthorizedCode is the HTTP code returned for type GetPipelineGPUNodeManifestUnauthorized
const GetPipelineGPUNodeManifestUnauthorizedCode int = 401

/*GetPipelineGPUNodeManifestUnauthorized Unauthorized

swagger:response getPipelineGPUNodeManifestUnauthorized
*/
type GetPipelineGPUNodeManifestUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetPipelineGPUNodeManifestUnauthorized creates GetPipelineGPUNodeManifestUnauthorized with default headers values
func NewGetPipelineGPUNodeManifestUnauthorized() *GetPipelineGPUNodeManifestUnauthorized {

	return &GetPipelineGPUNodeManifestUnauthorized{}
}

// WithPayload adds the payload to the get pipeline g p u node manifest unauthorized response
func (o *GetPipelineGPUNodeManifestUnauthorized) WithPayload(payload *restmodels.Error) *GetPipelineGPUNodeManifestUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pipeline g p u node manifest unauthorized response
func (o *GetPipelineGPUNodeManifestUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPipelineGPUNodeManifestUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPipelineGPUNodeManifestNotFoundCode is the HTTP code returned for type GetPipelineGPUNodeManifestNotFound
const GetPipelineGPUNodeManifestNotFoundCode int = 404

/*GetPipelineGPUNodeManifestNotFound Model create failed

swagger:response getPipelineGPUNodeManifestNotFound
*/
type GetPipelineGPUNodeManifestNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetPipelineGPUNodeManifestNotFound creates GetPipelineGPUNodeManifestNotFound with default headers values
func NewGetPipelineGPUNodeManifestNotFound() *GetPipelineGPUNodeManifestNotFound {

	return &GetPipelineGPUNodeManifestNotFound{}
}

// WithPayload adds the payload to the get pipeline g p u node manifest not found response
func (o *GetPipelineGPUNodeManifestNotFound) WithPayload(payload *restmodels.Error) *GetPipelineGPUNodeManifestNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pipeline g p u node manifest not found response
func (o *GetPipelineGPUNodeManifestNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPipelineGPUNodeManifestNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
