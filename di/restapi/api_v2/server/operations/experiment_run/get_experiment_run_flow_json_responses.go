// Code generated by go-swagger; DO NOT EDIT.

package experiment_run

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	restmodels "webank/DI/restapi/api_v2/restmodels"
)

// GetExperimentRunFlowJSONOKCode is the HTTP code returned for type GetExperimentRunFlowJSONOK
const GetExperimentRunFlowJSONOKCode int = 200

/*GetExperimentRunFlowJSONOK OK

swagger:response getExperimentRunFlowJsonOK
*/
type GetExperimentRunFlowJSONOK struct {

	/*
	  In: Body
	*/
	Payload *restmodels.FlowJSONResponse `json:"body,omitempty"`
}

// NewGetExperimentRunFlowJSONOK creates GetExperimentRunFlowJSONOK with default headers values
func NewGetExperimentRunFlowJSONOK() *GetExperimentRunFlowJSONOK {

	return &GetExperimentRunFlowJSONOK{}
}

// WithPayload adds the payload to the get experiment run flow Json o k response
func (o *GetExperimentRunFlowJSONOK) WithPayload(payload *restmodels.FlowJSONResponse) *GetExperimentRunFlowJSONOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get experiment run flow Json o k response
func (o *GetExperimentRunFlowJSONOK) SetPayload(payload *restmodels.FlowJSONResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExperimentRunFlowJSONOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetExperimentRunFlowJSONUnauthorizedCode is the HTTP code returned for type GetExperimentRunFlowJSONUnauthorized
const GetExperimentRunFlowJSONUnauthorizedCode int = 401

/*GetExperimentRunFlowJSONUnauthorized Unauthorized

swagger:response getExperimentRunFlowJsonUnauthorized
*/
type GetExperimentRunFlowJSONUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetExperimentRunFlowJSONUnauthorized creates GetExperimentRunFlowJSONUnauthorized with default headers values
func NewGetExperimentRunFlowJSONUnauthorized() *GetExperimentRunFlowJSONUnauthorized {

	return &GetExperimentRunFlowJSONUnauthorized{}
}

// WithPayload adds the payload to the get experiment run flow Json unauthorized response
func (o *GetExperimentRunFlowJSONUnauthorized) WithPayload(payload *restmodels.Error) *GetExperimentRunFlowJSONUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get experiment run flow Json unauthorized response
func (o *GetExperimentRunFlowJSONUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExperimentRunFlowJSONUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetExperimentRunFlowJSONNotFoundCode is the HTTP code returned for type GetExperimentRunFlowJSONNotFound
const GetExperimentRunFlowJSONNotFoundCode int = 404

/*GetExperimentRunFlowJSONNotFound The Models cannot be found

swagger:response getExperimentRunFlowJsonNotFound
*/
type GetExperimentRunFlowJSONNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetExperimentRunFlowJSONNotFound creates GetExperimentRunFlowJSONNotFound with default headers values
func NewGetExperimentRunFlowJSONNotFound() *GetExperimentRunFlowJSONNotFound {

	return &GetExperimentRunFlowJSONNotFound{}
}

// WithPayload adds the payload to the get experiment run flow Json not found response
func (o *GetExperimentRunFlowJSONNotFound) WithPayload(payload *restmodels.Error) *GetExperimentRunFlowJSONNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get experiment run flow Json not found response
func (o *GetExperimentRunFlowJSONNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExperimentRunFlowJSONNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
