// Code generated by go-swagger; DO NOT EDIT.

package experiment_run

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	restmodels "webank/DI/restapi/api_v2/restmodels"
)

// GetExperimentRunNodeExecutionsOKCode is the HTTP code returned for type GetExperimentRunNodeExecutionsOK
const GetExperimentRunNodeExecutionsOKCode int = 200

/*GetExperimentRunNodeExecutionsOK OK

swagger:response getExperimentRunNodeExecutionsOK
*/
type GetExperimentRunNodeExecutionsOK struct {

	/*
	  In: Body
	*/
	Payload *restmodels.NodeExecutionsResponse `json:"body,omitempty"`
}

// NewGetExperimentRunNodeExecutionsOK creates GetExperimentRunNodeExecutionsOK with default headers values
func NewGetExperimentRunNodeExecutionsOK() *GetExperimentRunNodeExecutionsOK {

	return &GetExperimentRunNodeExecutionsOK{}
}

// WithPayload adds the payload to the get experiment run node executions o k response
func (o *GetExperimentRunNodeExecutionsOK) WithPayload(payload *restmodels.NodeExecutionsResponse) *GetExperimentRunNodeExecutionsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get experiment run node executions o k response
func (o *GetExperimentRunNodeExecutionsOK) SetPayload(payload *restmodels.NodeExecutionsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExperimentRunNodeExecutionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetExperimentRunNodeExecutionsUnauthorizedCode is the HTTP code returned for type GetExperimentRunNodeExecutionsUnauthorized
const GetExperimentRunNodeExecutionsUnauthorizedCode int = 401

/*GetExperimentRunNodeExecutionsUnauthorized Unauthorized

swagger:response getExperimentRunNodeExecutionsUnauthorized
*/
type GetExperimentRunNodeExecutionsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetExperimentRunNodeExecutionsUnauthorized creates GetExperimentRunNodeExecutionsUnauthorized with default headers values
func NewGetExperimentRunNodeExecutionsUnauthorized() *GetExperimentRunNodeExecutionsUnauthorized {

	return &GetExperimentRunNodeExecutionsUnauthorized{}
}

// WithPayload adds the payload to the get experiment run node executions unauthorized response
func (o *GetExperimentRunNodeExecutionsUnauthorized) WithPayload(payload *restmodels.Error) *GetExperimentRunNodeExecutionsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get experiment run node executions unauthorized response
func (o *GetExperimentRunNodeExecutionsUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExperimentRunNodeExecutionsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetExperimentRunNodeExecutionsNotFoundCode is the HTTP code returned for type GetExperimentRunNodeExecutionsNotFound
const GetExperimentRunNodeExecutionsNotFoundCode int = 404

/*GetExperimentRunNodeExecutionsNotFound The Models cannot be found

swagger:response getExperimentRunNodeExecutionsNotFound
*/
type GetExperimentRunNodeExecutionsNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetExperimentRunNodeExecutionsNotFound creates GetExperimentRunNodeExecutionsNotFound with default headers values
func NewGetExperimentRunNodeExecutionsNotFound() *GetExperimentRunNodeExecutionsNotFound {

	return &GetExperimentRunNodeExecutionsNotFound{}
}

// WithPayload adds the payload to the get experiment run node executions not found response
func (o *GetExperimentRunNodeExecutionsNotFound) WithPayload(payload *restmodels.Error) *GetExperimentRunNodeExecutionsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get experiment run node executions not found response
func (o *GetExperimentRunNodeExecutionsNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExperimentRunNodeExecutionsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
