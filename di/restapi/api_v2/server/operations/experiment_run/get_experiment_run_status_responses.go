// Code generated by go-swagger; DO NOT EDIT.

package experiment_run

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	restmodels "webank/DI/restapi/api_v2/restmodels"
)

// GetExperimentRunStatusOKCode is the HTTP code returned for type GetExperimentRunStatusOK
const GetExperimentRunStatusOKCode int = 200

/*GetExperimentRunStatusOK OK

swagger:response getExperimentRunStatusOK
*/
type GetExperimentRunStatusOK struct {

	/*
	  In: Body
	*/
	Payload *restmodels.ExperimentRunStatus `json:"body,omitempty"`
}

// NewGetExperimentRunStatusOK creates GetExperimentRunStatusOK with default headers values
func NewGetExperimentRunStatusOK() *GetExperimentRunStatusOK {

	return &GetExperimentRunStatusOK{}
}

// WithPayload adds the payload to the get experiment run status o k response
func (o *GetExperimentRunStatusOK) WithPayload(payload *restmodels.ExperimentRunStatus) *GetExperimentRunStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get experiment run status o k response
func (o *GetExperimentRunStatusOK) SetPayload(payload *restmodels.ExperimentRunStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExperimentRunStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetExperimentRunStatusUnauthorizedCode is the HTTP code returned for type GetExperimentRunStatusUnauthorized
const GetExperimentRunStatusUnauthorizedCode int = 401

/*GetExperimentRunStatusUnauthorized Unauthorized

swagger:response getExperimentRunStatusUnauthorized
*/
type GetExperimentRunStatusUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetExperimentRunStatusUnauthorized creates GetExperimentRunStatusUnauthorized with default headers values
func NewGetExperimentRunStatusUnauthorized() *GetExperimentRunStatusUnauthorized {

	return &GetExperimentRunStatusUnauthorized{}
}

// WithPayload adds the payload to the get experiment run status unauthorized response
func (o *GetExperimentRunStatusUnauthorized) WithPayload(payload *restmodels.Error) *GetExperimentRunStatusUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get experiment run status unauthorized response
func (o *GetExperimentRunStatusUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExperimentRunStatusUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetExperimentRunStatusNotFoundCode is the HTTP code returned for type GetExperimentRunStatusNotFound
const GetExperimentRunStatusNotFoundCode int = 404

/*GetExperimentRunStatusNotFound The Models cannot be found

swagger:response getExperimentRunStatusNotFound
*/
type GetExperimentRunStatusNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetExperimentRunStatusNotFound creates GetExperimentRunStatusNotFound with default headers values
func NewGetExperimentRunStatusNotFound() *GetExperimentRunStatusNotFound {

	return &GetExperimentRunStatusNotFound{}
}

// WithPayload adds the payload to the get experiment run status not found response
func (o *GetExperimentRunStatusNotFound) WithPayload(payload *restmodels.Error) *GetExperimentRunStatusNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get experiment run status not found response
func (o *GetExperimentRunStatusNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExperimentRunStatusNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
