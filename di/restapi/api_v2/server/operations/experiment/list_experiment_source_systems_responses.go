// Code generated by go-swagger; DO NOT EDIT.

package experiment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	restmodels "webank/DI/restapi/api_v2/restmodels"
)

// ListExperimentSourceSystemsOKCode is the HTTP code returned for type ListExperimentSourceSystemsOK
const ListExperimentSourceSystemsOKCode int = 200

/*ListExperimentSourceSystemsOK OK

swagger:response listExperimentSourceSystemsOK
*/
type ListExperimentSourceSystemsOK struct {

	/*实验来源类型列表
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewListExperimentSourceSystemsOK creates ListExperimentSourceSystemsOK with default headers values
func NewListExperimentSourceSystemsOK() *ListExperimentSourceSystemsOK {

	return &ListExperimentSourceSystemsOK{}
}

// WithPayload adds the payload to the list experiment source systems o k response
func (o *ListExperimentSourceSystemsOK) WithPayload(payload []string) *ListExperimentSourceSystemsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list experiment source systems o k response
func (o *ListExperimentSourceSystemsOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListExperimentSourceSystemsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListExperimentSourceSystemsUnauthorizedCode is the HTTP code returned for type ListExperimentSourceSystemsUnauthorized
const ListExperimentSourceSystemsUnauthorizedCode int = 401

/*ListExperimentSourceSystemsUnauthorized Unauthorized

swagger:response listExperimentSourceSystemsUnauthorized
*/
type ListExperimentSourceSystemsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewListExperimentSourceSystemsUnauthorized creates ListExperimentSourceSystemsUnauthorized with default headers values
func NewListExperimentSourceSystemsUnauthorized() *ListExperimentSourceSystemsUnauthorized {

	return &ListExperimentSourceSystemsUnauthorized{}
}

// WithPayload adds the payload to the list experiment source systems unauthorized response
func (o *ListExperimentSourceSystemsUnauthorized) WithPayload(payload *restmodels.Error) *ListExperimentSourceSystemsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list experiment source systems unauthorized response
func (o *ListExperimentSourceSystemsUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListExperimentSourceSystemsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListExperimentSourceSystemsNotFoundCode is the HTTP code returned for type ListExperimentSourceSystemsNotFound
const ListExperimentSourceSystemsNotFoundCode int = 404

/*ListExperimentSourceSystemsNotFound Model create failed

swagger:response listExperimentSourceSystemsNotFound
*/
type ListExperimentSourceSystemsNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewListExperimentSourceSystemsNotFound creates ListExperimentSourceSystemsNotFound with default headers values
func NewListExperimentSourceSystemsNotFound() *ListExperimentSourceSystemsNotFound {

	return &ListExperimentSourceSystemsNotFound{}
}

// WithPayload adds the payload to the list experiment source systems not found response
func (o *ListExperimentSourceSystemsNotFound) WithPayload(payload *restmodels.Error) *ListExperimentSourceSystemsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list experiment source systems not found response
func (o *ListExperimentSourceSystemsNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListExperimentSourceSystemsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
