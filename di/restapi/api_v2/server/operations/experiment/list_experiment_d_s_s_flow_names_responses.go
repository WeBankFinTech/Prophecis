// Code generated by go-swagger; DO NOT EDIT.

package experiment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	restmodels "webank/DI/restapi/api_v2/restmodels"
)

// ListExperimentDSSFlowNamesOKCode is the HTTP code returned for type ListExperimentDSSFlowNamesOK
const ListExperimentDSSFlowNamesOKCode int = 200

/*ListExperimentDSSFlowNamesOK OK

swagger:response listExperimentDSSFlowNamesOK
*/
type ListExperimentDSSFlowNamesOK struct {

	/*dss工作流名称列表
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewListExperimentDSSFlowNamesOK creates ListExperimentDSSFlowNamesOK with default headers values
func NewListExperimentDSSFlowNamesOK() *ListExperimentDSSFlowNamesOK {

	return &ListExperimentDSSFlowNamesOK{}
}

// WithPayload adds the payload to the list experiment d s s flow names o k response
func (o *ListExperimentDSSFlowNamesOK) WithPayload(payload []string) *ListExperimentDSSFlowNamesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list experiment d s s flow names o k response
func (o *ListExperimentDSSFlowNamesOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListExperimentDSSFlowNamesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListExperimentDSSFlowNamesUnauthorizedCode is the HTTP code returned for type ListExperimentDSSFlowNamesUnauthorized
const ListExperimentDSSFlowNamesUnauthorizedCode int = 401

/*ListExperimentDSSFlowNamesUnauthorized Unauthorized

swagger:response listExperimentDSSFlowNamesUnauthorized
*/
type ListExperimentDSSFlowNamesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewListExperimentDSSFlowNamesUnauthorized creates ListExperimentDSSFlowNamesUnauthorized with default headers values
func NewListExperimentDSSFlowNamesUnauthorized() *ListExperimentDSSFlowNamesUnauthorized {

	return &ListExperimentDSSFlowNamesUnauthorized{}
}

// WithPayload adds the payload to the list experiment d s s flow names unauthorized response
func (o *ListExperimentDSSFlowNamesUnauthorized) WithPayload(payload *restmodels.Error) *ListExperimentDSSFlowNamesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list experiment d s s flow names unauthorized response
func (o *ListExperimentDSSFlowNamesUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListExperimentDSSFlowNamesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListExperimentDSSFlowNamesNotFoundCode is the HTTP code returned for type ListExperimentDSSFlowNamesNotFound
const ListExperimentDSSFlowNamesNotFoundCode int = 404

/*ListExperimentDSSFlowNamesNotFound Model create failed

swagger:response listExperimentDSSFlowNamesNotFound
*/
type ListExperimentDSSFlowNamesNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewListExperimentDSSFlowNamesNotFound creates ListExperimentDSSFlowNamesNotFound with default headers values
func NewListExperimentDSSFlowNamesNotFound() *ListExperimentDSSFlowNamesNotFound {

	return &ListExperimentDSSFlowNamesNotFound{}
}

// WithPayload adds the payload to the list experiment d s s flow names not found response
func (o *ListExperimentDSSFlowNamesNotFound) WithPayload(payload *restmodels.Error) *ListExperimentDSSFlowNamesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list experiment d s s flow names not found response
func (o *ListExperimentDSSFlowNamesNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListExperimentDSSFlowNamesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
