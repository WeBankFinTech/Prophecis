// Code generated by go-swagger; DO NOT EDIT.

package experiment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	restmodels "webank/DI/restapi/api_v2/restmodels"
)

// PatchExperimentOKCode is the HTTP code returned for type PatchExperimentOK
const PatchExperimentOKCode int = 200

/*PatchExperimentOK OK

swagger:response patchExperimentOK
*/
type PatchExperimentOK struct {
}

// NewPatchExperimentOK creates PatchExperimentOK with default headers values
func NewPatchExperimentOK() *PatchExperimentOK {

	return &PatchExperimentOK{}
}

// WriteResponse to the client
func (o *PatchExperimentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PatchExperimentUnauthorizedCode is the HTTP code returned for type PatchExperimentUnauthorized
const PatchExperimentUnauthorizedCode int = 401

/*PatchExperimentUnauthorized Unauthorized

swagger:response patchExperimentUnauthorized
*/
type PatchExperimentUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewPatchExperimentUnauthorized creates PatchExperimentUnauthorized with default headers values
func NewPatchExperimentUnauthorized() *PatchExperimentUnauthorized {

	return &PatchExperimentUnauthorized{}
}

// WithPayload adds the payload to the patch experiment unauthorized response
func (o *PatchExperimentUnauthorized) WithPayload(payload *restmodels.Error) *PatchExperimentUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch experiment unauthorized response
func (o *PatchExperimentUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchExperimentUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchExperimentNotFoundCode is the HTTP code returned for type PatchExperimentNotFound
const PatchExperimentNotFoundCode int = 404

/*PatchExperimentNotFound Model create failed

swagger:response patchExperimentNotFound
*/
type PatchExperimentNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewPatchExperimentNotFound creates PatchExperimentNotFound with default headers values
func NewPatchExperimentNotFound() *PatchExperimentNotFound {

	return &PatchExperimentNotFound{}
}

// WithPayload adds the payload to the patch experiment not found response
func (o *PatchExperimentNotFound) WithPayload(payload *restmodels.Error) *PatchExperimentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch experiment not found response
func (o *PatchExperimentNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchExperimentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
