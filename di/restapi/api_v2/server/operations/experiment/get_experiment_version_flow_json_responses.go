// Code generated by go-swagger; DO NOT EDIT.

package experiment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	restmodels "webank/DI/restapi/api_v2/restmodels"
)

// GetExperimentVersionFlowJSONOKCode is the HTTP code returned for type GetExperimentVersionFlowJSONOK
const GetExperimentVersionFlowJSONOKCode int = 200

/*GetExperimentVersionFlowJSONOK 导出的实验工作流描述

swagger:response getExperimentVersionFlowJsonOK
*/
type GetExperimentVersionFlowJSONOK struct {

	/*
	  In: Body
	*/
	Payload *restmodels.FlowJSONResponse `json:"body,omitempty"`
}

// NewGetExperimentVersionFlowJSONOK creates GetExperimentVersionFlowJSONOK with default headers values
func NewGetExperimentVersionFlowJSONOK() *GetExperimentVersionFlowJSONOK {

	return &GetExperimentVersionFlowJSONOK{}
}

// WithPayload adds the payload to the get experiment version flow Json o k response
func (o *GetExperimentVersionFlowJSONOK) WithPayload(payload *restmodels.FlowJSONResponse) *GetExperimentVersionFlowJSONOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get experiment version flow Json o k response
func (o *GetExperimentVersionFlowJSONOK) SetPayload(payload *restmodels.FlowJSONResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExperimentVersionFlowJSONOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetExperimentVersionFlowJSONUnauthorizedCode is the HTTP code returned for type GetExperimentVersionFlowJSONUnauthorized
const GetExperimentVersionFlowJSONUnauthorizedCode int = 401

/*GetExperimentVersionFlowJSONUnauthorized Unauthorized

swagger:response getExperimentVersionFlowJsonUnauthorized
*/
type GetExperimentVersionFlowJSONUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetExperimentVersionFlowJSONUnauthorized creates GetExperimentVersionFlowJSONUnauthorized with default headers values
func NewGetExperimentVersionFlowJSONUnauthorized() *GetExperimentVersionFlowJSONUnauthorized {

	return &GetExperimentVersionFlowJSONUnauthorized{}
}

// WithPayload adds the payload to the get experiment version flow Json unauthorized response
func (o *GetExperimentVersionFlowJSONUnauthorized) WithPayload(payload *restmodels.Error) *GetExperimentVersionFlowJSONUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get experiment version flow Json unauthorized response
func (o *GetExperimentVersionFlowJSONUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExperimentVersionFlowJSONUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetExperimentVersionFlowJSONNotFoundCode is the HTTP code returned for type GetExperimentVersionFlowJSONNotFound
const GetExperimentVersionFlowJSONNotFoundCode int = 404

/*GetExperimentVersionFlowJSONNotFound The Experiment cannot be found

swagger:response getExperimentVersionFlowJsonNotFound
*/
type GetExperimentVersionFlowJSONNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewGetExperimentVersionFlowJSONNotFound creates GetExperimentVersionFlowJSONNotFound with default headers values
func NewGetExperimentVersionFlowJSONNotFound() *GetExperimentVersionFlowJSONNotFound {

	return &GetExperimentVersionFlowJSONNotFound{}
}

// WithPayload adds the payload to the get experiment version flow Json not found response
func (o *GetExperimentVersionFlowJSONNotFound) WithPayload(payload *restmodels.Error) *GetExperimentVersionFlowJSONNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get experiment version flow Json not found response
func (o *GetExperimentVersionFlowJSONNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExperimentVersionFlowJSONNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
