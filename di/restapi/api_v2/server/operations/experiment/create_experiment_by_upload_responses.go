// Code generated by go-swagger; DO NOT EDIT.

package experiment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	restmodels "webank/DI/restapi/api_v2/restmodels"
)

// CreateExperimentByUploadOKCode is the HTTP code returned for type CreateExperimentByUploadOK
const CreateExperimentByUploadOKCode int = 200

/*CreateExperimentByUploadOK OK

swagger:response createExperimentByUploadOK
*/
type CreateExperimentByUploadOK struct {

	/*
	  In: Body
	*/
	Payload *restmodels.CreateExperimentResponse `json:"body,omitempty"`
}

// NewCreateExperimentByUploadOK creates CreateExperimentByUploadOK with default headers values
func NewCreateExperimentByUploadOK() *CreateExperimentByUploadOK {

	return &CreateExperimentByUploadOK{}
}

// WithPayload adds the payload to the create experiment by upload o k response
func (o *CreateExperimentByUploadOK) WithPayload(payload *restmodels.CreateExperimentResponse) *CreateExperimentByUploadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create experiment by upload o k response
func (o *CreateExperimentByUploadOK) SetPayload(payload *restmodels.CreateExperimentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateExperimentByUploadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateExperimentByUploadUnauthorizedCode is the HTTP code returned for type CreateExperimentByUploadUnauthorized
const CreateExperimentByUploadUnauthorizedCode int = 401

/*CreateExperimentByUploadUnauthorized Unauthorized

swagger:response createExperimentByUploadUnauthorized
*/
type CreateExperimentByUploadUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewCreateExperimentByUploadUnauthorized creates CreateExperimentByUploadUnauthorized with default headers values
func NewCreateExperimentByUploadUnauthorized() *CreateExperimentByUploadUnauthorized {

	return &CreateExperimentByUploadUnauthorized{}
}

// WithPayload adds the payload to the create experiment by upload unauthorized response
func (o *CreateExperimentByUploadUnauthorized) WithPayload(payload *restmodels.Error) *CreateExperimentByUploadUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create experiment by upload unauthorized response
func (o *CreateExperimentByUploadUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateExperimentByUploadUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateExperimentByUploadNotFoundCode is the HTTP code returned for type CreateExperimentByUploadNotFound
const CreateExperimentByUploadNotFoundCode int = 404

/*CreateExperimentByUploadNotFound The Models cannot be found

swagger:response createExperimentByUploadNotFound
*/
type CreateExperimentByUploadNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewCreateExperimentByUploadNotFound creates CreateExperimentByUploadNotFound with default headers values
func NewCreateExperimentByUploadNotFound() *CreateExperimentByUploadNotFound {

	return &CreateExperimentByUploadNotFound{}
}

// WithPayload adds the payload to the create experiment by upload not found response
func (o *CreateExperimentByUploadNotFound) WithPayload(payload *restmodels.Error) *CreateExperimentByUploadNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create experiment by upload not found response
func (o *CreateExperimentByUploadNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateExperimentByUploadNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
