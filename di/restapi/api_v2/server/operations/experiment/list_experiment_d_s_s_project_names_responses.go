// Code generated by go-swagger; DO NOT EDIT.

package experiment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	restmodels "webank/DI/restapi/api_v2/restmodels"
)

// ListExperimentDSSProjectNamesOKCode is the HTTP code returned for type ListExperimentDSSProjectNamesOK
const ListExperimentDSSProjectNamesOKCode int = 200

/*ListExperimentDSSProjectNamesOK OK

swagger:response listExperimentDSSProjectNamesOK
*/
type ListExperimentDSSProjectNamesOK struct {

	/*dss项目名称列表
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewListExperimentDSSProjectNamesOK creates ListExperimentDSSProjectNamesOK with default headers values
func NewListExperimentDSSProjectNamesOK() *ListExperimentDSSProjectNamesOK {

	return &ListExperimentDSSProjectNamesOK{}
}

// WithPayload adds the payload to the list experiment d s s project names o k response
func (o *ListExperimentDSSProjectNamesOK) WithPayload(payload []string) *ListExperimentDSSProjectNamesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list experiment d s s project names o k response
func (o *ListExperimentDSSProjectNamesOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListExperimentDSSProjectNamesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListExperimentDSSProjectNamesUnauthorizedCode is the HTTP code returned for type ListExperimentDSSProjectNamesUnauthorized
const ListExperimentDSSProjectNamesUnauthorizedCode int = 401

/*ListExperimentDSSProjectNamesUnauthorized Unauthorized

swagger:response listExperimentDSSProjectNamesUnauthorized
*/
type ListExperimentDSSProjectNamesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewListExperimentDSSProjectNamesUnauthorized creates ListExperimentDSSProjectNamesUnauthorized with default headers values
func NewListExperimentDSSProjectNamesUnauthorized() *ListExperimentDSSProjectNamesUnauthorized {

	return &ListExperimentDSSProjectNamesUnauthorized{}
}

// WithPayload adds the payload to the list experiment d s s project names unauthorized response
func (o *ListExperimentDSSProjectNamesUnauthorized) WithPayload(payload *restmodels.Error) *ListExperimentDSSProjectNamesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list experiment d s s project names unauthorized response
func (o *ListExperimentDSSProjectNamesUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListExperimentDSSProjectNamesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListExperimentDSSProjectNamesNotFoundCode is the HTTP code returned for type ListExperimentDSSProjectNamesNotFound
const ListExperimentDSSProjectNamesNotFoundCode int = 404

/*ListExperimentDSSProjectNamesNotFound Model create failed

swagger:response listExperimentDSSProjectNamesNotFound
*/
type ListExperimentDSSProjectNamesNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewListExperimentDSSProjectNamesNotFound creates ListExperimentDSSProjectNamesNotFound with default headers values
func NewListExperimentDSSProjectNamesNotFound() *ListExperimentDSSProjectNamesNotFound {

	return &ListExperimentDSSProjectNamesNotFound{}
}

// WithPayload adds the payload to the list experiment d s s project names not found response
func (o *ListExperimentDSSProjectNamesNotFound) WithPayload(payload *restmodels.Error) *ListExperimentDSSProjectNamesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list experiment d s s project names not found response
func (o *ListExperimentDSSProjectNamesNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListExperimentDSSProjectNamesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
