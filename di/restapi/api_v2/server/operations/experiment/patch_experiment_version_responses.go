// Code generated by go-swagger; DO NOT EDIT.

package experiment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	restmodels "webank/DI/restapi/api_v2/restmodels"
)

// PatchExperimentVersionOKCode is the HTTP code returned for type PatchExperimentVersionOK
const PatchExperimentVersionOKCode int = 200

/*PatchExperimentVersionOK OK

swagger:response patchExperimentVersionOK
*/
type PatchExperimentVersionOK struct {
}

// NewPatchExperimentVersionOK creates PatchExperimentVersionOK with default headers values
func NewPatchExperimentVersionOK() *PatchExperimentVersionOK {

	return &PatchExperimentVersionOK{}
}

// WriteResponse to the client
func (o *PatchExperimentVersionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PatchExperimentVersionUnauthorizedCode is the HTTP code returned for type PatchExperimentVersionUnauthorized
const PatchExperimentVersionUnauthorizedCode int = 401

/*PatchExperimentVersionUnauthorized Unauthorized

swagger:response patchExperimentVersionUnauthorized
*/
type PatchExperimentVersionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewPatchExperimentVersionUnauthorized creates PatchExperimentVersionUnauthorized with default headers values
func NewPatchExperimentVersionUnauthorized() *PatchExperimentVersionUnauthorized {

	return &PatchExperimentVersionUnauthorized{}
}

// WithPayload adds the payload to the patch experiment version unauthorized response
func (o *PatchExperimentVersionUnauthorized) WithPayload(payload *restmodels.Error) *PatchExperimentVersionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch experiment version unauthorized response
func (o *PatchExperimentVersionUnauthorized) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchExperimentVersionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchExperimentVersionNotFoundCode is the HTTP code returned for type PatchExperimentVersionNotFound
const PatchExperimentVersionNotFoundCode int = 404

/*PatchExperimentVersionNotFound Model create failed

swagger:response patchExperimentVersionNotFound
*/
type PatchExperimentVersionNotFound struct {

	/*
	  In: Body
	*/
	Payload *restmodels.Error `json:"body,omitempty"`
}

// NewPatchExperimentVersionNotFound creates PatchExperimentVersionNotFound with default headers values
func NewPatchExperimentVersionNotFound() *PatchExperimentVersionNotFound {

	return &PatchExperimentVersionNotFound{}
}

// WithPayload adds the payload to the patch experiment version not found response
func (o *PatchExperimentVersionNotFound) WithPayload(payload *restmodels.Error) *PatchExperimentVersionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch experiment version not found response
func (o *PatchExperimentVersionNotFound) SetPayload(payload *restmodels.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchExperimentVersionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
