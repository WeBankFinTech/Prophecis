// Code generated by go-swagger; DO NOT EDIT.

package restmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GPUNodeDataStoresSDirectory 存储根目录
// swagger:model GPUNodeDataStoresSDirectory
type GPUNodeDataStoresSDirectory struct {

	// 目前固定为hostmount
	ID string `json:"id,omitempty"`

	// 目前固定为host-mount
	Name string `json:"name,omitempty"`

	// 资源设置-存储根目录
	Path string `json:"path,omitempty"`

	// 存储的类型（目前只支持host_mount）
	// Enum: [host_mount]
	Type string `json:"type,omitempty"`
}

// Validate validates this g p u node data stores s directory
func (m *GPUNodeDataStoresSDirectory) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var gPUNodeDataStoresSDirectoryTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["host_mount"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gPUNodeDataStoresSDirectoryTypeTypePropEnum = append(gPUNodeDataStoresSDirectoryTypeTypePropEnum, v)
	}
}

const (

	// GPUNodeDataStoresSDirectoryTypeHostMount captures enum value "host_mount"
	GPUNodeDataStoresSDirectoryTypeHostMount string = "host_mount"
)

// prop value enum
func (m *GPUNodeDataStoresSDirectory) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, gPUNodeDataStoresSDirectoryTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GPUNodeDataStoresSDirectory) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GPUNodeDataStoresSDirectory) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GPUNodeDataStoresSDirectory) UnmarshalBinary(b []byte) error {
	var res GPUNodeDataStoresSDirectory
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
