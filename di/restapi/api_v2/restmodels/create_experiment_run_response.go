// Code generated by go-swagger; DO NOT EDIT.

package restmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateExperimentRunResponse create experiment run response
// swagger:model CreateExperimentRunResponse
type CreateExperimentRunResponse struct {

	// 执行创建的时候/执行提交的时间
	// Format: date-time
	CreateTime strfmt.DateTime `json:"create_time,omitempty"`

	// 执行创建人
	CreateUser string `json:"create_user,omitempty"`

	// 执行结束的时间
	// Format: date-time
	EndTime strfmt.DateTime `json:"end_time,omitempty"`

	// 执行的实验ID
	ExpID string `json:"exp_id,omitempty"`

	// 实验执行记录的ID
	ExpRunID string `json:"exp_run_id,omitempty"`

	// 执行的实验的版本名字
	ExpVersionName string `json:"exp_version_name,omitempty"`
}

// Validate validates this create experiment run response
func (m *CreateExperimentRunResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreateTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEndTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateExperimentRunResponse) validateCreateTime(formats strfmt.Registry) error {

	if swag.IsZero(m.CreateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("create_time", "body", "date-time", m.CreateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CreateExperimentRunResponse) validateEndTime(formats strfmt.Registry) error {

	if swag.IsZero(m.EndTime) { // not required
		return nil
	}

	if err := validate.FormatOf("end_time", "body", "date-time", m.EndTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateExperimentRunResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateExperimentRunResponse) UnmarshalBinary(b []byte) error {
	var res CreateExperimentRunResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
