// Code generated by go-swagger; DO NOT EDIT.

package restmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProcessLineInput 加工线类型的输入数据结构
// swagger:model ProcessLineInput
type ProcessLineInput struct {

	// 类似GPU节点的 参数设置-任务执行设置-高级参数配置-模型用户组/加工线用户组
	GroupID string `json:"group_id,omitempty"`

	// 类似GPU节点的 参数设置-任务执行设置-高级参数配置-加工线名称
	ProcesslineID string `json:"processline_id,omitempty"`

	// 类似GPU节点的 参数设置-任务执行设置-高级参数配置-加工线版本
	ProcesslineVersionID string `json:"processline_version_id,omitempty"`

	// 模型数据的来源类型，枚举值
	//
	// 选择全局变量要求在全局参数里定义了加工线类型的变量，这里便可以选择该变量，然后在执行工作流和发布工作流的时候可以动态修改该变量；选择自定义则是普通的设置加工线相关的设置
	// Enum: [direct variable]
	SourceType string `json:"source_type,omitempty"`

	// 当source_type为variable的时候，需填充该值为全局变量的某个model类型的key
	VariableKey string `json:"variable_key,omitempty"`
}

// Validate validates this process line input
func (m *ProcessLineInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSourceType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var processLineInputTypeSourceTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["direct","variable"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		processLineInputTypeSourceTypePropEnum = append(processLineInputTypeSourceTypePropEnum, v)
	}
}

const (

	// ProcessLineInputSourceTypeDirect captures enum value "direct"
	ProcessLineInputSourceTypeDirect string = "direct"

	// ProcessLineInputSourceTypeVariable captures enum value "variable"
	ProcessLineInputSourceTypeVariable string = "variable"
)

// prop value enum
func (m *ProcessLineInput) validateSourceTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, processLineInputTypeSourceTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ProcessLineInput) validateSourceType(formats strfmt.Registry) error {

	if swag.IsZero(m.SourceType) { // not required
		return nil
	}

	// value enum
	if err := m.validateSourceTypeEnum("source_type", "body", m.SourceType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProcessLineInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProcessLineInput) UnmarshalBinary(b []byte) error {
	var res ProcessLineInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
