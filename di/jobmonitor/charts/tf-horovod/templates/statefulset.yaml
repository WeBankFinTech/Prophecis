{{- $gpuCount := .Values.gpuCount -}}
{{- $syncMode := .Values.syncMode -}}
{{- $dataDirs := .Values.dataDirs -}}
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ template "horovod.fullname" . }}
  labels:
    app: {{ template "horovod.name" . }}
    chart: {{ template "horovod.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: mpiworker
spec:
  selector:
    matchLabels:
      app: {{ template "horovod.name" . }}
      chart: {{ template "horovod.chart" . }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
      role: mpiworker
  serviceName: {{ template "horovod.fullname" . }}
  podManagementPolicy: Parallel
  replicas: {{ .Values.workers }}
  template:
    metadata:
      labels:
        app: {{ template "horovod.name" . }}
        chart: {{ template "horovod.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        role: mpiworker
      annotations:
      {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
    spec:
      {{- if .Values.useHostNetwork }}
      {{- if not .Values.useENI }}
      hostNetwork: {{ .Values.useHostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      {{- end }}
      {{- if .Values.useHostPID }}
      hostPID: {{ .Values.useHostPID }}
      {{- end }}
      volumes:
      {{- if .Values.syncMode }}
      - name: code-sync
        emptyDir: {}
      {{- end}}
      {{- if .Values.nvidiaPath }}
      - hostPath:
          path: "{{ .Values.nvidiaPath }}"
        name: nvidia
      {{- end }}
      {{- if .Values.dataset }}   
      {{- range $pvcName, $destPath := .Values.dataset }}
      - name: "{{ $pvcName }}"
        persistentVolumeClaim:
          claimName: "{{ $pvcName }}"
      {{- end }}
      {{- end }}
      - name: {{ template "horovod.fullname" . }}-cm
        configMap:
          name: {{ template "horovod.fullname" . }}-cm
          items:
          - key: hostfile.config
            path: hostfile
            mode: 438
          - key: ssh.readiness
            path: check.sh
            mode: 365
      {{- if $dataDirs }}
      {{- range $dataDirs }}
      - hostPath:
          path: {{ .hostPath }}
        name: {{ .name }}
      {{- end }}
      {{- end }}
      {{- if .Values.shmSize }}
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: {{ .Values.shmSize }}
      {{- end }}
      {{- if .Values.syncMode }}
      initContainers:
        - name: init-job
          {{- if eq "rsync" $syncMode }}
          image: "{{ .Values.syncImage }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: ["rsync", "-avP", "{{ .Values.syncSource}}", "/code"]
          {{- end }}
          env:        
          {{- range $key, $value := .Values.envs }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
          {{- end }}
          volumeMounts:
            - name: code-sync
              mountPath: /code
      {{- end}}
      containers:
      - name: {{ template "horovod.fullname" . }}-worker
        image: "{{ .Values.image }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if .Values.workingDir }}
        workingDir: {{ .Values.workingDir }}
        {{- end }}
        env:
         - name: targetport
           value: "{{ .Values.sshPort }}"
       {{- if .Values.envs }}            
       {{- range $key, $value := .Values.envs }}
         - name: "{{ $key }}"
           value: "{{ $value }}"
       {{- end }}
       {{- end }}
{{- if .Values.privileged }}
        securityContext:
          privileged: true
{{- else if .Values.enableRDMA }}
        securityContext:
          capabilities:
            add:
            - IPC_LOCK
{{- end }}
        ports:
        - containerPort: {{ .Values.sshPort }}
        volumeMounts:
        {{- if .Values.syncMode }}
        {{- if .Values.workingDir }}
        - name: code-sync
          mountPath: {{ .Values.workingDir }}/code
        {{- else }}
        - name: code-sync
          mountPath: /code
        {{- end}}
        {{- end}}
        {{- if .Values.nvidiaPath }}
        - mountPath: /usr/local/nvidia
          name: nvidia
        {{- end }}
        {{- if .Values.dataset }}   
        {{- range $pvcName, $destPath := .Values.dataset }}
        - name: "{{ $pvcName }}"
          mountPath: "{{ $destPath }}"
        {{- end }}
        {{- end }}
        - name: {{ template "horovod.fullname" . }}-cm
          mountPath: /openmpi/generated
        {{- if $dataDirs }}
        {{- range $dataDirs }}
        - mountPath: {{ .containerPath }}
          name: {{ .name }}
        {{- end }}
        {{- end }}
        {{- if .Values.shmSize }}
        - mountPath: /dev/shm
          name: dshm
        {{- end }}
        readinessProbe:
          exec:
            command:
              - /openmpi/generated/check.sh
          initialDelaySeconds: 1
          periodSeconds: 2
        resources:
            requests:
              {{- if gt (int $gpuCount) 0}}
              {{- if .Values.nvidiaPath }}
              alpha.kubernetes.io/nvidia-gpu: {{ $gpuCount | quote }}
              {{- else}}
              nvidia.com/gpu: {{ $gpuCount | quote }}
              {{- end}}
              {{- end}}
              {{- if .Values.cpu }}
              cpu: {{ .Values.cpu | quote }}
              {{- end}}
              {{- if .Values.memory }}
              memory: {{ .Values.memory | quote }}
              {{- end}}
              {{- if .Values.enableRDMA }}
              rdma/hca: "1"
              {{- end}}
            limits:
              {{- if gt (int $gpuCount) 0}}
              {{- if .Values.nvidiaPath }}
              alpha.kubernetes.io/nvidia-gpu: {{ $gpuCount | quote }}
              {{- else}}
              nvidia.com/gpu: {{ $gpuCount | quote }}
              {{- end}}
              {{- end}}
              {{- if .Values.cpu }}
              cpu: {{ .Values.cpu | quote }}
              {{- end}}
              {{- if .Values.memory }}
              memory: {{ .Values.memory | quote }}
              {{- end}}
              {{- if .Values.enableRDMA }}
              rdma/hca: "1"
              {{- end}}
