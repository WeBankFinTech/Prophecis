{{- if eq .Values.enableIstio true }}
{{- if eq .Values.modelServiceExists false }}
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: "{{ .Values.servingName }}"
spec:
  hosts:
  - "{{ .Values.servingName }}"
  {{- if eq .Values.exposeService true }}
  gateways:
    - "{{ .Values.servingName }}-gateway"
    - "mesh"
  {{- end }}
  http:
  - route:
    - destination:
        host: {{ .Values.servingName }}
        subset: "subset-{{ .Values.servingVersion }}"
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: {{ .Values.servingName }}
spec:
  host: {{ .Values.servingName }}
  subsets:
  - name: "subset-{{ .Values.servingVersion }}"
    labels:
      servingVersion: "{{ .Values.servingVersion }}"
---
{{- if eq .Values.exposeService true }}
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: "{{ .Values.servingName }}-gateway"
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
{{- end }}
{{- end }}
{{- end }}