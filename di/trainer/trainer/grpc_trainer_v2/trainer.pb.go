//
// Copyright 2017-2018 IBM Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: grpc_trainer_v2/trainer.proto

package grpc_trainer_v2

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SizeUnit int32

const (
	SizeUnit_MB  SizeUnit = 0
	SizeUnit_MiB SizeUnit = 1
	SizeUnit_GB  SizeUnit = 2
	SizeUnit_GiB SizeUnit = 3
)

// Enum value maps for SizeUnit.
var (
	SizeUnit_name = map[int32]string{
		0: "MB",
		1: "MiB",
		2: "GB",
		3: "GiB",
	}
	SizeUnit_value = map[string]int32{
		"MB":  0,
		"MiB": 1,
		"GB":  2,
		"GiB": 3,
	}
)

func (x SizeUnit) Enum() *SizeUnit {
	p := new(SizeUnit)
	*p = x
	return p
}

func (x SizeUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SizeUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_trainer_v2_trainer_proto_enumTypes[0].Descriptor()
}

func (SizeUnit) Type() protoreflect.EnumType {
	return &file_grpc_trainer_v2_trainer_proto_enumTypes[0]
}

func (x SizeUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SizeUnit.Descriptor instead.
func (SizeUnit) EnumDescriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_NOT_STARTED Status = 0
	Status_QUEUED      Status = 1
	Status_PENDING     Status = 2
	Status_PROCESSING  Status = 3
	Status_RUNNING     Status = 4
	Status_COMPLETED   Status = 5
	Status_FAILED      Status = 6
	Status_KILLING     Status = 7
	Status_CANCELLED   Status = 8
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "NOT_STARTED",
		1: "QUEUED",
		2: "PENDING",
		3: "PROCESSING",
		4: "RUNNING",
		5: "COMPLETED",
		6: "FAILED",
		7: "KILLING",
		8: "CANCELLED",
	}
	Status_value = map[string]int32{
		"NOT_STARTED": 0,
		"QUEUED":      1,
		"PENDING":     2,
		"PROCESSING":  3,
		"RUNNING":     4,
		"COMPLETED":   5,
		"FAILED":      6,
		"KILLING":     7,
		"CANCELLED":   8,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_trainer_v2_trainer_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_grpc_trainer_v2_trainer_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{1}
}

type Any_DataType int32

const (
	Any_STRING     Any_DataType = 0
	Any_JSONSTRING Any_DataType = 1
	Any_INT        Any_DataType = 2
	Any_FLOAT      Any_DataType = 3
)

// Enum value maps for Any_DataType.
var (
	Any_DataType_name = map[int32]string{
		0: "STRING",
		1: "JSONSTRING",
		2: "INT",
		3: "FLOAT",
	}
	Any_DataType_value = map[string]int32{
		"STRING":     0,
		"JSONSTRING": 1,
		"INT":        2,
		"FLOAT":      3,
	}
)

func (x Any_DataType) Enum() *Any_DataType {
	p := new(Any_DataType)
	*p = x
	return p
}

func (x Any_DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Any_DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_trainer_v2_trainer_proto_enumTypes[2].Descriptor()
}

func (Any_DataType) Type() protoreflect.EnumType {
	return &file_grpc_trainer_v2_trainer_proto_enumTypes[2]
}

func (x Any_DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Any_DataType.Descriptor instead.
func (Any_DataType) EnumDescriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{9, 0}
}

type Query_SearchType int32

const (
	Query_TERM   Query_SearchType = 0
	Query_NESTED Query_SearchType = 1
	Query_MATCH  Query_SearchType = 2
	Query_ALL    Query_SearchType = 3
)

// Enum value maps for Query_SearchType.
var (
	Query_SearchType_name = map[int32]string{
		0: "TERM",
		1: "NESTED",
		2: "MATCH",
		3: "ALL",
	}
	Query_SearchType_value = map[string]int32{
		"TERM":   0,
		"NESTED": 1,
		"MATCH":  2,
		"ALL":    3,
	}
)

func (x Query_SearchType) Enum() *Query_SearchType {
	p := new(Query_SearchType)
	*p = x
	return p
}

func (x Query_SearchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Query_SearchType) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_trainer_v2_trainer_proto_enumTypes[3].Descriptor()
}

func (Query_SearchType) Type() protoreflect.EnumType {
	return &file_grpc_trainer_v2_trainer_proto_enumTypes[3]
}

func (x Query_SearchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Query_SearchType.Descriptor instead.
func (Query_SearchType) EnumDescriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{12, 0}
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ModelDefinition *ModelDefinition `protobuf:"bytes,2,opt,name=model_definition,json=modelDefinition,proto3" json:"model_definition,omitempty"`
	Training        *Training        `protobuf:"bytes,3,opt,name=training,proto3" json:"training,omitempty"`
	Datastores      []*Datastore     `protobuf:"bytes,4,rep,name=datastores,proto3" json:"datastores,omitempty"`
	// EMExtractionSpec allows the caller to specify evaluation metrics extraction.
	EvaluationMetrics *EMExtractionSpec `protobuf:"bytes,5,opt,name=evaluation_metrics,json=evaluationMetrics,proto3" json:"evaluation_metrics,omitempty"`
	// Add Kubernetes Namespace
	Namespace string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// FIXME MLSS Change: properties for alert
	Gid          string   `protobuf:"bytes,7,opt,name=gid,proto3" json:"gid,omitempty"`
	Uid          string   `protobuf:"bytes,8,opt,name=uid,proto3" json:"uid,omitempty"`
	JobAlert     string   `protobuf:"bytes,9,opt,name=job_alert,json=jobAlert,proto3" json:"job_alert,omitempty"`
	CodeSelector string   `protobuf:"bytes,10,opt,name=code_selector,json=codeSelector,proto3" json:"code_selector,omitempty"`
	DataPath     string   `protobuf:"bytes,11,opt,name=data_path,json=dataPath,proto3" json:"data_path,omitempty"`
	JobType      string   `protobuf:"bytes,12,opt,name=job_type,json=jobType,proto3" json:"job_type,omitempty"`
	PSs          string   `protobuf:"bytes,13,opt,name=p_ss,json=pSs,proto3" json:"p_ss,omitempty"`
	PSCpu        string   `protobuf:"bytes,14,opt,name=p_s_cpu,json=pSCpu,proto3" json:"p_s_cpu,omitempty"`
	PSImage      string   `protobuf:"bytes,15,opt,name=p_s_image,json=pSImage,proto3" json:"p_s_image,omitempty"`
	PSMemory     string   `protobuf:"bytes,16,opt,name=p_s_memory,json=pSMemory,proto3" json:"p_s_memory,omitempty"`
	TFosRequest  string   `protobuf:"bytes,17,opt,name=t_fos_request,json=tFosRequest,proto3" json:"t_fos_request,omitempty"`
	Token        string   `protobuf:"bytes,18,opt,name=token,proto3" json:"token,omitempty"`
	ExpRunId     string   `protobuf:"bytes,19,opt,name=exp_run_id,json=expRunId,proto3" json:"exp_run_id,omitempty"`
	ExpName      string   `protobuf:"bytes,20,opt,name=exp_name,json=expName,proto3" json:"exp_name,omitempty"`
	FileName     string   `protobuf:"bytes,21,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FilePath     string   `protobuf:"bytes,22,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	ProxyUser    string   `protobuf:"bytes,23,opt,name=proxy_user,json=proxyUser,proto3" json:"proxy_user,omitempty"`
	JobParams    string   `protobuf:"bytes,24,opt,name=job_params,json=jobParams,proto3" json:"job_params,omitempty"`
	DataSet      *DataSet `protobuf:"bytes,25,opt,name=data_set,json=dataSet,proto3" json:"data_set,omitempty"`
	MfModel      *MFModel `protobuf:"bytes,26,opt,name=mf_model,json=mfModel,proto3" json:"mf_model,omitempty"`
	Algorithm    string   `protobuf:"bytes,27,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	FitParams    string   `protobuf:"bytes,28,opt,name=fit_params,json=fitParams,proto3" json:"fit_params,omitempty"`
	APIType      string   `protobuf:"bytes,29,opt,name=API_type,json=APIType,proto3" json:"API_type,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateRequest) GetModelDefinition() *ModelDefinition {
	if x != nil {
		return x.ModelDefinition
	}
	return nil
}

func (x *CreateRequest) GetTraining() *Training {
	if x != nil {
		return x.Training
	}
	return nil
}

func (x *CreateRequest) GetDatastores() []*Datastore {
	if x != nil {
		return x.Datastores
	}
	return nil
}

func (x *CreateRequest) GetEvaluationMetrics() *EMExtractionSpec {
	if x != nil {
		return x.EvaluationMetrics
	}
	return nil
}

func (x *CreateRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *CreateRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CreateRequest) GetJobAlert() string {
	if x != nil {
		return x.JobAlert
	}
	return ""
}

func (x *CreateRequest) GetCodeSelector() string {
	if x != nil {
		return x.CodeSelector
	}
	return ""
}

func (x *CreateRequest) GetDataPath() string {
	if x != nil {
		return x.DataPath
	}
	return ""
}

func (x *CreateRequest) GetJobType() string {
	if x != nil {
		return x.JobType
	}
	return ""
}

func (x *CreateRequest) GetPSs() string {
	if x != nil {
		return x.PSs
	}
	return ""
}

func (x *CreateRequest) GetPSCpu() string {
	if x != nil {
		return x.PSCpu
	}
	return ""
}

func (x *CreateRequest) GetPSImage() string {
	if x != nil {
		return x.PSImage
	}
	return ""
}

func (x *CreateRequest) GetPSMemory() string {
	if x != nil {
		return x.PSMemory
	}
	return ""
}

func (x *CreateRequest) GetTFosRequest() string {
	if x != nil {
		return x.TFosRequest
	}
	return ""
}

func (x *CreateRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreateRequest) GetExpRunId() string {
	if x != nil {
		return x.ExpRunId
	}
	return ""
}

func (x *CreateRequest) GetExpName() string {
	if x != nil {
		return x.ExpName
	}
	return ""
}

func (x *CreateRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CreateRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *CreateRequest) GetProxyUser() string {
	if x != nil {
		return x.ProxyUser
	}
	return ""
}

func (x *CreateRequest) GetJobParams() string {
	if x != nil {
		return x.JobParams
	}
	return ""
}

func (x *CreateRequest) GetDataSet() *DataSet {
	if x != nil {
		return x.DataSet
	}
	return nil
}

func (x *CreateRequest) GetMfModel() *MFModel {
	if x != nil {
		return x.MfModel
	}
	return nil
}

func (x *CreateRequest) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *CreateRequest) GetFitParams() string {
	if x != nil {
		return x.FitParams
	}
	return ""
}

func (x *CreateRequest) GetAPIType() string {
	if x != nil {
		return x.APIType
	}
	return ""
}

type MFModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ModelName   string `protobuf:"bytes,2,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	Version     string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	FactoryName string `protobuf:"bytes,4,opt,name=factory_name,json=factoryName,proto3" json:"factory_name,omitempty"`
}

func (x *MFModel) Reset() {
	*x = MFModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MFModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MFModel) ProtoMessage() {}

func (x *MFModel) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MFModel.ProtoReflect.Descriptor instead.
func (*MFModel) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{1}
}

func (x *MFModel) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *MFModel) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *MFModel) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MFModel) GetFactoryName() string {
	if x != nil {
		return x.FactoryName
	}
	return ""
}

// EMExtractionSpec represents the specification for extracting structured evaluation metrics from training jobs.
// It is used across all log collectors, so some fields may not be relevent for all log collectors.
// Note: Don't use enums with this, as need to do untyped YAML convert to string and back
// Refer to https://github.ibm.com/deep-learning-platform/dlaas-training-metrics-service for complete
// documentation.
type EMExtractionSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Loosly typed string representing what kind of log-collector to use.
	// For Logs-only, specify `type: logger`
	// For the Regex_extractor log-collector, specify `type: regex_extractor`
	// For Tensorboard, specify `type: tensorboard`
	// To invoke the emetrics_file_extractor, you can specify the following synonyms
	// `type: optivist` || `type: emetrics_file` || `type: file`.
	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ImageTag string `protobuf:"bytes,6,opt,name=image_tag,json=imageTag,proto3" json:"image_tag,omitempty"` // Dev only.
	// The filename of the logfile.  (Normally this should be left to default).
	In string `protobuf:"bytes,2,opt,name=in,proto3" json:"in,omitempty"`
	// For the regex_extractor, number of lines to keep in the buffer for regex matching.
	LineLookahead int32 `protobuf:"varint,3,opt,name=line_lookahead,json=lineLookahead,proto3" json:"line_lookahead,omitempty"`
	// (Eventual) Available event types: 'images', 'distributions', 'histograms', 'images'
	// 'audio', 'scalars', 'tensors', 'graph', 'meta_graph', 'run_metadata'.
	// For now only scalars are supported.
	EventTypes []string `protobuf:"bytes,4,rep,name=eventTypes,proto3" json:"eventTypes,omitempty"`
	// For the regex_extractor, the `EMExtractionSpec` should contain a `groups` section, which should contain
	// templates for groups such as `test` and `train`, which group names should be be the keys of this map.
	Groups map[string]*EMGroup `protobuf:"bytes,5,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EMExtractionSpec) Reset() {
	*x = EMExtractionSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EMExtractionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EMExtractionSpec) ProtoMessage() {}

func (x *EMExtractionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EMExtractionSpec.ProtoReflect.Descriptor instead.
func (*EMExtractionSpec) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{2}
}

func (x *EMExtractionSpec) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EMExtractionSpec) GetImageTag() string {
	if x != nil {
		return x.ImageTag
	}
	return ""
}

func (x *EMExtractionSpec) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *EMExtractionSpec) GetLineLookahead() int32 {
	if x != nil {
		return x.LineLookahead
	}
	return 0
}

func (x *EMExtractionSpec) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *EMExtractionSpec) GetGroups() map[string]*EMGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

// EMGroup represents a group, such as `test` or `train`, that acts as a template for structured evaluation metrics,
// and which allows the specification of a regular expression (regex) that contains named bindings with
// sub-expressions, which can then be used as references to specify structured time-related (x-axis) and value-related
// (y-axis) values.
type EMGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Python regular expressions, which use the named group feature `(?P<name>...)`, to specify
	// a name of a matching expression, which can then be used to specify the value that is used in the template
	// for the `EMetrics` record. To help with verbosity, the regex_extractor allows the following macros: GLOG_STAMP,
	// TIMESTAMP, FLOAT, INT, INT_ANY, and HEX.  (See dlaas-training-metrics-service README for more details.
	Regex string `protobuf:"bytes,1,opt,name=regex,proto3" json:"regex,omitempty"`
	// Allows the caller to specify a binding for the time field of the meta structure.
	Meta *EMMeta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// Map of keys and regex references for value-related (y-axis) values.
	Values map[string]*EMAny `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Map of keys and regex references for time-related (x-axis) values.
	Etimes map[string]*EMAny `protobuf:"bytes,4,rep,name=etimes,proto3" json:"etimes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EMGroup) Reset() {
	*x = EMGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EMGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EMGroup) ProtoMessage() {}

func (x *EMGroup) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EMGroup.ProtoReflect.Descriptor instead.
func (*EMGroup) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{3}
}

func (x *EMGroup) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

func (x *EMGroup) GetMeta() *EMMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *EMGroup) GetValues() map[string]*EMAny {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *EMGroup) GetEtimes() map[string]*EMAny {
	if x != nil {
		return x.Etimes
	}
	return nil
}

// Allows the user to bind an extracted value to the time field of the evaluation metrics.
type EMMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time that the metric occured: representing the number of millisecond since midnight January 1, 1970.
	// (ref, for instance $timestamp).  Value will be extracted from timestamps
	Time string `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	// Optional subid
	Subid string `protobuf:"bytes,5,opt,name=subid,proto3" json:"subid,omitempty"`
}

func (x *EMMeta) Reset() {
	*x = EMMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EMMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EMMeta) ProtoMessage() {}

func (x *EMMeta) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EMMeta.ProtoReflect.Descriptor instead.
func (*EMMeta) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{4}
}

func (x *EMMeta) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *EMMeta) GetSubid() string {
	if x != nil {
		return x.Subid
	}
	return ""
}

// Typed value for EMExtractionSpec.  The data type here can't be an enum, due to internal issues with YAML
// conversion.
type EMAny struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// one of: STRING, JSONSTRING, INT, FLOAT
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// String represenation of the value.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EMAny) Reset() {
	*x = EMAny{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EMAny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EMAny) ProtoMessage() {}

func (x *EMAny) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EMAny.ProtoReflect.Descriptor instead.
func (*EMAny) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{5}
}

func (x *EMAny) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EMAny) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// MetaInfo represents data shared with both log lines and evaluation metrics.
type MetaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id identifying the training job
	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	// Unique id identifying the user
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Time that the metric occured: representing the number of millisecond since midnight January 1, 1970.
	Time int64 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	// Sequential index, 1-based
	Rindex int64 `protobuf:"varint,4,opt,name=rindex,proto3" json:"rindex,omitempty"`
	// Optional subid
	Subid string `protobuf:"bytes,5,opt,name=subid,proto3" json:"subid,omitempty"`
}

func (x *MetaInfo) Reset() {
	*x = MetaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaInfo) ProtoMessage() {}

func (x *MetaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaInfo.ProtoReflect.Descriptor instead.
func (*MetaInfo) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{6}
}

func (x *MetaInfo) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *MetaInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MetaInfo) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *MetaInfo) GetRindex() int64 {
	if x != nil {
		return x.Rindex
	}
	return 0
}

func (x *MetaInfo) GetSubid() string {
	if x != nil {
		return x.Subid
	}
	return ""
}

// LogLine represents one line of log information, returned by training data endpoints.
type LogLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// For MetaInfo, at the minimum training_id and user_id must be specified.
	Meta *MetaInfo `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Raw line from the logs.
	Line string `protobuf:"bytes,2,opt,name=line,proto3" json:"line,omitempty"`
}

func (x *LogLine) Reset() {
	*x = LogLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLine) ProtoMessage() {}

func (x *LogLine) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLine.ProtoReflect.Descriptor instead.
func (*LogLine) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{7}
}

func (x *LogLine) GetMeta() *MetaInfo {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *LogLine) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

type LogLineBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Force   bool       `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	LogLine []*LogLine `protobuf:"bytes,2,rep,name=logLine,proto3" json:"logLine,omitempty"`
}

func (x *LogLineBatch) Reset() {
	*x = LogLineBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLineBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLineBatch) ProtoMessage() {}

func (x *LogLineBatch) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLineBatch.ProtoReflect.Descriptor instead.
func (*LogLineBatch) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{8}
}

func (x *LogLineBatch) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *LogLineBatch) GetLogLine() []*LogLine {
	if x != nil {
		return x.LogLine
	}
	return nil
}

// Any represents a typed value used with the evaluation metrics record.
type Any struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Datatype of the value.
	Type Any_DataType `protobuf:"varint,1,opt,name=type,proto3,enum=grpc_trainer_v2.Any_DataType" json:"type,omitempty"`
	// String representation of a value
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Any) Reset() {
	*x = Any{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Any) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Any) ProtoMessage() {}

func (x *Any) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Any.ProtoReflect.Descriptor instead.
func (*Any) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{9}
}

func (x *Any) GetType() Any_DataType {
	if x != nil {
		return x.Type
	}
	return Any_STRING
}

func (x *Any) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// EMetrics specifies an evaluation metrics record from the training data.
type EMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// For MetaInfo, at the minimum training_id and user_id must be specified.
	Meta *MetaInfo `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Map of temporal keys, normally values for the x-axis on a graph.
	// Example: {"iteration": 209}
	Etimes map[string]*Any `protobuf:"bytes,2,rep,name=etimes,proto3" json:"etimes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Group label, such as test, train, or validate
	Grouplabel string `protobuf:"bytes,3,opt,name=grouplabel,proto3" json:"grouplabel,omitempty"`
	// Map of value keys, normally values for the y-axis on a graph.
	/// Example: {"cross_entropy": 0.4430539906024933,	"accuracy": 0.8999999761581421}
	Values map[string]*Any `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EMetrics) Reset() {
	*x = EMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EMetrics) ProtoMessage() {}

func (x *EMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EMetrics.ProtoReflect.Descriptor instead.
func (*EMetrics) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{10}
}

func (x *EMetrics) GetMeta() *MetaInfo {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *EMetrics) GetEtimes() map[string]*Any {
	if x != nil {
		return x.Etimes
	}
	return nil
}

func (x *EMetrics) GetGrouplabel() string {
	if x != nil {
		return x.Grouplabel
	}
	return ""
}

func (x *EMetrics) GetValues() map[string]*Any {
	if x != nil {
		return x.Values
	}
	return nil
}

type EMetricsBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Force    bool        `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	Emetrics []*EMetrics `protobuf:"bytes,2,rep,name=emetrics,proto3" json:"emetrics,omitempty"`
}

func (x *EMetricsBatch) Reset() {
	*x = EMetricsBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EMetricsBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EMetricsBatch) ProtoMessage() {}

func (x *EMetricsBatch) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EMetricsBatch.ProtoReflect.Descriptor instead.
func (*EMetricsBatch) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{11}
}

func (x *EMetricsBatch) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *EMetricsBatch) GetEmetrics() []*EMetrics {
	if x != nil {
		return x.Emetrics
	}
	return nil
}

// Query specifies the input query for logs and evaluation metrics.
type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// At this time, the SearchType value should normally always be TERM.
	SearchType Query_SearchType `protobuf:"varint,1,opt,name=searchType,proto3,enum=grpc_trainer_v2.Query_SearchType" json:"searchType,omitempty"`
	// At the minimum, the training_data and user_data must be specified in the meta substructure.
	Meta  *MetaInfo `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	Since string    `protobuf:"bytes,4,opt,name=since,proto3" json:"since,omitempty"` // representing the number of milliseconds since midnight January 1, 1970, exclusive with pos.
	// Only get this many records
	Pagesize int32 `protobuf:"varint,5,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	// The starting position.  If positive or zero, count from beginning, if negative, count from end, exclusive with since.
	Pos int64 `protobuf:"varint,6,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{12}
}

func (x *Query) GetSearchType() Query_SearchType {
	if x != nil {
		return x.SearchType
	}
	return Query_TERM
}

func (x *Query) GetMeta() *MetaInfo {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Query) GetSince() string {
	if x != nil {
		return x.Since
	}
	return ""
}

func (x *Query) GetPagesize() int32 {
	if x != nil {
		return x.Pagesize
	}
	return 0
}

func (x *Query) GetPos() int64 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type DeleteQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The following two options are exclusive
	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteQuery) Reset() {
	*x = DeleteQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuery) ProtoMessage() {}

func (x *DeleteQuery) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuery.ProtoReflect.Descriptor instead.
func (*DeleteQuery) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteQuery) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *DeleteQuery) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{14}
}

func (x *CreateResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId    string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status        Status `protobuf:"varint,3,opt,name=status,proto3,enum=grpc_trainer_v2.Status" json:"status,omitempty"`
	StatusMessage string `protobuf:"bytes,4,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	ErrorCode     string `protobuf:"bytes,5,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Timestamp     string `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *UpdateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_NOT_STARTED
}

func (x *UpdateRequest) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *UpdateRequest) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *UpdateRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{17}
}

func (x *GetRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *GetRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{18}
}

func (x *GetResponse) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type GetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *TrainingStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{19}
}

func (x *GetStatusResponse) GetStatus() *TrainingStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetStatusIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=grpc_trainer_v2.Status" json:"status,omitempty"`
}

func (x *GetStatusIDResponse) Reset() {
	*x = GetStatusIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusIDResponse) ProtoMessage() {}

func (x *GetStatusIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusIDResponse.ProtoReflect.Descriptor instead.
func (*GetStatusIDResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{20}
}

func (x *GetStatusIDResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_NOT_STARTED
}

type GetMetricsStringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics string `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *GetMetricsStringResponse) Reset() {
	*x = GetMetricsStringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricsStringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsStringResponse) ProtoMessage() {}

func (x *GetMetricsStringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsStringResponse.ProtoReflect.Descriptor instead.
func (*GetMetricsStringResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{21}
}

func (x *GetMetricsStringResponse) GetMetrics() string {
	if x != nil {
		return x.Metrics
	}
	return ""
}

type GetTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Test string `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
}

func (x *GetTestResponse) Reset() {
	*x = GetTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestResponse) ProtoMessage() {}

func (x *GetTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestResponse.ProtoReflect.Descriptor instead.
func (*GetTestResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{22}
}

func (x *GetTestResponse) GetTest() string {
	if x != nil {
		return x.Test
	}
	return ""
}

// FIXME MLSS Change: update request for getting models
type GetAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Namespace     string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Page          string   `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
	Size          string   `protobuf:"bytes,5,opt,name=size,proto3" json:"size,omitempty"`
	NamespaceList []string `protobuf:"bytes,6,rep,name=namespace_list,json=namespaceList,proto3" json:"namespace_list,omitempty"`
	ClusterName   string   `protobuf:"bytes,7,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
}

func (x *GetAllRequest) Reset() {
	*x = GetAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRequest) ProtoMessage() {}

func (x *GetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRequest.ProtoReflect.Descriptor instead.
func (*GetAllRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{23}
}

func (x *GetAllRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetAllRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetAllRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetAllRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *GetAllRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *GetAllRequest) GetNamespaceList() []string {
	if x != nil {
		return x.NamespaceList
	}
	return nil
}

func (x *GetAllRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type GetAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs  []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	Pages string `protobuf:"bytes,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Total string `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetAllResponse) Reset() {
	*x = GetAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllResponse) ProtoMessage() {}

func (x *GetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllResponse.ProtoReflect.Descriptor instead.
func (*GetAllResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{24}
}

func (x *GetAllResponse) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *GetAllResponse) GetPages() string {
	if x != nil {
		return x.Pages
	}
	return ""
}

func (x *GetAllResponse) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

type ResumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ResumeRequest) Reset() {
	*x = ResumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeRequest) ProtoMessage() {}

func (x *ResumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeRequest.ProtoReflect.Descriptor instead.
func (*ResumeRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{25}
}

func (x *ResumeRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *ResumeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ResumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status     Status `protobuf:"varint,3,opt,name=status,proto3,enum=grpc_trainer_v2.Status" json:"status,omitempty"`
}

func (x *ResumeResponse) Reset() {
	*x = ResumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeResponse) ProtoMessage() {}

func (x *ResumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeResponse.ProtoReflect.Descriptor instead.
func (*ResumeResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{26}
}

func (x *ResumeResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *ResumeResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ResumeResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_NOT_STARTED
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *DeleteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Metrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp string            `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type      string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Iteration int32             `protobuf:"varint,3,opt,name=iteration,proto3" json:"iteration,omitempty"`
	Values    map[string]string `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{28}
}

func (x *Metrics) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Metrics) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Metrics) GetIteration() int32 {
	if x != nil {
		return x.Iteration
	}
	return 0
}

func (x *Metrics) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId      string           `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId          string           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ModelDefinition *ModelDefinition `protobuf:"bytes,3,opt,name=model_definition,json=modelDefinition,proto3" json:"model_definition,omitempty"`
	Training        *Training        `protobuf:"bytes,4,opt,name=training,proto3" json:"training,omitempty"`
	Status          *TrainingStatus  `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Datastores      []*Datastore     `protobuf:"bytes,6,rep,name=datastores,proto3" json:"datastores,omitempty"`
	JobId           string           `protobuf:"bytes,7,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Metrics         *Metrics         `protobuf:"bytes,8,opt,name=metrics,proto3" json:"metrics,omitempty"`
	// FIXME MLSS Change: more info for job obj
	JobNamespace string   `protobuf:"bytes,9,opt,name=job_namespace,json=jobNamespace,proto3" json:"job_namespace,omitempty"`
	JobAlert     string   `protobuf:"bytes,10,opt,name=job_alert,json=jobAlert,proto3" json:"job_alert,omitempty"`
	Pss          string   `protobuf:"bytes,11,opt,name=pss,proto3" json:"pss,omitempty"`
	PsCpu        string   `protobuf:"bytes,12,opt,name=ps_cpu,json=psCpu,proto3" json:"ps_cpu,omitempty"`
	PsImage      string   `protobuf:"bytes,13,opt,name=ps_image,json=psImage,proto3" json:"ps_image,omitempty"`
	PsMemory     string   `protobuf:"bytes,14,opt,name=ps_memory,json=psMemory,proto3" json:"ps_memory,omitempty"`
	JobType      string   `protobuf:"bytes,15,opt,name=job_type,json=jobType,proto3" json:"job_type,omitempty"`
	TfosRequest  string   `protobuf:"bytes,16,opt,name=tfos_request,json=tfosRequest,proto3" json:"tfos_request,omitempty"`
	ExpRunId     string   `protobuf:"bytes,17,opt,name=exp_run_id,json=expRunId,proto3" json:"exp_run_id,omitempty"`
	ExpName      string   `protobuf:"bytes,18,opt,name=exp_name,json=expName,proto3" json:"exp_name,omitempty"`
	FileName     string   `protobuf:"bytes,19,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FilePath     string   `protobuf:"bytes,20,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	ProxyUser    string   `protobuf:"bytes,21,opt,name=proxy_user,json=proxyUser,proto3" json:"proxy_user,omitempty"`
	JobParams    string   `protobuf:"bytes,22,opt,name=job_params,json=jobParams,proto3" json:"job_params,omitempty"`
	DataSet      *DataSet `protobuf:"bytes,23,opt,name=data_set,json=dataSet,proto3" json:"data_set,omitempty"`
	MfModel      *MFModel `protobuf:"bytes,24,opt,name=mf_model,json=mfModel,proto3" json:"mf_model,omitempty"`
	Algorithm    string   `protobuf:"bytes,25,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	FitParams    string   `protobuf:"bytes,26,opt,name=fit_params,json=fitParams,proto3" json:"fit_params,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{29}
}

func (x *Job) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *Job) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Job) GetModelDefinition() *ModelDefinition {
	if x != nil {
		return x.ModelDefinition
	}
	return nil
}

func (x *Job) GetTraining() *Training {
	if x != nil {
		return x.Training
	}
	return nil
}

func (x *Job) GetStatus() *TrainingStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Job) GetDatastores() []*Datastore {
	if x != nil {
		return x.Datastores
	}
	return nil
}

func (x *Job) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *Job) GetMetrics() *Metrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *Job) GetJobNamespace() string {
	if x != nil {
		return x.JobNamespace
	}
	return ""
}

func (x *Job) GetJobAlert() string {
	if x != nil {
		return x.JobAlert
	}
	return ""
}

func (x *Job) GetPss() string {
	if x != nil {
		return x.Pss
	}
	return ""
}

func (x *Job) GetPsCpu() string {
	if x != nil {
		return x.PsCpu
	}
	return ""
}

func (x *Job) GetPsImage() string {
	if x != nil {
		return x.PsImage
	}
	return ""
}

func (x *Job) GetPsMemory() string {
	if x != nil {
		return x.PsMemory
	}
	return ""
}

func (x *Job) GetJobType() string {
	if x != nil {
		return x.JobType
	}
	return ""
}

func (x *Job) GetTfosRequest() string {
	if x != nil {
		return x.TfosRequest
	}
	return ""
}

func (x *Job) GetExpRunId() string {
	if x != nil {
		return x.ExpRunId
	}
	return ""
}

func (x *Job) GetExpName() string {
	if x != nil {
		return x.ExpName
	}
	return ""
}

func (x *Job) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Job) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *Job) GetProxyUser() string {
	if x != nil {
		return x.ProxyUser
	}
	return ""
}

func (x *Job) GetJobParams() string {
	if x != nil {
		return x.JobParams
	}
	return ""
}

func (x *Job) GetDataSet() *DataSet {
	if x != nil {
		return x.DataSet
	}
	return nil
}

func (x *Job) GetMfModel() *MFModel {
	if x != nil {
		return x.MfModel
	}
	return nil
}

func (x *Job) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *Job) GetFitParams() string {
	if x != nil {
		return x.FitParams
	}
	return ""
}

type DataSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingDataPath    string `protobuf:"bytes,1,opt,name=training_data_path,json=trainingDataPath,proto3" json:"training_data_path,omitempty"`
	TrainingLabelPath   string `protobuf:"bytes,2,opt,name=training_label_path,json=trainingLabelPath,proto3" json:"training_label_path,omitempty"`
	TestingDataPath     string `protobuf:"bytes,3,opt,name=testing_data_path,json=testingDataPath,proto3" json:"testing_data_path,omitempty"`
	TestingLabelPath    string `protobuf:"bytes,4,opt,name=testing_label_path,json=testingLabelPath,proto3" json:"testing_label_path,omitempty"`
	ValidationDataPath  string `protobuf:"bytes,5,opt,name=validation_data_path,json=validationDataPath,proto3" json:"validation_data_path,omitempty"`
	ValidationLabelPath string `protobuf:"bytes,6,opt,name=validation_label_path,json=validationLabelPath,proto3" json:"validation_label_path,omitempty"`
}

func (x *DataSet) Reset() {
	*x = DataSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSet) ProtoMessage() {}

func (x *DataSet) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSet.ProtoReflect.Descriptor instead.
func (*DataSet) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{30}
}

func (x *DataSet) GetTrainingDataPath() string {
	if x != nil {
		return x.TrainingDataPath
	}
	return ""
}

func (x *DataSet) GetTrainingLabelPath() string {
	if x != nil {
		return x.TrainingLabelPath
	}
	return ""
}

func (x *DataSet) GetTestingDataPath() string {
	if x != nil {
		return x.TestingDataPath
	}
	return ""
}

func (x *DataSet) GetTestingLabelPath() string {
	if x != nil {
		return x.TestingLabelPath
	}
	return ""
}

func (x *DataSet) GetValidationDataPath() string {
	if x != nil {
		return x.ValidationDataPath
	}
	return ""
}

func (x *DataSet) GetValidationLabelPath() string {
	if x != nil {
		return x.ValidationLabelPath
	}
	return ""
}

type ModelDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Content     []byte     `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`   // Optional: application/zip as bytes containing the model definition. If not present field location needs to be set.
	Location    string     `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"` // Optional: data store location where the model definition (code) is located
	Framework   *Framework `protobuf:"bytes,5,opt,name=framework,proto3" json:"framework,omitempty"`
}

func (x *ModelDefinition) Reset() {
	*x = ModelDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelDefinition) ProtoMessage() {}

func (x *ModelDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelDefinition.ProtoReflect.Descriptor instead.
func (*ModelDefinition) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{31}
}

func (x *ModelDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ModelDefinition) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ModelDefinition) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ModelDefinition) GetFramework() *Framework {
	if x != nil {
		return x.Framework
	}
	return nil
}

type Framework struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string         `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	ImageTag      string         `protobuf:"bytes,3,opt,name=image_tag,json=imageTag,proto3" json:"image_tag,omitempty"`                // Optional: tag used for learner testing
	ImageLocation *ImageLocation `protobuf:"bytes,4,opt,name=image_location,json=imageLocation,proto3" json:"image_location,omitempty"` // Optional: non-standard location for learner image
}

func (x *Framework) Reset() {
	*x = Framework{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Framework) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Framework) ProtoMessage() {}

func (x *Framework) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Framework.ProtoReflect.Descriptor instead.
func (*Framework) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{32}
}

func (x *Framework) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Framework) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Framework) GetImageTag() string {
	if x != nil {
		return x.ImageTag
	}
	return ""
}

func (x *Framework) GetImageLocation() *ImageLocation {
	if x != nil {
		return x.ImageLocation
	}
	return nil
}

type ImageLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registry    string `protobuf:"bytes,1,opt,name=registry,proto3" json:"registry,omitempty"`                          // the server name for the docker registry
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`                        // namespace within the registry
	AccessToken string `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // Token used to access images stored in the registry+namespace
	Email       string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`                                // Email address associated with the account
}

func (x *ImageLocation) Reset() {
	*x = ImageLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageLocation) ProtoMessage() {}

func (x *ImageLocation) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageLocation.ProtoReflect.Descriptor instead.
func (*ImageLocation) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{33}
}

func (x *ImageLocation) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

func (x *ImageLocation) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImageLocation) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ImageLocation) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Training struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Command to execute during training
	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	// Resource requirements for the training
	Resources *ResourceRequirements `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	// Input and output data as data store references
	InputData  []string `protobuf:"bytes,3,rep,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	OutputData []string `protobuf:"bytes,4,rep,name=output_data,json=outputData,proto3" json:"output_data,omitempty"`
	// whether we want to enable detailed profiling during the training
	Profiling bool     `protobuf:"varint,5,opt,name=profiling,proto3" json:"profiling,omitempty"`
	WorkData  []string `protobuf:"bytes,6,rep,name=work_data,json=workData,proto3" json:"work_data,omitempty"`
}

func (x *Training) Reset() {
	*x = Training{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Training) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Training) ProtoMessage() {}

func (x *Training) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Training.ProtoReflect.Descriptor instead.
func (*Training) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{34}
}

func (x *Training) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Training) GetResources() *ResourceRequirements {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Training) GetInputData() []string {
	if x != nil {
		return x.InputData
	}
	return nil
}

func (x *Training) GetOutputData() []string {
	if x != nil {
		return x.OutputData
	}
	return nil
}

func (x *Training) GetProfiling() bool {
	if x != nil {
		return x.Profiling
	}
	return false
}

func (x *Training) GetWorkData() []string {
	if x != nil {
		return x.WorkData
	}
	return nil
}

type TrainingStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                 Status `protobuf:"varint,1,opt,name=status,proto3,enum=grpc_trainer_v2.Status" json:"status,omitempty"`
	SubmissionTimestamp    string `protobuf:"bytes,2,opt,name=submission_timestamp,json=submissionTimestamp,proto3" json:"submission_timestamp,omitempty"`
	CompletionTimestamp    string `protobuf:"bytes,3,opt,name=completion_timestamp,json=completionTimestamp,proto3" json:"completion_timestamp,omitempty"`
	DownloadStartTimestamp string `protobuf:"bytes,4,opt,name=download_start_timestamp,json=downloadStartTimestamp,proto3" json:"download_start_timestamp,omitempty"`
	ProcessStartTimestamp  string `protobuf:"bytes,5,opt,name=process_start_timestamp,json=processStartTimestamp,proto3" json:"process_start_timestamp,omitempty"`
	StoreStartTimestamp    string `protobuf:"bytes,6,opt,name=store_start_timestamp,json=storeStartTimestamp,proto3" json:"store_start_timestamp,omitempty"`
	StatusMessage          string `protobuf:"bytes,7,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	ErrorCode              string `protobuf:"bytes,8,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *TrainingStatus) Reset() {
	*x = TrainingStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingStatus) ProtoMessage() {}

func (x *TrainingStatus) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingStatus.ProtoReflect.Descriptor instead.
func (*TrainingStatus) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{35}
}

func (x *TrainingStatus) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_NOT_STARTED
}

func (x *TrainingStatus) GetSubmissionTimestamp() string {
	if x != nil {
		return x.SubmissionTimestamp
	}
	return ""
}

func (x *TrainingStatus) GetCompletionTimestamp() string {
	if x != nil {
		return x.CompletionTimestamp
	}
	return ""
}

func (x *TrainingStatus) GetDownloadStartTimestamp() string {
	if x != nil {
		return x.DownloadStartTimestamp
	}
	return ""
}

func (x *TrainingStatus) GetProcessStartTimestamp() string {
	if x != nil {
		return x.ProcessStartTimestamp
	}
	return ""
}

func (x *TrainingStatus) GetStoreStartTimestamp() string {
	if x != nil {
		return x.StoreStartTimestamp
	}
	return ""
}

func (x *TrainingStatus) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *TrainingStatus) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

type Datastore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// additional fields for the given Datastore type
	Fields map[string]string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// connection information for the given Datastore type
	Connection map[string]string `protobuf:"bytes,4,rep,name=connection,proto3" json:"connection,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Datastore) Reset() {
	*x = Datastore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Datastore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Datastore) ProtoMessage() {}

func (x *Datastore) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Datastore.ProtoReflect.Descriptor instead.
func (*Datastore) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{36}
}

func (x *Datastore) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Datastore) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Datastore) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Datastore) GetConnection() map[string]string {
	if x != nil {
		return x.Connection
	}
	return nil
}

//Used to specify resource requirements of a training job
type ResourceRequirements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Number of CPU cores
	Cpus float64 `protobuf:"fixed64,1,opt,name=cpus,proto3" json:"cpus,omitempty"`
	//Number of GPUs
	Gpus float64 `protobuf:"fixed64,2,opt,name=gpus,proto3" json:"gpus,omitempty"`
	//RAM
	Memory      float32  `protobuf:"fixed32,3,opt,name=memory,proto3" json:"memory,omitempty"`
	MemoryUnit  SizeUnit `protobuf:"varint,4,opt,name=memory_unit,json=memoryUnit,proto3,enum=grpc_trainer_v2.SizeUnit" json:"memory_unit,omitempty"`
	Storage     float32  `protobuf:"fixed32,5,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageUnit SizeUnit `protobuf:"varint,6,opt,name=storage_unit,json=storageUnit,proto3,enum=grpc_trainer_v2.SizeUnit" json:"storage_unit,omitempty"`
	//Number of learners
	Learners     int32  `protobuf:"varint,7,opt,name=learners,proto3" json:"learners,omitempty"`
	Schedpolicy  string `protobuf:"bytes,8,opt,name=schedpolicy,proto3" json:"schedpolicy,omitempty"`
	Topology     string `protobuf:"bytes,9,opt,name=topology,proto3" json:"topology,omitempty"`
	Architecture string `protobuf:"bytes,10,opt,name=architecture,proto3" json:"architecture,omitempty"`
	//Optional. If not specified, job will be scheduled ONLY on nvidia-TeslaK80
	//Constraint strictly enforced. If e.g., a nvidia-TeslaP100 is requested,
	//job will NOT start until a nvidia-TeslaP100 is available
	//Can only be nvidia-TeslaK80, nvidia-TeslaP100 or nvidia-TeslaV100
	GpuType string `protobuf:"bytes,11,opt,name=gpu_type,json=gpuType,proto3" json:"gpu_type,omitempty"`
}

func (x *ResourceRequirements) Reset() {
	*x = ResourceRequirements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRequirements) ProtoMessage() {}

func (x *ResourceRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRequirements.ProtoReflect.Descriptor instead.
func (*ResourceRequirements) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{37}
}

func (x *ResourceRequirements) GetCpus() float64 {
	if x != nil {
		return x.Cpus
	}
	return 0
}

func (x *ResourceRequirements) GetGpus() float64 {
	if x != nil {
		return x.Gpus
	}
	return 0
}

func (x *ResourceRequirements) GetMemory() float32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ResourceRequirements) GetMemoryUnit() SizeUnit {
	if x != nil {
		return x.MemoryUnit
	}
	return SizeUnit_MB
}

func (x *ResourceRequirements) GetStorage() float32 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *ResourceRequirements) GetStorageUnit() SizeUnit {
	if x != nil {
		return x.StorageUnit
	}
	return SizeUnit_MB
}

func (x *ResourceRequirements) GetLearners() int32 {
	if x != nil {
		return x.Learners
	}
	return 0
}

func (x *ResourceRequirements) GetSchedpolicy() string {
	if x != nil {
		return x.Schedpolicy
	}
	return ""
}

func (x *ResourceRequirements) GetTopology() string {
	if x != nil {
		return x.Topology
	}
	return ""
}

func (x *ResourceRequirements) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *ResourceRequirements) GetGpuType() string {
	if x != nil {
		return x.GpuType
	}
	return ""
}

type ModelDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ModelDefinitionRequest) Reset() {
	*x = ModelDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelDefinitionRequest) ProtoMessage() {}

func (x *ModelDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelDefinitionRequest.ProtoReflect.Descriptor instead.
func (*ModelDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{38}
}

func (x *ModelDefinitionRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *ModelDefinitionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type TrainedModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *TrainedModelRequest) Reset() {
	*x = TrainedModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainedModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainedModelRequest) ProtoMessage() {}

func (x *TrainedModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainedModelRequest.ProtoReflect.Descriptor instead.
func (*TrainedModelRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{39}
}

func (x *TrainedModelRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *TrainedModelRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type TrainedModelLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Follow     bool   `protobuf:"varint,5,opt,name=follow,proto3" json:"follow,omitempty"`
	// These are for internal use only, and will be eventually removed!
	IsMetrics bool `protobuf:"varint,3,opt,name=is_metrics,json=isMetrics,proto3" json:"is_metrics,omitempty"`
	IsSummary bool `protobuf:"varint,4,opt,name=is_summary,json=isSummary,proto3" json:"is_summary,omitempty"`
}

func (x *TrainedModelLogRequest) Reset() {
	*x = TrainedModelLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainedModelLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainedModelLogRequest) ProtoMessage() {}

func (x *TrainedModelLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainedModelLogRequest.ProtoReflect.Descriptor instead.
func (*TrainedModelLogRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{40}
}

func (x *TrainedModelLogRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *TrainedModelLogRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TrainedModelLogRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *TrainedModelLogRequest) GetIsMetrics() bool {
	if x != nil {
		return x.IsMetrics
	}
	return false
}

func (x *TrainedModelLogRequest) GetIsSummary() bool {
	if x != nil {
		return x.IsSummary
	}
	return false
}

type TrainedModelMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Follow     bool   `protobuf:"varint,3,opt,name=follow,proto3" json:"follow,omitempty"`
}

func (x *TrainedModelMetricsRequest) Reset() {
	*x = TrainedModelMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainedModelMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainedModelMetricsRequest) ProtoMessage() {}

func (x *TrainedModelMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainedModelMetricsRequest.ProtoReflect.Descriptor instead.
func (*TrainedModelMetricsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{41}
}

func (x *TrainedModelMetricsRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *TrainedModelMetricsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TrainedModelMetricsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

type GetLatestMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetLatestMetricsRequest) Reset() {
	*x = GetLatestMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestMetricsRequest) ProtoMessage() {}

func (x *GetLatestMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetLatestMetricsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{42}
}

func (x *GetLatestMetricsRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *GetLatestMetricsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetLatestMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string   `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Metrics    *Metrics `protobuf:"bytes,3,opt,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *GetLatestMetricsResponse) Reset() {
	*x = GetLatestMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestMetricsResponse) ProtoMessage() {}

func (x *GetLatestMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetLatestMetricsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{43}
}

func (x *GetLatestMetricsResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *GetLatestMetricsResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetLatestMetricsResponse) GetMetrics() *Metrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type UpdateTrainedModelMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string   `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
	UserId     string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NewMetrics *Metrics `protobuf:"bytes,3,opt,name=new_metrics,json=newMetrics,proto3" json:"new_metrics,omitempty"`
}

func (x *UpdateTrainedModelMetricsRequest) Reset() {
	*x = UpdateTrainedModelMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrainedModelMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrainedModelMetricsRequest) ProtoMessage() {}

func (x *UpdateTrainedModelMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrainedModelMetricsRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrainedModelMetricsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateTrainedModelMetricsRequest) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

func (x *UpdateTrainedModelMetricsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateTrainedModelMetricsRequest) GetNewMetrics() *Metrics {
	if x != nil {
		return x.NewMetrics
	}
	return nil
}

type UpdateTrainedModelMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
}

func (x *UpdateTrainedModelMetricsResponse) Reset() {
	*x = UpdateTrainedModelMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrainedModelMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrainedModelMetricsResponse) ProtoMessage() {}

func (x *UpdateTrainedModelMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrainedModelMetricsResponse.ProtoReflect.Descriptor instead.
func (*UpdateTrainedModelMetricsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateTrainedModelMetricsResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type ByteStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ByteStreamResponse) Reset() {
	*x = ByteStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByteStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteStreamResponse) ProtoMessage() {}

func (x *ByteStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteStreamResponse.ProtoReflect.Descriptor instead.
func (*ByteStreamResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{46}
}

func (x *ByteStreamResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ZippedDataChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ZippedDataChunk) Reset() {
	*x = ZippedDataChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZippedDataChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZippedDataChunk) ProtoMessage() {}

func (x *ZippedDataChunk) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZippedDataChunk.ProtoReflect.Descriptor instead.
func (*ZippedDataChunk) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{47}
}

func (x *ZippedDataChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionsRequest) Reset() {
	*x = GetVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionsRequest) ProtoMessage() {}

func (x *GetVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionsRequest.ProtoReflect.Descriptor instead.
func (*GetVersionsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{48}
}

// Contains a list of all frameworks currently supported along with the versions of that framework and whether a
// specific framework version can be used by anyone or only for internal usage.
type Frameworks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frameworks map[string]*FrameworkDetailList `protobuf:"bytes,1,rep,name=frameworks,proto3" json:"frameworks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Frameworks) Reset() {
	*x = Frameworks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frameworks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frameworks) ProtoMessage() {}

func (x *Frameworks) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frameworks.ProtoReflect.Descriptor instead.
func (*Frameworks) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{49}
}

func (x *Frameworks) GetFrameworks() map[string]*FrameworkDetailList {
	if x != nil {
		return x.Frameworks
	}
	return nil
}

type FrameworkDetailList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []*FrameworkDetails `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *FrameworkDetailList) Reset() {
	*x = FrameworkDetailList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameworkDetailList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameworkDetailList) ProtoMessage() {}

func (x *FrameworkDetailList) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameworkDetailList.ProtoReflect.Descriptor instead.
func (*FrameworkDetailList) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{50}
}

func (x *FrameworkDetailList) GetVersions() []*FrameworkDetails {
	if x != nil {
		return x.Versions
	}
	return nil
}

type FrameworkDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// If true, the image can be used by any user. If false, the image is only available for internal usage.
	External bool `protobuf:"varint,2,opt,name=external,proto3" json:"external,omitempty"`
}

func (x *FrameworkDetails) Reset() {
	*x = FrameworkDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrameworkDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameworkDetails) ProtoMessage() {}

func (x *FrameworkDetails) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameworkDetails.ProtoReflect.Descriptor instead.
func (*FrameworkDetails) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{51}
}

func (x *FrameworkDetails) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *FrameworkDetails) GetExternal() bool {
	if x != nil {
		return x.External
	}
	return false
}

// ***
type AddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AddResponse) Reset() {
	*x = AddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResponse) ProtoMessage() {}

func (x *AddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResponse.ProtoReflect.Descriptor instead.
func (*AddResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{52}
}

func (x *AddResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId,proto3" json:"training_id,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteResponse) GetTrainingId() string {
	if x != nil {
		return x.TrainingId
	}
	return ""
}

type HelloResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *HelloResponse) Reset() {
	*x = HelloResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloResponse) ProtoMessage() {}

func (x *HelloResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloResponse.ProtoReflect.Descriptor instead.
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{54}
}

func (x *HelloResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{55}
}

type UploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*UploadRequest_Info
	//	*UploadRequest_ChucksData
	Data isUploadRequest_Data `protobuf_oneof:"data"`
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{56}
}

func (m *UploadRequest) GetData() isUploadRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *UploadRequest) GetInfo() *FileInfo {
	if x, ok := x.GetData().(*UploadRequest_Info); ok {
		return x.Info
	}
	return nil
}

func (x *UploadRequest) GetChucksData() []byte {
	if x, ok := x.GetData().(*UploadRequest_ChucksData); ok {
		return x.ChucksData
	}
	return nil
}

type isUploadRequest_Data interface {
	isUploadRequest_Data()
}

type UploadRequest_Info struct {
	Info *FileInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type UploadRequest_ChucksData struct {
	ChucksData []byte `protobuf:"bytes,2,opt,name=chucks_data,json=chucksData,proto3,oneof"`
}

func (*UploadRequest_Info) isUploadRequest_Data() {}

func (*UploadRequest_ChucksData) isUploadRequest_Data() {}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket    string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	FileName  string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	HostPath  string `protobuf:"bytes,3,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	OnlyMinio bool   `protobuf:"varint,4,opt,name=only_minio,json=onlyMinio,proto3" json:"only_minio,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{57}
}

func (x *FileInfo) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *FileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileInfo) GetHostPath() string {
	if x != nil {
		return x.HostPath
	}
	return ""
}

func (x *FileInfo) GetOnlyMinio() bool {
	if x != nil {
		return x.OnlyMinio
	}
	return false
}

type UploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	S3Path   string `protobuf:"bytes,3,opt,name=s3_path,json=s3Path,proto3" json:"s3_path,omitempty"`
	HostPath string `protobuf:"bytes,4,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	FileName string `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{58}
}

func (x *UploadResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UploadResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UploadResponse) GetS3Path() string {
	if x != nil {
		return x.S3Path
	}
	return ""
}

func (x *UploadResponse) GetHostPath() string {
	if x != nil {
		return x.HostPath
	}
	return ""
}

func (x *UploadResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type DownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileInfo *FileInfo `protobuf:"bytes,1,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{59}
}

func (x *DownloadRequest) GetFileInfo() *FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type DownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChucksData []byte `protobuf:"bytes,1,opt,name=chucks_data,json=chucksData,proto3" json:"chucks_data,omitempty"`
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{60}
}

func (x *DownloadResponse) GetChucksData() []byte {
	if x != nil {
		return x.ChucksData
	}
	return nil
}

type BucketExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *BucketExistsRequest) Reset() {
	*x = BucketExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketExistsRequest) ProtoMessage() {}

func (x *BucketExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketExistsRequest.ProtoReflect.Descriptor instead.
func (*BucketExistsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{61}
}

func (x *BucketExistsRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type BucketExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	IsExists bool   `protobuf:"varint,3,opt,name=is_exists,json=isExists,proto3" json:"is_exists,omitempty"`
}

func (x *BucketExistsResponse) Reset() {
	*x = BucketExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketExistsResponse) ProtoMessage() {}

func (x *BucketExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketExistsResponse.ProtoReflect.Descriptor instead.
func (*BucketExistsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{62}
}

func (x *BucketExistsResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BucketExistsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BucketExistsResponse) GetIsExists() bool {
	if x != nil {
		return x.IsExists
	}
	return false
}

type CodeUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	HostPath string `protobuf:"bytes,2,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	Bucket   string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *CodeUploadRequest) Reset() {
	*x = CodeUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeUploadRequest) ProtoMessage() {}

func (x *CodeUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeUploadRequest.ProtoReflect.Descriptor instead.
func (*CodeUploadRequest) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{63}
}

func (x *CodeUploadRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CodeUploadRequest) GetHostPath() string {
	if x != nil {
		return x.HostPath
	}
	return ""
}

func (x *CodeUploadRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type CodeUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	S3Path string `protobuf:"bytes,3,opt,name=s3_path,json=s3Path,proto3" json:"s3_path,omitempty"`
}

func (x *CodeUploadResponse) Reset() {
	*x = CodeUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeUploadResponse) ProtoMessage() {}

func (x *CodeUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_trainer_v2_trainer_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeUploadResponse.ProtoReflect.Descriptor instead.
func (*CodeUploadResponse) Descriptor() ([]byte, []int) {
	return file_grpc_trainer_v2_trainer_proto_rawDescGZIP(), []int{64}
}

func (x *CodeUploadResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CodeUploadResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CodeUploadResponse) GetS3Path() string {
	if x != nil {
		return x.S3Path
	}
	return ""
}

var File_grpc_trainer_v2_trainer_proto protoreflect.FileDescriptor

var file_grpc_trainer_v2_trainer_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76,
	0x32, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32,
	0x22, 0x88, 0x08, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x10, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x3a, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x12, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x45, 0x4d, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x11, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19,
	0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x04, 0x70, 0x5f, 0x73,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x53, 0x73, 0x12, 0x16, 0x0a, 0x07,
	0x70, 0x5f, 0x73, 0x5f, 0x63, 0x70, 0x75, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x53, 0x43, 0x70, 0x75, 0x12, 0x1a, 0x0a, 0x09, 0x70, 0x5f, 0x73, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x53, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x0a, 0x70, 0x5f, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x53, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x22,
	0x0a, 0x0d, 0x74, 0x5f, 0x66, 0x6f, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x46, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x5f,
	0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78,
	0x70, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f,
	0x62, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6a, 0x6f, 0x62, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x74, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x33,
	0x0a, 0x08, 0x6d, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x76, 0x32, 0x2e, 0x4d, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x6d, 0x66, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x41, 0x50, 0x49, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x41, 0x50, 0x49, 0x54, 0x79, 0x70, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x07,
	0x4d, 0x46, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb6,
	0x02, 0x0a, 0x10, 0x45, 0x4d, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x6f, 0x6f,
	0x6b, 0x61, 0x68, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x69,
	0x6e, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x61, 0x68, 0x65, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x45, 0x4d,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x1a, 0x53, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x76, 0x32, 0x2e, 0x45, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xee, 0x02, 0x0a, 0x07, 0x45, 0x4d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x45, 0x4d, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x45, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x06, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x45, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x45,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x1a, 0x51, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x76, 0x32, 0x2e, 0x45, 0x4d, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x51, 0x0a, 0x0b, 0x45, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x45, 0x4d, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x32, 0x0a, 0x06, 0x45, 0x4d, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x05,
	0x45, 0x4d, 0x41, 0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x86, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x4c,
	0x69, 0x6e, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x58, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x6e,
	0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x07,
	0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x6e, 0x65,
	0x22, 0x8a, 0x01, 0x0a, 0x03, 0x41, 0x6e, 0x79, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x41, 0x6e, 0x79, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4a, 0x53, 0x4f,
	0x4e, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x54,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x03, 0x22, 0xf9, 0x02,
	0x0a, 0x08, 0x45, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x06, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x45, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x45, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x3d, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x45, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x4f, 0x0a, 0x0b, 0x45, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4f, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a, 0x0d, 0x45, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x76, 0x32, 0x2e, 0x45, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x08, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0xf5, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x36, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x52, 0x4d, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x45, 0x53, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d,
	0x41, 0x54, 0x43, 0x48, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x03, 0x22,
	0x47, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0xde, 0x01, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x31, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22,
	0x46, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x4c,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x46, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x73,
	0x74, 0x22, 0xd4, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6a, 0x6f,
	0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x04,
	0x6a, 0x6f, 0x62, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x49, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x0e, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x49, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76,
	0x32, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a,
	0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbc, 0x07, 0x0a, 0x03, 0x4a, 0x6f, 0x62,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x10, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x37,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32,
	0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70,
	0x73, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x73, 0x5f, 0x63, 0x70, 0x75, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x73, 0x43, 0x70, 0x75, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x73, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x73, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x66, 0x6f, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x78, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x78, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x33, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x52, 0x07, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x66, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x4d, 0x46, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x07, 0x6d, 0x66, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x74, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xa7, 0x02, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x0a,
	0x12, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x14, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a,
	0x15, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x74,
	0x68, 0x22, 0xb7, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x9d, 0x01, 0x0a, 0x09,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x54, 0x61, 0x67, 0x12, 0x45, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x0d,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0xe4, 0x01, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x43, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x22, 0x93, 0x03, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31,
	0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x38, 0x0a, 0x18, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x36, 0x0a, 0x17, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xb5, 0x02,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x3e, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76,
	0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x4a, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x39, 0x0a, 0x0b, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x83, 0x03, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x70, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x70,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x70, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x67, 0x70, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x3a,
	0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0a,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x53, 0x69, 0x7a,
	0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x70, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x70, 0x75, 0x54, 0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x16, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x4f, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xa8, 0x01, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x6e, 0x0a, 0x1a, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x53, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x88, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x20,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x6e, 0x65,
	0x77, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76,
	0x32, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x44, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x12, 0x42,
	0x79, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x25, 0x0a, 0x0f, 0x5a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x14, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x0a, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x1a, 0x63,
	0x0a, 0x0f, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x76, 0x32, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x54, 0x0a, 0x13, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x48, 0x0a, 0x10, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x22, 0x27, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x31, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22,
	0x21, 0x0a, 0x0d, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x6b, 0x0a, 0x0d, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a,
	0x0b, 0x63, 0x68, 0x75, 0x63, 0x6b, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x63, 0x6b, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7b, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x79,
	0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x33, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x33, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x49, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x33, 0x0a, 0x10,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x63, 0x6b, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x63, 0x6b, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x2d, 0x0a, 0x13, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x22, 0x59, 0x0a, 0x14, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x65, 0x0a, 0x11, 0x43,
	0x6f, 0x64, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x22, 0x53, 0x0a, 0x12, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x33, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x33, 0x50, 0x61, 0x74, 0x68, 0x2a, 0x2c, 0x0a, 0x08, 0x53, 0x69, 0x7a, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x42, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4d,
	0x69, 0x42, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x42, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03,
	0x47, 0x69, 0x42, 0x10, 0x03, 0x2a, 0x86, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52,
	0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x49, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x32, 0xf1,
	0x0a, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x12,
	0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76,
	0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76,
	0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x4a, 0x6f, 0x62, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x73, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x27, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x4a, 0x6f,
	0x62, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x2b, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x4a, 0x6f, 0x62, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62,
	0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x76, 0x32, 0x2e, 0x5a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x24, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x76, 0x32, 0x2e, 0x5a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x22, 0x00, 0x30, 0x01, 0x12, 0x67, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x27,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32,
	0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4c,
	0x6f, 0x67, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x18, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x4c, 0x6f,
	0x67, 0x4c, 0x69, 0x6e, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x51, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x49, 0x44, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x12, 0x1e, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x56, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76,
	0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76,
	0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_trainer_v2_trainer_proto_rawDescOnce sync.Once
	file_grpc_trainer_v2_trainer_proto_rawDescData = file_grpc_trainer_v2_trainer_proto_rawDesc
)

func file_grpc_trainer_v2_trainer_proto_rawDescGZIP() []byte {
	file_grpc_trainer_v2_trainer_proto_rawDescOnce.Do(func() {
		file_grpc_trainer_v2_trainer_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_trainer_v2_trainer_proto_rawDescData)
	})
	return file_grpc_trainer_v2_trainer_proto_rawDescData
}

var file_grpc_trainer_v2_trainer_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_grpc_trainer_v2_trainer_proto_msgTypes = make([]protoimpl.MessageInfo, 74)
var file_grpc_trainer_v2_trainer_proto_goTypes = []interface{}{
	(SizeUnit)(0),                             // 0: grpc_trainer_v2.SizeUnit
	(Status)(0),                               // 1: grpc_trainer_v2.Status
	(Any_DataType)(0),                         // 2: grpc_trainer_v2.Any.DataType
	(Query_SearchType)(0),                     // 3: grpc_trainer_v2.Query.SearchType
	(*CreateRequest)(nil),                     // 4: grpc_trainer_v2.CreateRequest
	(*MFModel)(nil),                           // 5: grpc_trainer_v2.MFModel
	(*EMExtractionSpec)(nil),                  // 6: grpc_trainer_v2.EMExtractionSpec
	(*EMGroup)(nil),                           // 7: grpc_trainer_v2.EMGroup
	(*EMMeta)(nil),                            // 8: grpc_trainer_v2.EMMeta
	(*EMAny)(nil),                             // 9: grpc_trainer_v2.EMAny
	(*MetaInfo)(nil),                          // 10: grpc_trainer_v2.MetaInfo
	(*LogLine)(nil),                           // 11: grpc_trainer_v2.LogLine
	(*LogLineBatch)(nil),                      // 12: grpc_trainer_v2.LogLineBatch
	(*Any)(nil),                               // 13: grpc_trainer_v2.Any
	(*EMetrics)(nil),                          // 14: grpc_trainer_v2.EMetrics
	(*EMetricsBatch)(nil),                     // 15: grpc_trainer_v2.EMetricsBatch
	(*Query)(nil),                             // 16: grpc_trainer_v2.Query
	(*DeleteQuery)(nil),                       // 17: grpc_trainer_v2.DeleteQuery
	(*CreateResponse)(nil),                    // 18: grpc_trainer_v2.CreateResponse
	(*UpdateRequest)(nil),                     // 19: grpc_trainer_v2.UpdateRequest
	(*UpdateResponse)(nil),                    // 20: grpc_trainer_v2.UpdateResponse
	(*GetRequest)(nil),                        // 21: grpc_trainer_v2.GetRequest
	(*GetResponse)(nil),                       // 22: grpc_trainer_v2.GetResponse
	(*GetStatusResponse)(nil),                 // 23: grpc_trainer_v2.GetStatusResponse
	(*GetStatusIDResponse)(nil),               // 24: grpc_trainer_v2.GetStatusIDResponse
	(*GetMetricsStringResponse)(nil),          // 25: grpc_trainer_v2.GetMetricsStringResponse
	(*GetTestResponse)(nil),                   // 26: grpc_trainer_v2.GetTestResponse
	(*GetAllRequest)(nil),                     // 27: grpc_trainer_v2.GetAllRequest
	(*GetAllResponse)(nil),                    // 28: grpc_trainer_v2.GetAllResponse
	(*ResumeRequest)(nil),                     // 29: grpc_trainer_v2.ResumeRequest
	(*ResumeResponse)(nil),                    // 30: grpc_trainer_v2.ResumeResponse
	(*DeleteRequest)(nil),                     // 31: grpc_trainer_v2.DeleteRequest
	(*Metrics)(nil),                           // 32: grpc_trainer_v2.Metrics
	(*Job)(nil),                               // 33: grpc_trainer_v2.Job
	(*DataSet)(nil),                           // 34: grpc_trainer_v2.DataSet
	(*ModelDefinition)(nil),                   // 35: grpc_trainer_v2.ModelDefinition
	(*Framework)(nil),                         // 36: grpc_trainer_v2.Framework
	(*ImageLocation)(nil),                     // 37: grpc_trainer_v2.ImageLocation
	(*Training)(nil),                          // 38: grpc_trainer_v2.Training
	(*TrainingStatus)(nil),                    // 39: grpc_trainer_v2.TrainingStatus
	(*Datastore)(nil),                         // 40: grpc_trainer_v2.Datastore
	(*ResourceRequirements)(nil),              // 41: grpc_trainer_v2.ResourceRequirements
	(*ModelDefinitionRequest)(nil),            // 42: grpc_trainer_v2.ModelDefinitionRequest
	(*TrainedModelRequest)(nil),               // 43: grpc_trainer_v2.TrainedModelRequest
	(*TrainedModelLogRequest)(nil),            // 44: grpc_trainer_v2.TrainedModelLogRequest
	(*TrainedModelMetricsRequest)(nil),        // 45: grpc_trainer_v2.TrainedModelMetricsRequest
	(*GetLatestMetricsRequest)(nil),           // 46: grpc_trainer_v2.GetLatestMetricsRequest
	(*GetLatestMetricsResponse)(nil),          // 47: grpc_trainer_v2.GetLatestMetricsResponse
	(*UpdateTrainedModelMetricsRequest)(nil),  // 48: grpc_trainer_v2.UpdateTrainedModelMetricsRequest
	(*UpdateTrainedModelMetricsResponse)(nil), // 49: grpc_trainer_v2.UpdateTrainedModelMetricsResponse
	(*ByteStreamResponse)(nil),                // 50: grpc_trainer_v2.ByteStreamResponse
	(*ZippedDataChunk)(nil),                   // 51: grpc_trainer_v2.ZippedDataChunk
	(*GetVersionsRequest)(nil),                // 52: grpc_trainer_v2.GetVersionsRequest
	(*Frameworks)(nil),                        // 53: grpc_trainer_v2.Frameworks
	(*FrameworkDetailList)(nil),               // 54: grpc_trainer_v2.FrameworkDetailList
	(*FrameworkDetails)(nil),                  // 55: grpc_trainer_v2.FrameworkDetails
	(*AddResponse)(nil),                       // 56: grpc_trainer_v2.AddResponse
	(*DeleteResponse)(nil),                    // 57: grpc_trainer_v2.DeleteResponse
	(*HelloResponse)(nil),                     // 58: grpc_trainer_v2.HelloResponse
	(*Empty)(nil),                             // 59: grpc_trainer_v2.Empty
	(*UploadRequest)(nil),                     // 60: grpc_trainer_v2.UploadRequest
	(*FileInfo)(nil),                          // 61: grpc_trainer_v2.FileInfo
	(*UploadResponse)(nil),                    // 62: grpc_trainer_v2.UploadResponse
	(*DownloadRequest)(nil),                   // 63: grpc_trainer_v2.DownloadRequest
	(*DownloadResponse)(nil),                  // 64: grpc_trainer_v2.DownloadResponse
	(*BucketExistsRequest)(nil),               // 65: grpc_trainer_v2.BucketExistsRequest
	(*BucketExistsResponse)(nil),              // 66: grpc_trainer_v2.BucketExistsResponse
	(*CodeUploadRequest)(nil),                 // 67: grpc_trainer_v2.CodeUploadRequest
	(*CodeUploadResponse)(nil),                // 68: grpc_trainer_v2.CodeUploadResponse
	nil,                                       // 69: grpc_trainer_v2.EMExtractionSpec.GroupsEntry
	nil,                                       // 70: grpc_trainer_v2.EMGroup.ValuesEntry
	nil,                                       // 71: grpc_trainer_v2.EMGroup.EtimesEntry
	nil,                                       // 72: grpc_trainer_v2.EMetrics.EtimesEntry
	nil,                                       // 73: grpc_trainer_v2.EMetrics.ValuesEntry
	nil,                                       // 74: grpc_trainer_v2.Metrics.ValuesEntry
	nil,                                       // 75: grpc_trainer_v2.Datastore.FieldsEntry
	nil,                                       // 76: grpc_trainer_v2.Datastore.ConnectionEntry
	nil,                                       // 77: grpc_trainer_v2.Frameworks.FrameworksEntry
}
var file_grpc_trainer_v2_trainer_proto_depIdxs = []int32{
	35, // 0: grpc_trainer_v2.CreateRequest.model_definition:type_name -> grpc_trainer_v2.ModelDefinition
	38, // 1: grpc_trainer_v2.CreateRequest.training:type_name -> grpc_trainer_v2.Training
	40, // 2: grpc_trainer_v2.CreateRequest.datastores:type_name -> grpc_trainer_v2.Datastore
	6,  // 3: grpc_trainer_v2.CreateRequest.evaluation_metrics:type_name -> grpc_trainer_v2.EMExtractionSpec
	34, // 4: grpc_trainer_v2.CreateRequest.data_set:type_name -> grpc_trainer_v2.DataSet
	5,  // 5: grpc_trainer_v2.CreateRequest.mf_model:type_name -> grpc_trainer_v2.MFModel
	69, // 6: grpc_trainer_v2.EMExtractionSpec.groups:type_name -> grpc_trainer_v2.EMExtractionSpec.GroupsEntry
	8,  // 7: grpc_trainer_v2.EMGroup.meta:type_name -> grpc_trainer_v2.EMMeta
	70, // 8: grpc_trainer_v2.EMGroup.values:type_name -> grpc_trainer_v2.EMGroup.ValuesEntry
	71, // 9: grpc_trainer_v2.EMGroup.etimes:type_name -> grpc_trainer_v2.EMGroup.EtimesEntry
	10, // 10: grpc_trainer_v2.LogLine.meta:type_name -> grpc_trainer_v2.MetaInfo
	11, // 11: grpc_trainer_v2.LogLineBatch.logLine:type_name -> grpc_trainer_v2.LogLine
	2,  // 12: grpc_trainer_v2.Any.type:type_name -> grpc_trainer_v2.Any.DataType
	10, // 13: grpc_trainer_v2.EMetrics.meta:type_name -> grpc_trainer_v2.MetaInfo
	72, // 14: grpc_trainer_v2.EMetrics.etimes:type_name -> grpc_trainer_v2.EMetrics.EtimesEntry
	73, // 15: grpc_trainer_v2.EMetrics.values:type_name -> grpc_trainer_v2.EMetrics.ValuesEntry
	14, // 16: grpc_trainer_v2.EMetricsBatch.emetrics:type_name -> grpc_trainer_v2.EMetrics
	3,  // 17: grpc_trainer_v2.Query.searchType:type_name -> grpc_trainer_v2.Query.SearchType
	10, // 18: grpc_trainer_v2.Query.meta:type_name -> grpc_trainer_v2.MetaInfo
	1,  // 19: grpc_trainer_v2.UpdateRequest.status:type_name -> grpc_trainer_v2.Status
	33, // 20: grpc_trainer_v2.GetResponse.job:type_name -> grpc_trainer_v2.Job
	39, // 21: grpc_trainer_v2.GetStatusResponse.status:type_name -> grpc_trainer_v2.TrainingStatus
	1,  // 22: grpc_trainer_v2.GetStatusIDResponse.status:type_name -> grpc_trainer_v2.Status
	33, // 23: grpc_trainer_v2.GetAllResponse.jobs:type_name -> grpc_trainer_v2.Job
	1,  // 24: grpc_trainer_v2.ResumeResponse.status:type_name -> grpc_trainer_v2.Status
	74, // 25: grpc_trainer_v2.Metrics.values:type_name -> grpc_trainer_v2.Metrics.ValuesEntry
	35, // 26: grpc_trainer_v2.Job.model_definition:type_name -> grpc_trainer_v2.ModelDefinition
	38, // 27: grpc_trainer_v2.Job.training:type_name -> grpc_trainer_v2.Training
	39, // 28: grpc_trainer_v2.Job.status:type_name -> grpc_trainer_v2.TrainingStatus
	40, // 29: grpc_trainer_v2.Job.datastores:type_name -> grpc_trainer_v2.Datastore
	32, // 30: grpc_trainer_v2.Job.metrics:type_name -> grpc_trainer_v2.Metrics
	34, // 31: grpc_trainer_v2.Job.data_set:type_name -> grpc_trainer_v2.DataSet
	5,  // 32: grpc_trainer_v2.Job.mf_model:type_name -> grpc_trainer_v2.MFModel
	36, // 33: grpc_trainer_v2.ModelDefinition.framework:type_name -> grpc_trainer_v2.Framework
	37, // 34: grpc_trainer_v2.Framework.image_location:type_name -> grpc_trainer_v2.ImageLocation
	41, // 35: grpc_trainer_v2.Training.resources:type_name -> grpc_trainer_v2.ResourceRequirements
	1,  // 36: grpc_trainer_v2.TrainingStatus.status:type_name -> grpc_trainer_v2.Status
	75, // 37: grpc_trainer_v2.Datastore.fields:type_name -> grpc_trainer_v2.Datastore.FieldsEntry
	76, // 38: grpc_trainer_v2.Datastore.connection:type_name -> grpc_trainer_v2.Datastore.ConnectionEntry
	0,  // 39: grpc_trainer_v2.ResourceRequirements.memory_unit:type_name -> grpc_trainer_v2.SizeUnit
	0,  // 40: grpc_trainer_v2.ResourceRequirements.storage_unit:type_name -> grpc_trainer_v2.SizeUnit
	32, // 41: grpc_trainer_v2.GetLatestMetricsResponse.metrics:type_name -> grpc_trainer_v2.Metrics
	32, // 42: grpc_trainer_v2.UpdateTrainedModelMetricsRequest.new_metrics:type_name -> grpc_trainer_v2.Metrics
	77, // 43: grpc_trainer_v2.Frameworks.frameworks:type_name -> grpc_trainer_v2.Frameworks.FrameworksEntry
	55, // 44: grpc_trainer_v2.FrameworkDetailList.versions:type_name -> grpc_trainer_v2.FrameworkDetails
	61, // 45: grpc_trainer_v2.UploadRequest.info:type_name -> grpc_trainer_v2.FileInfo
	61, // 46: grpc_trainer_v2.DownloadRequest.file_info:type_name -> grpc_trainer_v2.FileInfo
	7,  // 47: grpc_trainer_v2.EMExtractionSpec.GroupsEntry.value:type_name -> grpc_trainer_v2.EMGroup
	9,  // 48: grpc_trainer_v2.EMGroup.ValuesEntry.value:type_name -> grpc_trainer_v2.EMAny
	9,  // 49: grpc_trainer_v2.EMGroup.EtimesEntry.value:type_name -> grpc_trainer_v2.EMAny
	13, // 50: grpc_trainer_v2.EMetrics.EtimesEntry.value:type_name -> grpc_trainer_v2.Any
	13, // 51: grpc_trainer_v2.EMetrics.ValuesEntry.value:type_name -> grpc_trainer_v2.Any
	54, // 52: grpc_trainer_v2.Frameworks.FrameworksEntry.value:type_name -> grpc_trainer_v2.FrameworkDetailList
	4,  // 53: grpc_trainer_v2.Trainer.CreateTrainingJob:input_type -> grpc_trainer_v2.CreateRequest
	21, // 54: grpc_trainer_v2.Trainer.GetTrainingJob:input_type -> grpc_trainer_v2.GetRequest
	27, // 55: grpc_trainer_v2.Trainer.GetAllTrainingsJobs:input_type -> grpc_trainer_v2.GetAllRequest
	27, // 56: grpc_trainer_v2.Trainer.GetAllTrainingsJobsByUserIdAndNamespace:input_type -> grpc_trainer_v2.GetAllRequest
	27, // 57: grpc_trainer_v2.Trainer.GetAllTrainingsJobsByUserIdAndNamespaceList:input_type -> grpc_trainer_v2.GetAllRequest
	31, // 58: grpc_trainer_v2.Trainer.DeleteTrainingJob:input_type -> grpc_trainer_v2.DeleteRequest
	42, // 59: grpc_trainer_v2.Trainer.GetModelDefinition:input_type -> grpc_trainer_v2.ModelDefinitionRequest
	43, // 60: grpc_trainer_v2.Trainer.GetTrainedModel:input_type -> grpc_trainer_v2.TrainedModelRequest
	44, // 61: grpc_trainer_v2.Trainer.GetTrainedModelLogs:input_type -> grpc_trainer_v2.TrainedModelLogRequest
	16, // 62: grpc_trainer_v2.Trainer.GetTrainingLogs:input_type -> grpc_trainer_v2.Query
	52, // 63: grpc_trainer_v2.Trainer.GetVersions:input_type -> grpc_trainer_v2.GetVersionsRequest
	21, // 64: grpc_trainer_v2.Trainer.GetTrainingStatusID:input_type -> grpc_trainer_v2.GetRequest
	19, // 65: grpc_trainer_v2.Trainer.UpdateTrainingJob:input_type -> grpc_trainer_v2.UpdateRequest
	29, // 66: grpc_trainer_v2.Trainer.ResumeTrainingJob:input_type -> grpc_trainer_v2.ResumeRequest
	31, // 67: grpc_trainer_v2.Trainer.DeleteSubmittedCode:input_type -> grpc_trainer_v2.DeleteRequest
	18, // 68: grpc_trainer_v2.Trainer.CreateTrainingJob:output_type -> grpc_trainer_v2.CreateResponse
	22, // 69: grpc_trainer_v2.Trainer.GetTrainingJob:output_type -> grpc_trainer_v2.GetResponse
	28, // 70: grpc_trainer_v2.Trainer.GetAllTrainingsJobs:output_type -> grpc_trainer_v2.GetAllResponse
	28, // 71: grpc_trainer_v2.Trainer.GetAllTrainingsJobsByUserIdAndNamespace:output_type -> grpc_trainer_v2.GetAllResponse
	28, // 72: grpc_trainer_v2.Trainer.GetAllTrainingsJobsByUserIdAndNamespaceList:output_type -> grpc_trainer_v2.GetAllResponse
	57, // 73: grpc_trainer_v2.Trainer.DeleteTrainingJob:output_type -> grpc_trainer_v2.DeleteResponse
	51, // 74: grpc_trainer_v2.Trainer.GetModelDefinition:output_type -> grpc_trainer_v2.ZippedDataChunk
	51, // 75: grpc_trainer_v2.Trainer.GetTrainedModel:output_type -> grpc_trainer_v2.ZippedDataChunk
	50, // 76: grpc_trainer_v2.Trainer.GetTrainedModelLogs:output_type -> grpc_trainer_v2.ByteStreamResponse
	11, // 77: grpc_trainer_v2.Trainer.GetTrainingLogs:output_type -> grpc_trainer_v2.LogLine
	53, // 78: grpc_trainer_v2.Trainer.GetVersions:output_type -> grpc_trainer_v2.Frameworks
	24, // 79: grpc_trainer_v2.Trainer.GetTrainingStatusID:output_type -> grpc_trainer_v2.GetStatusIDResponse
	20, // 80: grpc_trainer_v2.Trainer.UpdateTrainingJob:output_type -> grpc_trainer_v2.UpdateResponse
	30, // 81: grpc_trainer_v2.Trainer.ResumeTrainingJob:output_type -> grpc_trainer_v2.ResumeResponse
	57, // 82: grpc_trainer_v2.Trainer.DeleteSubmittedCode:output_type -> grpc_trainer_v2.DeleteResponse
	68, // [68:83] is the sub-list for method output_type
	53, // [53:68] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_grpc_trainer_v2_trainer_proto_init() }
func file_grpc_trainer_v2_trainer_proto_init() {
	if File_grpc_trainer_v2_trainer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_trainer_v2_trainer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MFModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EMExtractionSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EMGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EMMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EMAny); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLineBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Any); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EMetricsBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricsStringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Framework); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Training); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Datastore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRequirements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainedModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainedModelLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainedModelMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrainedModelMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrainedModelMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByteStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZippedDataChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frameworks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameworkDetailList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrameworkDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_trainer_v2_trainer_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_grpc_trainer_v2_trainer_proto_msgTypes[56].OneofWrappers = []interface{}{
		(*UploadRequest_Info)(nil),
		(*UploadRequest_ChucksData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_trainer_v2_trainer_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   74,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_trainer_v2_trainer_proto_goTypes,
		DependencyIndexes: file_grpc_trainer_v2_trainer_proto_depIdxs,
		EnumInfos:         file_grpc_trainer_v2_trainer_proto_enumTypes,
		MessageInfos:      file_grpc_trainer_v2_trainer_proto_msgTypes,
	}.Build()
	File_grpc_trainer_v2_trainer_proto = out.File
	file_grpc_trainer_v2_trainer_proto_rawDesc = nil
	file_grpc_trainer_v2_trainer_proto_goTypes = nil
	file_grpc_trainer_v2_trainer_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TrainerClient is the client API for Trainer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrainerClient interface {
	// Creates a new deep learning training job for a given model definition.
	CreateTrainingJob(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// Reads a training job with a given ID.
	GetTrainingJob(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// FIXME MLSS Change: get all models
	// Returns all training jobs for a given user.
	GetAllTrainingsJobs(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllResponse, error)
	// FIXME MLSS Change: get models by userName and namespace
	// Returns all training jobs for a given user or namespace
	GetAllTrainingsJobsByUserIdAndNamespace(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllResponse, error)
	// FIXME MLSS Change: get models by userName and namespace list
	// Returns all training jobs for a given user or namespace list
	GetAllTrainingsJobsByUserIdAndNamespaceList(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllResponse, error)
	// Deletes a training job with a given ID.
	DeleteTrainingJob(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// Returns the model definition that was used for training as application/zip.
	GetModelDefinition(ctx context.Context, in *ModelDefinitionRequest, opts ...grpc.CallOption) (Trainer_GetModelDefinitionClient, error)
	// Returns the trained model as application/zip.
	GetTrainedModel(ctx context.Context, in *TrainedModelRequest, opts ...grpc.CallOption) (Trainer_GetTrainedModelClient, error)
	// Returns the logs from the ZIP file stored in the object store.
	// Deprecated
	GetTrainedModelLogs(ctx context.Context, in *TrainedModelLogRequest, opts ...grpc.CallOption) (Trainer_GetTrainedModelLogsClient, error)
	GetTrainingLogs(ctx context.Context, in *Query, opts ...grpc.CallOption) (Trainer_GetTrainingLogsClient, error)
	GetVersions(ctx context.Context, in *GetVersionsRequest, opts ...grpc.CallOption) (*Frameworks, error)
	// For internal use only!
	GetTrainingStatusID(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetStatusIDResponse, error)
	// For internal use only!
	// Updates an existing training status
	// TODO we should not have this but until we fix the status update handling properly, we have no other choice.
	UpdateTrainingJob(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	// Not implemented, to be removed (for GA)
	ResumeTrainingJob(ctx context.Context, in *ResumeRequest, opts ...grpc.CallOption) (*ResumeResponse, error)
	// FIXME MLSS Change: delete model.zip in S3
	// delete s3 training model
	DeleteSubmittedCode(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
}

type trainerClient struct {
	cc grpc.ClientConnInterface
}

func NewTrainerClient(cc grpc.ClientConnInterface) TrainerClient {
	return &trainerClient{cc}
}

func (c *trainerClient) CreateTrainingJob(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/grpc_trainer_v2.Trainer/CreateTrainingJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerClient) GetTrainingJob(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/grpc_trainer_v2.Trainer/GetTrainingJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerClient) GetAllTrainingsJobs(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllResponse, error) {
	out := new(GetAllResponse)
	err := c.cc.Invoke(ctx, "/grpc_trainer_v2.Trainer/GetAllTrainingsJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerClient) GetAllTrainingsJobsByUserIdAndNamespace(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllResponse, error) {
	out := new(GetAllResponse)
	err := c.cc.Invoke(ctx, "/grpc_trainer_v2.Trainer/GetAllTrainingsJobsByUserIdAndNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerClient) GetAllTrainingsJobsByUserIdAndNamespaceList(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllResponse, error) {
	out := new(GetAllResponse)
	err := c.cc.Invoke(ctx, "/grpc_trainer_v2.Trainer/GetAllTrainingsJobsByUserIdAndNamespaceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerClient) DeleteTrainingJob(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/grpc_trainer_v2.Trainer/DeleteTrainingJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerClient) GetModelDefinition(ctx context.Context, in *ModelDefinitionRequest, opts ...grpc.CallOption) (Trainer_GetModelDefinitionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trainer_serviceDesc.Streams[0], "/grpc_trainer_v2.Trainer/GetModelDefinition", opts...)
	if err != nil {
		return nil, err
	}
	x := &trainerGetModelDefinitionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trainer_GetModelDefinitionClient interface {
	Recv() (*ZippedDataChunk, error)
	grpc.ClientStream
}

type trainerGetModelDefinitionClient struct {
	grpc.ClientStream
}

func (x *trainerGetModelDefinitionClient) Recv() (*ZippedDataChunk, error) {
	m := new(ZippedDataChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *trainerClient) GetTrainedModel(ctx context.Context, in *TrainedModelRequest, opts ...grpc.CallOption) (Trainer_GetTrainedModelClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trainer_serviceDesc.Streams[1], "/grpc_trainer_v2.Trainer/GetTrainedModel", opts...)
	if err != nil {
		return nil, err
	}
	x := &trainerGetTrainedModelClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trainer_GetTrainedModelClient interface {
	Recv() (*ZippedDataChunk, error)
	grpc.ClientStream
}

type trainerGetTrainedModelClient struct {
	grpc.ClientStream
}

func (x *trainerGetTrainedModelClient) Recv() (*ZippedDataChunk, error) {
	m := new(ZippedDataChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *trainerClient) GetTrainedModelLogs(ctx context.Context, in *TrainedModelLogRequest, opts ...grpc.CallOption) (Trainer_GetTrainedModelLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trainer_serviceDesc.Streams[2], "/grpc_trainer_v2.Trainer/GetTrainedModelLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &trainerGetTrainedModelLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trainer_GetTrainedModelLogsClient interface {
	Recv() (*ByteStreamResponse, error)
	grpc.ClientStream
}

type trainerGetTrainedModelLogsClient struct {
	grpc.ClientStream
}

func (x *trainerGetTrainedModelLogsClient) Recv() (*ByteStreamResponse, error) {
	m := new(ByteStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *trainerClient) GetTrainingLogs(ctx context.Context, in *Query, opts ...grpc.CallOption) (Trainer_GetTrainingLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trainer_serviceDesc.Streams[3], "/grpc_trainer_v2.Trainer/GetTrainingLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &trainerGetTrainingLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trainer_GetTrainingLogsClient interface {
	Recv() (*LogLine, error)
	grpc.ClientStream
}

type trainerGetTrainingLogsClient struct {
	grpc.ClientStream
}

func (x *trainerGetTrainingLogsClient) Recv() (*LogLine, error) {
	m := new(LogLine)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *trainerClient) GetVersions(ctx context.Context, in *GetVersionsRequest, opts ...grpc.CallOption) (*Frameworks, error) {
	out := new(Frameworks)
	err := c.cc.Invoke(ctx, "/grpc_trainer_v2.Trainer/GetVersions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerClient) GetTrainingStatusID(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetStatusIDResponse, error) {
	out := new(GetStatusIDResponse)
	err := c.cc.Invoke(ctx, "/grpc_trainer_v2.Trainer/GetTrainingStatusID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerClient) UpdateTrainingJob(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/grpc_trainer_v2.Trainer/UpdateTrainingJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerClient) ResumeTrainingJob(ctx context.Context, in *ResumeRequest, opts ...grpc.CallOption) (*ResumeResponse, error) {
	out := new(ResumeResponse)
	err := c.cc.Invoke(ctx, "/grpc_trainer_v2.Trainer/ResumeTrainingJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainerClient) DeleteSubmittedCode(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/grpc_trainer_v2.Trainer/DeleteSubmittedCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrainerServer is the server API for Trainer service.
type TrainerServer interface {
	// Creates a new deep learning training job for a given model definition.
	CreateTrainingJob(context.Context, *CreateRequest) (*CreateResponse, error)
	// Reads a training job with a given ID.
	GetTrainingJob(context.Context, *GetRequest) (*GetResponse, error)
	// FIXME MLSS Change: get all models
	// Returns all training jobs for a given user.
	GetAllTrainingsJobs(context.Context, *GetAllRequest) (*GetAllResponse, error)
	// FIXME MLSS Change: get models by userName and namespace
	// Returns all training jobs for a given user or namespace
	GetAllTrainingsJobsByUserIdAndNamespace(context.Context, *GetAllRequest) (*GetAllResponse, error)
	// FIXME MLSS Change: get models by userName and namespace list
	// Returns all training jobs for a given user or namespace list
	GetAllTrainingsJobsByUserIdAndNamespaceList(context.Context, *GetAllRequest) (*GetAllResponse, error)
	// Deletes a training job with a given ID.
	DeleteTrainingJob(context.Context, *DeleteRequest) (*DeleteResponse, error)
	// Returns the model definition that was used for training as application/zip.
	GetModelDefinition(*ModelDefinitionRequest, Trainer_GetModelDefinitionServer) error
	// Returns the trained model as application/zip.
	GetTrainedModel(*TrainedModelRequest, Trainer_GetTrainedModelServer) error
	// Returns the logs from the ZIP file stored in the object store.
	// Deprecated
	GetTrainedModelLogs(*TrainedModelLogRequest, Trainer_GetTrainedModelLogsServer) error
	GetTrainingLogs(*Query, Trainer_GetTrainingLogsServer) error
	GetVersions(context.Context, *GetVersionsRequest) (*Frameworks, error)
	// For internal use only!
	GetTrainingStatusID(context.Context, *GetRequest) (*GetStatusIDResponse, error)
	// For internal use only!
	// Updates an existing training status
	// TODO we should not have this but until we fix the status update handling properly, we have no other choice.
	UpdateTrainingJob(context.Context, *UpdateRequest) (*UpdateResponse, error)
	// Not implemented, to be removed (for GA)
	ResumeTrainingJob(context.Context, *ResumeRequest) (*ResumeResponse, error)
	// FIXME MLSS Change: delete model.zip in S3
	// delete s3 training model
	DeleteSubmittedCode(context.Context, *DeleteRequest) (*DeleteResponse, error)
}

// UnimplementedTrainerServer can be embedded to have forward compatible implementations.
type UnimplementedTrainerServer struct {
}

func (*UnimplementedTrainerServer) CreateTrainingJob(context.Context, *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTrainingJob not implemented")
}
func (*UnimplementedTrainerServer) GetTrainingJob(context.Context, *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrainingJob not implemented")
}
func (*UnimplementedTrainerServer) GetAllTrainingsJobs(context.Context, *GetAllRequest) (*GetAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTrainingsJobs not implemented")
}
func (*UnimplementedTrainerServer) GetAllTrainingsJobsByUserIdAndNamespace(context.Context, *GetAllRequest) (*GetAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTrainingsJobsByUserIdAndNamespace not implemented")
}
func (*UnimplementedTrainerServer) GetAllTrainingsJobsByUserIdAndNamespaceList(context.Context, *GetAllRequest) (*GetAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTrainingsJobsByUserIdAndNamespaceList not implemented")
}
func (*UnimplementedTrainerServer) DeleteTrainingJob(context.Context, *DeleteRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTrainingJob not implemented")
}
func (*UnimplementedTrainerServer) GetModelDefinition(*ModelDefinitionRequest, Trainer_GetModelDefinitionServer) error {
	return status.Errorf(codes.Unimplemented, "method GetModelDefinition not implemented")
}
func (*UnimplementedTrainerServer) GetTrainedModel(*TrainedModelRequest, Trainer_GetTrainedModelServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTrainedModel not implemented")
}
func (*UnimplementedTrainerServer) GetTrainedModelLogs(*TrainedModelLogRequest, Trainer_GetTrainedModelLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTrainedModelLogs not implemented")
}
func (*UnimplementedTrainerServer) GetTrainingLogs(*Query, Trainer_GetTrainingLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTrainingLogs not implemented")
}
func (*UnimplementedTrainerServer) GetVersions(context.Context, *GetVersionsRequest) (*Frameworks, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersions not implemented")
}
func (*UnimplementedTrainerServer) GetTrainingStatusID(context.Context, *GetRequest) (*GetStatusIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrainingStatusID not implemented")
}
func (*UnimplementedTrainerServer) UpdateTrainingJob(context.Context, *UpdateRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTrainingJob not implemented")
}
func (*UnimplementedTrainerServer) ResumeTrainingJob(context.Context, *ResumeRequest) (*ResumeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeTrainingJob not implemented")
}
func (*UnimplementedTrainerServer) DeleteSubmittedCode(context.Context, *DeleteRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSubmittedCode not implemented")
}

func RegisterTrainerServer(s *grpc.Server, srv TrainerServer) {
	s.RegisterService(&_Trainer_serviceDesc, srv)
}

func _Trainer_CreateTrainingJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerServer).CreateTrainingJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_trainer_v2.Trainer/CreateTrainingJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerServer).CreateTrainingJob(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trainer_GetTrainingJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerServer).GetTrainingJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_trainer_v2.Trainer/GetTrainingJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerServer).GetTrainingJob(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trainer_GetAllTrainingsJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerServer).GetAllTrainingsJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_trainer_v2.Trainer/GetAllTrainingsJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerServer).GetAllTrainingsJobs(ctx, req.(*GetAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trainer_GetAllTrainingsJobsByUserIdAndNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerServer).GetAllTrainingsJobsByUserIdAndNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_trainer_v2.Trainer/GetAllTrainingsJobsByUserIdAndNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerServer).GetAllTrainingsJobsByUserIdAndNamespace(ctx, req.(*GetAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trainer_GetAllTrainingsJobsByUserIdAndNamespaceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerServer).GetAllTrainingsJobsByUserIdAndNamespaceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_trainer_v2.Trainer/GetAllTrainingsJobsByUserIdAndNamespaceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerServer).GetAllTrainingsJobsByUserIdAndNamespaceList(ctx, req.(*GetAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trainer_DeleteTrainingJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerServer).DeleteTrainingJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_trainer_v2.Trainer/DeleteTrainingJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerServer).DeleteTrainingJob(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trainer_GetModelDefinition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ModelDefinitionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TrainerServer).GetModelDefinition(m, &trainerGetModelDefinitionServer{stream})
}

type Trainer_GetModelDefinitionServer interface {
	Send(*ZippedDataChunk) error
	grpc.ServerStream
}

type trainerGetModelDefinitionServer struct {
	grpc.ServerStream
}

func (x *trainerGetModelDefinitionServer) Send(m *ZippedDataChunk) error {
	return x.ServerStream.SendMsg(m)
}

func _Trainer_GetTrainedModel_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TrainedModelRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TrainerServer).GetTrainedModel(m, &trainerGetTrainedModelServer{stream})
}

type Trainer_GetTrainedModelServer interface {
	Send(*ZippedDataChunk) error
	grpc.ServerStream
}

type trainerGetTrainedModelServer struct {
	grpc.ServerStream
}

func (x *trainerGetTrainedModelServer) Send(m *ZippedDataChunk) error {
	return x.ServerStream.SendMsg(m)
}

func _Trainer_GetTrainedModelLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TrainedModelLogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TrainerServer).GetTrainedModelLogs(m, &trainerGetTrainedModelLogsServer{stream})
}

type Trainer_GetTrainedModelLogsServer interface {
	Send(*ByteStreamResponse) error
	grpc.ServerStream
}

type trainerGetTrainedModelLogsServer struct {
	grpc.ServerStream
}

func (x *trainerGetTrainedModelLogsServer) Send(m *ByteStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Trainer_GetTrainingLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Query)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TrainerServer).GetTrainingLogs(m, &trainerGetTrainingLogsServer{stream})
}

type Trainer_GetTrainingLogsServer interface {
	Send(*LogLine) error
	grpc.ServerStream
}

type trainerGetTrainingLogsServer struct {
	grpc.ServerStream
}

func (x *trainerGetTrainingLogsServer) Send(m *LogLine) error {
	return x.ServerStream.SendMsg(m)
}

func _Trainer_GetVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerServer).GetVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_trainer_v2.Trainer/GetVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerServer).GetVersions(ctx, req.(*GetVersionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trainer_GetTrainingStatusID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerServer).GetTrainingStatusID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_trainer_v2.Trainer/GetTrainingStatusID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerServer).GetTrainingStatusID(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trainer_UpdateTrainingJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerServer).UpdateTrainingJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_trainer_v2.Trainer/UpdateTrainingJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerServer).UpdateTrainingJob(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trainer_ResumeTrainingJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerServer).ResumeTrainingJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_trainer_v2.Trainer/ResumeTrainingJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerServer).ResumeTrainingJob(ctx, req.(*ResumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trainer_DeleteSubmittedCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainerServer).DeleteSubmittedCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_trainer_v2.Trainer/DeleteSubmittedCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainerServer).DeleteSubmittedCode(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Trainer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_trainer_v2.Trainer",
	HandlerType: (*TrainerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTrainingJob",
			Handler:    _Trainer_CreateTrainingJob_Handler,
		},
		{
			MethodName: "GetTrainingJob",
			Handler:    _Trainer_GetTrainingJob_Handler,
		},
		{
			MethodName: "GetAllTrainingsJobs",
			Handler:    _Trainer_GetAllTrainingsJobs_Handler,
		},
		{
			MethodName: "GetAllTrainingsJobsByUserIdAndNamespace",
			Handler:    _Trainer_GetAllTrainingsJobsByUserIdAndNamespace_Handler,
		},
		{
			MethodName: "GetAllTrainingsJobsByUserIdAndNamespaceList",
			Handler:    _Trainer_GetAllTrainingsJobsByUserIdAndNamespaceList_Handler,
		},
		{
			MethodName: "DeleteTrainingJob",
			Handler:    _Trainer_DeleteTrainingJob_Handler,
		},
		{
			MethodName: "GetVersions",
			Handler:    _Trainer_GetVersions_Handler,
		},
		{
			MethodName: "GetTrainingStatusID",
			Handler:    _Trainer_GetTrainingStatusID_Handler,
		},
		{
			MethodName: "UpdateTrainingJob",
			Handler:    _Trainer_UpdateTrainingJob_Handler,
		},
		{
			MethodName: "ResumeTrainingJob",
			Handler:    _Trainer_ResumeTrainingJob_Handler,
		},
		{
			MethodName: "DeleteSubmittedCode",
			Handler:    _Trainer_DeleteSubmittedCode_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetModelDefinition",
			Handler:       _Trainer_GetModelDefinition_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetTrainedModel",
			Handler:       _Trainer_GetTrainedModel_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetTrainedModelLogs",
			Handler:       _Trainer_GetTrainedModelLogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetTrainingLogs",
			Handler:       _Trainer_GetTrainingLogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc_trainer_v2/trainer.proto",
}
