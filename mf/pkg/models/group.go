// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// Group group
// swagger:model Group
type Group struct {

	// Group's cluster name
	ClusterName string `json:"cluster_name,omitempty"`

	// Group's department id
	DepartmentID string `json:"department_id,omitempty"`

	// Group's department name
	DepartmentName string `json:"department_name,omitempty"`

	// Group's type
	GroupType string `json:"group_type,omitempty"`

	// Id for the Group
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// Group's name
	Name string `json:"name,omitempty"`

	// Group's remarks
	Remarks string `json:"remarks,omitempty"`

	// rmb dcn
	RmbDcn string `json:"rmb_dcn,omitempty"`

	// rmb idc
	RmbIdc string `json:"rmb_idc,omitempty"`

	// service id
	ServiceID int64 `json:"service_id,omitempty"`

	// Group's subsystem id
	SubsystemID int64 `json:"subsystem_id,omitempty"`

	// Group's subsystem name
	SubsystemName string `json:"subsystem_name,omitempty"`
}

// Validate validates this group
func (m *Group) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Group) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Group) UnmarshalBinary(b []byte) error {
	var res Group
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
