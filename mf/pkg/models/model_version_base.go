// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// ModelVersionBase model version base
// swagger:model ModelVersionBase
type ModelVersionBase struct {

	// Timestamp recorded when this model_version was created.
	CreationTimestamp string `json:"creation_timestamp,omitempty"`

	// enable flag
	EnableFlag int8 `json:"enable_flag,omitempty"`

	// file name
	FileName string `json:"file_name,omitempty"`

	// Running status of this model_version.
	Filepath string `json:"filepath,omitempty"`

	// Id for the ModelVersion.
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// Timestamp recorded when metadata for this model_version was last updated.
	LatestFlag int64 `json:"latest_flag,omitempty"`

	// Description of this model_version.
	ModelID int64 `json:"model_id,omitempty"`

	// push id
	PushID int64 `json:"push_id,omitempty"`

	// Timestamp pushed.
	PushTimestamp string `json:"push_timestamp,omitempty"`

	// User that created this model_version.
	Source string `json:"source,omitempty"`

	// The flag that whether generated by model operator.
	TrainingFlag int8 `json:"training_flag,omitempty"`

	// The id of training
	TrainingID string `json:"training_id,omitempty"`

	// Modelâ€™s version number.
	Version string `json:"version,omitempty"`
}

// Validate validates this model version base
func (m *ModelVersionBase) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ModelVersionBase) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelVersionBase) UnmarshalBinary(b []byte) error {
	var res ModelVersionBase
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
