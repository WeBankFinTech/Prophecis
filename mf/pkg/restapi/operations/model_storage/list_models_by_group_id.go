// Code generated by go-swagger; DO NOT EDIT.

package model_storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListModelsByGroupIDHandlerFunc turns a function with the right signature into a list models by group ID handler
type ListModelsByGroupIDHandlerFunc func(ListModelsByGroupIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListModelsByGroupIDHandlerFunc) Handle(params ListModelsByGroupIDParams) middleware.Responder {
	return fn(params)
}

// ListModelsByGroupIDHandler interface for that can handle valid list models by group ID params
type ListModelsByGroupIDHandler interface {
	Handle(ListModelsByGroupIDParams) middleware.Responder
}

// NewListModelsByGroupID creates a new http.Handler for the list models by group ID operation
func NewListModelsByGroupID(ctx *middleware.Context, handler ListModelsByGroupIDHandler) *ListModelsByGroupID {
	return &ListModelsByGroupID{Context: ctx, Handler: handler}
}

/*ListModelsByGroupID swagger:route GET /mf/v1/modelsByGroupID/{groupID} modelStorage listModelsByGroupId

List Models By Group Id.

List Models

*/
type ListModelsByGroupID struct {
	Context *middleware.Context
	Handler ListModelsByGroupIDHandler
}

func (o *ListModelsByGroupID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListModelsByGroupIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
