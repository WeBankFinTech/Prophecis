// Code generated by go-swagger; DO NOT EDIT.

package model_storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-mf/pkg/models"
)

// GetModelVersionByNameAneVersionOKCode is the HTTP code returned for type GetModelVersionByNameAneVersionOK
const GetModelVersionByNameAneVersionOKCode int = 200

/*GetModelVersionByNameAneVersionOK OK

swagger:response getModelVersionByNameAneVersionOK
*/
type GetModelVersionByNameAneVersionOK struct {

	/*
	  In: Body
	*/
	Payload models.GetModelVersionResp `json:"body,omitempty"`
}

// NewGetModelVersionByNameAneVersionOK creates GetModelVersionByNameAneVersionOK with default headers values
func NewGetModelVersionByNameAneVersionOK() *GetModelVersionByNameAneVersionOK {

	return &GetModelVersionByNameAneVersionOK{}
}

// WithPayload adds the payload to the get model version by name ane version o k response
func (o *GetModelVersionByNameAneVersionOK) WithPayload(payload models.GetModelVersionResp) *GetModelVersionByNameAneVersionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get model version by name ane version o k response
func (o *GetModelVersionByNameAneVersionOK) SetPayload(payload models.GetModelVersionResp) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetModelVersionByNameAneVersionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.GetModelVersionResp{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetModelVersionByNameAneVersionUnauthorizedCode is the HTTP code returned for type GetModelVersionByNameAneVersionUnauthorized
const GetModelVersionByNameAneVersionUnauthorizedCode int = 401

/*GetModelVersionByNameAneVersionUnauthorized Unauthorized

swagger:response getModelVersionByNameAneVersionUnauthorized
*/
type GetModelVersionByNameAneVersionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetModelVersionByNameAneVersionUnauthorized creates GetModelVersionByNameAneVersionUnauthorized with default headers values
func NewGetModelVersionByNameAneVersionUnauthorized() *GetModelVersionByNameAneVersionUnauthorized {

	return &GetModelVersionByNameAneVersionUnauthorized{}
}

// WithPayload adds the payload to the get model version by name ane version unauthorized response
func (o *GetModelVersionByNameAneVersionUnauthorized) WithPayload(payload *models.Error) *GetModelVersionByNameAneVersionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get model version by name ane version unauthorized response
func (o *GetModelVersionByNameAneVersionUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetModelVersionByNameAneVersionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetModelVersionByNameAneVersionNotFoundCode is the HTTP code returned for type GetModelVersionByNameAneVersionNotFound
const GetModelVersionByNameAneVersionNotFoundCode int = 404

/*GetModelVersionByNameAneVersionNotFound The Models cannot be found

swagger:response getModelVersionByNameAneVersionNotFound
*/
type GetModelVersionByNameAneVersionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetModelVersionByNameAneVersionNotFound creates GetModelVersionByNameAneVersionNotFound with default headers values
func NewGetModelVersionByNameAneVersionNotFound() *GetModelVersionByNameAneVersionNotFound {

	return &GetModelVersionByNameAneVersionNotFound{}
}

// WithPayload adds the payload to the get model version by name ane version not found response
func (o *GetModelVersionByNameAneVersionNotFound) WithPayload(payload *models.Error) *GetModelVersionByNameAneVersionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get model version by name ane version not found response
func (o *GetModelVersionByNameAneVersionNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetModelVersionByNameAneVersionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
