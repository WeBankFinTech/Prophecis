// Code generated by go-swagger; DO NOT EDIT.

package model_storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-mf/pkg/models"
)

// PushModelByModelVersionIDOKCode is the HTTP code returned for type PushModelByModelVersionIDOK
const PushModelByModelVersionIDOKCode int = 200

/*PushModelByModelVersionIDOK OK

swagger:response pushModelByModelVersionIdOK
*/
type PushModelByModelVersionIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Event `json:"body,omitempty"`
}

// NewPushModelByModelVersionIDOK creates PushModelByModelVersionIDOK with default headers values
func NewPushModelByModelVersionIDOK() *PushModelByModelVersionIDOK {

	return &PushModelByModelVersionIDOK{}
}

// WithPayload adds the payload to the push model by model version Id o k response
func (o *PushModelByModelVersionIDOK) WithPayload(payload *models.Event) *PushModelByModelVersionIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the push model by model version Id o k response
func (o *PushModelByModelVersionIDOK) SetPayload(payload *models.Event) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PushModelByModelVersionIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PushModelByModelVersionIDUnauthorizedCode is the HTTP code returned for type PushModelByModelVersionIDUnauthorized
const PushModelByModelVersionIDUnauthorizedCode int = 401

/*PushModelByModelVersionIDUnauthorized Unauthorized

swagger:response pushModelByModelVersionIdUnauthorized
*/
type PushModelByModelVersionIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPushModelByModelVersionIDUnauthorized creates PushModelByModelVersionIDUnauthorized with default headers values
func NewPushModelByModelVersionIDUnauthorized() *PushModelByModelVersionIDUnauthorized {

	return &PushModelByModelVersionIDUnauthorized{}
}

// WithPayload adds the payload to the push model by model version Id unauthorized response
func (o *PushModelByModelVersionIDUnauthorized) WithPayload(payload *models.Error) *PushModelByModelVersionIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the push model by model version Id unauthorized response
func (o *PushModelByModelVersionIDUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PushModelByModelVersionIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PushModelByModelVersionIDNotFoundCode is the HTTP code returned for type PushModelByModelVersionIDNotFound
const PushModelByModelVersionIDNotFoundCode int = 404

/*PushModelByModelVersionIDNotFound Report push fail

swagger:response pushModelByModelVersionIdNotFound
*/
type PushModelByModelVersionIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPushModelByModelVersionIDNotFound creates PushModelByModelVersionIDNotFound with default headers values
func NewPushModelByModelVersionIDNotFound() *PushModelByModelVersionIDNotFound {

	return &PushModelByModelVersionIDNotFound{}
}

// WithPayload adds the payload to the push model by model version Id not found response
func (o *PushModelByModelVersionIDNotFound) WithPayload(payload *models.Error) *PushModelByModelVersionIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the push model by model version Id not found response
func (o *PushModelByModelVersionIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PushModelByModelVersionIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
