// Code generated by go-swagger; DO NOT EDIT.

package model_storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetModelHandlerFunc turns a function with the right signature into a get model handler
type GetModelHandlerFunc func(GetModelParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetModelHandlerFunc) Handle(params GetModelParams) middleware.Responder {
	return fn(params)
}

// GetModelHandler interface for that can handle valid get model params
type GetModelHandler interface {
	Handle(GetModelParams) middleware.Responder
}

// NewGetModel creates a new http.Handler for the get model operation
func NewGetModel(ctx *middleware.Context, handler GetModelHandler) *GetModel {
	return &GetModel{Context: ctx, Handler: handler}
}

/*GetModel swagger:route GET /mf/v1/model/{modelID} modelStorage getModel

Get a Model in the given Model ID.

Get Model.

*/
type GetModel struct {
	Context *middleware.Context
	Handler GetModelHandler
}

func (o *GetModel) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetModelParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
