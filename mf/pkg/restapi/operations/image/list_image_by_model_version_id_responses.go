// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-mf/pkg/models"
)

// ListImageByModelVersionIDOKCode is the HTTP code returned for type ListImageByModelVersionIDOK
const ListImageByModelVersionIDOKCode int = 200

/*ListImageByModelVersionIDOK OK

swagger:response listImageByModelVersionIdOK
*/
type ListImageByModelVersionIDOK struct {

	/*
	  In: Body
	*/
	Payload models.Images `json:"body,omitempty"`
}

// NewListImageByModelVersionIDOK creates ListImageByModelVersionIDOK with default headers values
func NewListImageByModelVersionIDOK() *ListImageByModelVersionIDOK {

	return &ListImageByModelVersionIDOK{}
}

// WithPayload adds the payload to the list image by model version Id o k response
func (o *ListImageByModelVersionIDOK) WithPayload(payload models.Images) *ListImageByModelVersionIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list image by model version Id o k response
func (o *ListImageByModelVersionIDOK) SetPayload(payload models.Images) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListImageByModelVersionIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Images{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListImageByModelVersionIDUnauthorizedCode is the HTTP code returned for type ListImageByModelVersionIDUnauthorized
const ListImageByModelVersionIDUnauthorizedCode int = 401

/*ListImageByModelVersionIDUnauthorized Unauthorized

swagger:response listImageByModelVersionIdUnauthorized
*/
type ListImageByModelVersionIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListImageByModelVersionIDUnauthorized creates ListImageByModelVersionIDUnauthorized with default headers values
func NewListImageByModelVersionIDUnauthorized() *ListImageByModelVersionIDUnauthorized {

	return &ListImageByModelVersionIDUnauthorized{}
}

// WithPayload adds the payload to the list image by model version Id unauthorized response
func (o *ListImageByModelVersionIDUnauthorized) WithPayload(payload *models.Error) *ListImageByModelVersionIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list image by model version Id unauthorized response
func (o *ListImageByModelVersionIDUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListImageByModelVersionIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListImageByModelVersionIDNotFoundCode is the HTTP code returned for type ListImageByModelVersionIDNotFound
const ListImageByModelVersionIDNotFoundCode int = 404

/*ListImageByModelVersionIDNotFound The Images cannot be found

swagger:response listImageByModelVersionIdNotFound
*/
type ListImageByModelVersionIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListImageByModelVersionIDNotFound creates ListImageByModelVersionIDNotFound with default headers values
func NewListImageByModelVersionIDNotFound() *ListImageByModelVersionIDNotFound {

	return &ListImageByModelVersionIDNotFound{}
}

// WithPayload adds the payload to the list image by model version Id not found response
func (o *ListImageByModelVersionIDNotFound) WithPayload(payload *models.Error) *ListImageByModelVersionIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list image by model version Id not found response
func (o *ListImageByModelVersionIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListImageByModelVersionIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
