// Code generated by go-swagger; DO NOT EDIT.

package model_deploy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-mf/pkg/models"
)

// StopNamespacedServiceOKCode is the HTTP code returned for type StopNamespacedServiceOK
const StopNamespacedServiceOKCode int = 200

/*StopNamespacedServiceOK OK

swagger:response stopNamespacedServiceOK
*/
type StopNamespacedServiceOK struct {
}

// NewStopNamespacedServiceOK creates StopNamespacedServiceOK with default headers values
func NewStopNamespacedServiceOK() *StopNamespacedServiceOK {

	return &StopNamespacedServiceOK{}
}

// WriteResponse to the client
func (o *StopNamespacedServiceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// StopNamespacedServiceUnauthorizedCode is the HTTP code returned for type StopNamespacedServiceUnauthorized
const StopNamespacedServiceUnauthorizedCode int = 401

/*StopNamespacedServiceUnauthorized Unauthorized

swagger:response stopNamespacedServiceUnauthorized
*/
type StopNamespacedServiceUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStopNamespacedServiceUnauthorized creates StopNamespacedServiceUnauthorized with default headers values
func NewStopNamespacedServiceUnauthorized() *StopNamespacedServiceUnauthorized {

	return &StopNamespacedServiceUnauthorized{}
}

// WithPayload adds the payload to the stop namespaced service unauthorized response
func (o *StopNamespacedServiceUnauthorized) WithPayload(payload *models.Error) *StopNamespacedServiceUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the stop namespaced service unauthorized response
func (o *StopNamespacedServiceUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StopNamespacedServiceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// StopNamespacedServiceNotFoundCode is the HTTP code returned for type StopNamespacedServiceNotFound
const StopNamespacedServiceNotFoundCode int = 404

/*StopNamespacedServiceNotFound The Models cannot be found

swagger:response stopNamespacedServiceNotFound
*/
type StopNamespacedServiceNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewStopNamespacedServiceNotFound creates StopNamespacedServiceNotFound with default headers values
func NewStopNamespacedServiceNotFound() *StopNamespacedServiceNotFound {

	return &StopNamespacedServiceNotFound{}
}

// WithPayload adds the payload to the stop namespaced service not found response
func (o *StopNamespacedServiceNotFound) WithPayload(payload *models.Error) *StopNamespacedServiceNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the stop namespaced service not found response
func (o *StopNamespacedServiceNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StopNamespacedServiceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
