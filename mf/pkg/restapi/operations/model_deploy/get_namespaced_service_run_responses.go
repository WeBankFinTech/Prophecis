// Code generated by go-swagger; DO NOT EDIT.

package model_deploy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-mf/pkg/models"
)

// GetNamespacedServiceRunOKCode is the HTTP code returned for type GetNamespacedServiceRunOK
const GetNamespacedServiceRunOKCode int = 200

/*GetNamespacedServiceRunOK OK

swagger:response getNamespacedServiceRunOK
*/
type GetNamespacedServiceRunOK struct {
}

// NewGetNamespacedServiceRunOK creates GetNamespacedServiceRunOK with default headers values
func NewGetNamespacedServiceRunOK() *GetNamespacedServiceRunOK {

	return &GetNamespacedServiceRunOK{}
}

// WriteResponse to the client
func (o *GetNamespacedServiceRunOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// GetNamespacedServiceRunUnauthorizedCode is the HTTP code returned for type GetNamespacedServiceRunUnauthorized
const GetNamespacedServiceRunUnauthorizedCode int = 401

/*GetNamespacedServiceRunUnauthorized Unauthorized

swagger:response getNamespacedServiceRunUnauthorized
*/
type GetNamespacedServiceRunUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNamespacedServiceRunUnauthorized creates GetNamespacedServiceRunUnauthorized with default headers values
func NewGetNamespacedServiceRunUnauthorized() *GetNamespacedServiceRunUnauthorized {

	return &GetNamespacedServiceRunUnauthorized{}
}

// WithPayload adds the payload to the get namespaced service run unauthorized response
func (o *GetNamespacedServiceRunUnauthorized) WithPayload(payload *models.Error) *GetNamespacedServiceRunUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespaced service run unauthorized response
func (o *GetNamespacedServiceRunUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespacedServiceRunUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNamespacedServiceRunNotFoundCode is the HTTP code returned for type GetNamespacedServiceRunNotFound
const GetNamespacedServiceRunNotFoundCode int = 404

/*GetNamespacedServiceRunNotFound Model create failed

swagger:response getNamespacedServiceRunNotFound
*/
type GetNamespacedServiceRunNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNamespacedServiceRunNotFound creates GetNamespacedServiceRunNotFound with default headers values
func NewGetNamespacedServiceRunNotFound() *GetNamespacedServiceRunNotFound {

	return &GetNamespacedServiceRunNotFound{}
}

// WithPayload adds the payload to the get namespaced service run not found response
func (o *GetNamespacedServiceRunNotFound) WithPayload(payload *models.Error) *GetNamespacedServiceRunNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespaced service run not found response
func (o *GetNamespacedServiceRunNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespacedServiceRunNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
