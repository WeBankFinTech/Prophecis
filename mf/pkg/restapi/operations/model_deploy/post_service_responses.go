// Code generated by go-swagger; DO NOT EDIT.

package model_deploy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-mf/pkg/models"
)

// PostServiceOKCode is the HTTP code returned for type PostServiceOK
const PostServiceOKCode int = 200

/*PostServiceOK OK

swagger:response postServiceOK
*/
type PostServiceOK struct {
}

// NewPostServiceOK creates PostServiceOK with default headers values
func NewPostServiceOK() *PostServiceOK {

	return &PostServiceOK{}
}

// WriteResponse to the client
func (o *PostServiceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PostServiceUnauthorizedCode is the HTTP code returned for type PostServiceUnauthorized
const PostServiceUnauthorizedCode int = 401

/*PostServiceUnauthorized Unauthorized

swagger:response postServiceUnauthorized
*/
type PostServiceUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostServiceUnauthorized creates PostServiceUnauthorized with default headers values
func NewPostServiceUnauthorized() *PostServiceUnauthorized {

	return &PostServiceUnauthorized{}
}

// WithPayload adds the payload to the post service unauthorized response
func (o *PostServiceUnauthorized) WithPayload(payload *models.Error) *PostServiceUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post service unauthorized response
func (o *PostServiceUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostServiceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostServiceNotFoundCode is the HTTP code returned for type PostServiceNotFound
const PostServiceNotFoundCode int = 404

/*PostServiceNotFound Model create failed

swagger:response postServiceNotFound
*/
type PostServiceNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostServiceNotFound creates PostServiceNotFound with default headers values
func NewPostServiceNotFound() *PostServiceNotFound {

	return &PostServiceNotFound{}
}

// WithPayload adds the payload to the post service not found response
func (o *PostServiceNotFound) WithPayload(payload *models.Error) *PostServiceNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post service not found response
func (o *PostServiceNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostServiceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
