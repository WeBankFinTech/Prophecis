// Code generated by go-swagger; DO NOT EDIT.

package model_deploy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-mf/pkg/models"
)

// UpdateServiceOKCode is the HTTP code returned for type UpdateServiceOK
const UpdateServiceOKCode int = 200

/*UpdateServiceOK OK

swagger:response updateServiceOK
*/
type UpdateServiceOK struct {
}

// NewUpdateServiceOK creates UpdateServiceOK with default headers values
func NewUpdateServiceOK() *UpdateServiceOK {

	return &UpdateServiceOK{}
}

// WriteResponse to the client
func (o *UpdateServiceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// UpdateServiceUnauthorizedCode is the HTTP code returned for type UpdateServiceUnauthorized
const UpdateServiceUnauthorizedCode int = 401

/*UpdateServiceUnauthorized Unauthorized

swagger:response updateServiceUnauthorized
*/
type UpdateServiceUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateServiceUnauthorized creates UpdateServiceUnauthorized with default headers values
func NewUpdateServiceUnauthorized() *UpdateServiceUnauthorized {

	return &UpdateServiceUnauthorized{}
}

// WithPayload adds the payload to the update service unauthorized response
func (o *UpdateServiceUnauthorized) WithPayload(payload *models.Error) *UpdateServiceUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service unauthorized response
func (o *UpdateServiceUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceNotFoundCode is the HTTP code returned for type UpdateServiceNotFound
const UpdateServiceNotFoundCode int = 404

/*UpdateServiceNotFound Service put failed

swagger:response updateServiceNotFound
*/
type UpdateServiceNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateServiceNotFound creates UpdateServiceNotFound with default headers values
func NewUpdateServiceNotFound() *UpdateServiceNotFound {

	return &UpdateServiceNotFound{}
}

// WithPayload adds the payload to the update service not found response
func (o *UpdateServiceNotFound) WithPayload(payload *models.Error) *UpdateServiceNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service not found response
func (o *UpdateServiceNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
