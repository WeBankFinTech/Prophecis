// Code generated by go-swagger; DO NOT EDIT.

package report

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-mf/pkg/models"
)

// GetReportByModelNameAndModelVersionOKCode is the HTTP code returned for type GetReportByModelNameAndModelVersionOK
const GetReportByModelNameAndModelVersionOKCode int = 200

/*GetReportByModelNameAndModelVersionOK OK

swagger:response getReportByModelNameAndModelVersionOK
*/
type GetReportByModelNameAndModelVersionOK struct {

	/*
	  In: Body
	*/
	Payload *models.Report `json:"body,omitempty"`
}

// NewGetReportByModelNameAndModelVersionOK creates GetReportByModelNameAndModelVersionOK with default headers values
func NewGetReportByModelNameAndModelVersionOK() *GetReportByModelNameAndModelVersionOK {

	return &GetReportByModelNameAndModelVersionOK{}
}

// WithPayload adds the payload to the get report by model name and model version o k response
func (o *GetReportByModelNameAndModelVersionOK) WithPayload(payload *models.Report) *GetReportByModelNameAndModelVersionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get report by model name and model version o k response
func (o *GetReportByModelNameAndModelVersionOK) SetPayload(payload *models.Report) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReportByModelNameAndModelVersionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReportByModelNameAndModelVersionUnauthorizedCode is the HTTP code returned for type GetReportByModelNameAndModelVersionUnauthorized
const GetReportByModelNameAndModelVersionUnauthorizedCode int = 401

/*GetReportByModelNameAndModelVersionUnauthorized Unauthorized

swagger:response getReportByModelNameAndModelVersionUnauthorized
*/
type GetReportByModelNameAndModelVersionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetReportByModelNameAndModelVersionUnauthorized creates GetReportByModelNameAndModelVersionUnauthorized with default headers values
func NewGetReportByModelNameAndModelVersionUnauthorized() *GetReportByModelNameAndModelVersionUnauthorized {

	return &GetReportByModelNameAndModelVersionUnauthorized{}
}

// WithPayload adds the payload to the get report by model name and model version unauthorized response
func (o *GetReportByModelNameAndModelVersionUnauthorized) WithPayload(payload *models.Error) *GetReportByModelNameAndModelVersionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get report by model name and model version unauthorized response
func (o *GetReportByModelNameAndModelVersionUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReportByModelNameAndModelVersionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReportByModelNameAndModelVersionNotFoundCode is the HTTP code returned for type GetReportByModelNameAndModelVersionNotFound
const GetReportByModelNameAndModelVersionNotFoundCode int = 404

/*GetReportByModelNameAndModelVersionNotFound Report get fail

swagger:response getReportByModelNameAndModelVersionNotFound
*/
type GetReportByModelNameAndModelVersionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetReportByModelNameAndModelVersionNotFound creates GetReportByModelNameAndModelVersionNotFound with default headers values
func NewGetReportByModelNameAndModelVersionNotFound() *GetReportByModelNameAndModelVersionNotFound {

	return &GetReportByModelNameAndModelVersionNotFound{}
}

// WithPayload adds the payload to the get report by model name and model version not found response
func (o *GetReportByModelNameAndModelVersionNotFound) WithPayload(payload *models.Error) *GetReportByModelNameAndModelVersionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get report by model name and model version not found response
func (o *GetReportByModelNameAndModelVersionNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReportByModelNameAndModelVersionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
