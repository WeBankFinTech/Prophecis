// Code generated by go-swagger; DO NOT EDIT.

package report

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-mf/pkg/models"
)

// ListReportVersionPushEventsByReportVersionIDOKCode is the HTTP code returned for type ListReportVersionPushEventsByReportVersionIDOK
const ListReportVersionPushEventsByReportVersionIDOKCode int = 200

/*ListReportVersionPushEventsByReportVersionIDOK OK

swagger:response listReportVersionPushEventsByReportVersionIdOK
*/
type ListReportVersionPushEventsByReportVersionIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ReportVersionPushEventResp `json:"body,omitempty"`
}

// NewListReportVersionPushEventsByReportVersionIDOK creates ListReportVersionPushEventsByReportVersionIDOK with default headers values
func NewListReportVersionPushEventsByReportVersionIDOK() *ListReportVersionPushEventsByReportVersionIDOK {

	return &ListReportVersionPushEventsByReportVersionIDOK{}
}

// WithPayload adds the payload to the list report version push events by report version Id o k response
func (o *ListReportVersionPushEventsByReportVersionIDOK) WithPayload(payload *models.ReportVersionPushEventResp) *ListReportVersionPushEventsByReportVersionIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list report version push events by report version Id o k response
func (o *ListReportVersionPushEventsByReportVersionIDOK) SetPayload(payload *models.ReportVersionPushEventResp) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListReportVersionPushEventsByReportVersionIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListReportVersionPushEventsByReportVersionIDUnauthorizedCode is the HTTP code returned for type ListReportVersionPushEventsByReportVersionIDUnauthorized
const ListReportVersionPushEventsByReportVersionIDUnauthorizedCode int = 401

/*ListReportVersionPushEventsByReportVersionIDUnauthorized Unauthorized

swagger:response listReportVersionPushEventsByReportVersionIdUnauthorized
*/
type ListReportVersionPushEventsByReportVersionIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListReportVersionPushEventsByReportVersionIDUnauthorized creates ListReportVersionPushEventsByReportVersionIDUnauthorized with default headers values
func NewListReportVersionPushEventsByReportVersionIDUnauthorized() *ListReportVersionPushEventsByReportVersionIDUnauthorized {

	return &ListReportVersionPushEventsByReportVersionIDUnauthorized{}
}

// WithPayload adds the payload to the list report version push events by report version Id unauthorized response
func (o *ListReportVersionPushEventsByReportVersionIDUnauthorized) WithPayload(payload *models.Error) *ListReportVersionPushEventsByReportVersionIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list report version push events by report version Id unauthorized response
func (o *ListReportVersionPushEventsByReportVersionIDUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListReportVersionPushEventsByReportVersionIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListReportVersionPushEventsByReportVersionIDNotFoundCode is the HTTP code returned for type ListReportVersionPushEventsByReportVersionIDNotFound
const ListReportVersionPushEventsByReportVersionIDNotFoundCode int = 404

/*ListReportVersionPushEventsByReportVersionIDNotFound Report push fail

swagger:response listReportVersionPushEventsByReportVersionIdNotFound
*/
type ListReportVersionPushEventsByReportVersionIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListReportVersionPushEventsByReportVersionIDNotFound creates ListReportVersionPushEventsByReportVersionIDNotFound with default headers values
func NewListReportVersionPushEventsByReportVersionIDNotFound() *ListReportVersionPushEventsByReportVersionIDNotFound {

	return &ListReportVersionPushEventsByReportVersionIDNotFound{}
}

// WithPayload adds the payload to the list report version push events by report version Id not found response
func (o *ListReportVersionPushEventsByReportVersionIDNotFound) WithPayload(payload *models.Error) *ListReportVersionPushEventsByReportVersionIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list report version push events by report version Id not found response
func (o *ListReportVersionPushEventsByReportVersionIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListReportVersionPushEventsByReportVersionIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
