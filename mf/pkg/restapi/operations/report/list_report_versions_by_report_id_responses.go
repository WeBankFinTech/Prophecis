// Code generated by go-swagger; DO NOT EDIT.

package report

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-mf/pkg/models"
)

// ListReportVersionsByReportIDOKCode is the HTTP code returned for type ListReportVersionsByReportIDOK
const ListReportVersionsByReportIDOKCode int = 200

/*ListReportVersionsByReportIDOK OK

swagger:response listReportVersionsByReportIdOK
*/
type ListReportVersionsByReportIDOK struct {

	/*
	  In: Body
	*/
	Payload models.ReportVersions `json:"body,omitempty"`
}

// NewListReportVersionsByReportIDOK creates ListReportVersionsByReportIDOK with default headers values
func NewListReportVersionsByReportIDOK() *ListReportVersionsByReportIDOK {

	return &ListReportVersionsByReportIDOK{}
}

// WithPayload adds the payload to the list report versions by report Id o k response
func (o *ListReportVersionsByReportIDOK) WithPayload(payload models.ReportVersions) *ListReportVersionsByReportIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list report versions by report Id o k response
func (o *ListReportVersionsByReportIDOK) SetPayload(payload models.ReportVersions) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListReportVersionsByReportIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.ReportVersions{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListReportVersionsByReportIDUnauthorizedCode is the HTTP code returned for type ListReportVersionsByReportIDUnauthorized
const ListReportVersionsByReportIDUnauthorizedCode int = 401

/*ListReportVersionsByReportIDUnauthorized Unauthorized

swagger:response listReportVersionsByReportIdUnauthorized
*/
type ListReportVersionsByReportIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListReportVersionsByReportIDUnauthorized creates ListReportVersionsByReportIDUnauthorized with default headers values
func NewListReportVersionsByReportIDUnauthorized() *ListReportVersionsByReportIDUnauthorized {

	return &ListReportVersionsByReportIDUnauthorized{}
}

// WithPayload adds the payload to the list report versions by report Id unauthorized response
func (o *ListReportVersionsByReportIDUnauthorized) WithPayload(payload *models.Error) *ListReportVersionsByReportIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list report versions by report Id unauthorized response
func (o *ListReportVersionsByReportIDUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListReportVersionsByReportIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListReportVersionsByReportIDNotFoundCode is the HTTP code returned for type ListReportVersionsByReportIDNotFound
const ListReportVersionsByReportIDNotFoundCode int = 404

/*ListReportVersionsByReportIDNotFound The report cannot be created

swagger:response listReportVersionsByReportIdNotFound
*/
type ListReportVersionsByReportIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListReportVersionsByReportIDNotFound creates ListReportVersionsByReportIDNotFound with default headers values
func NewListReportVersionsByReportIDNotFound() *ListReportVersionsByReportIDNotFound {

	return &ListReportVersionsByReportIDNotFound{}
}

// WithPayload adds the payload to the list report versions by report Id not found response
func (o *ListReportVersionsByReportIDNotFound) WithPayload(payload *models.Error) *ListReportVersionsByReportIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list report versions by report Id not found response
func (o *ListReportVersionsByReportIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListReportVersionsByReportIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
