// Code generated by go-swagger; DO NOT EDIT.

package container

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListContainerHandlerFunc turns a function with the right signature into a list container handler
type ListContainerHandlerFunc func(ListContainerParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListContainerHandlerFunc) Handle(params ListContainerParams) middleware.Responder {
	return fn(params)
}

// ListContainerHandler interface for that can handle valid list container params
type ListContainerHandler interface {
	Handle(ListContainerParams) middleware.Responder
}

// NewListContainer creates a new http.Handler for the list container operation
func NewListContainer(ctx *middleware.Context, handler ListContainerHandler) *ListContainer {
	return &ListContainer{Context: ctx, Handler: handler}
}

/*ListContainer swagger:route GET /mf/v1/service/containers/{namespace}/{service_name} container listContainer

Get Container list by namespace and seldonDeployment

*/
type ListContainer struct {
	Context *middleware.Context
	Handler ListContainerHandler
}

func (o *ListContainer) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListContainerParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
