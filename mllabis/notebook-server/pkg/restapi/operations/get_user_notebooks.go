// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetUserNotebooksHandlerFunc turns a function with the right signature into a get user notebooks handler
type GetUserNotebooksHandlerFunc func(GetUserNotebooksParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUserNotebooksHandlerFunc) Handle(params GetUserNotebooksParams) middleware.Responder {
	return fn(params)
}

// GetUserNotebooksHandler interface for that can handle valid get user notebooks params
type GetUserNotebooksHandler interface {
	Handle(GetUserNotebooksParams) middleware.Responder
}

// NewGetUserNotebooks creates a new http.Handler for the get user notebooks operation
func NewGetUserNotebooks(ctx *middleware.Context, handler GetUserNotebooksHandler) *GetUserNotebooks {
	return &GetUserNotebooks{Context: ctx, Handler: handler}
}

/*GetUserNotebooks swagger:route GET /aide/v1/user/{user}/notebooks getUserNotebooks

Get the list of Notebooks belongs to a User

Get Notebooks.

*/
type GetUserNotebooks struct {
	Context *middleware.Context
	Handler GetUserNotebooksHandler
}

func (o *GetUserNotebooks) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetUserNotebooksParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
