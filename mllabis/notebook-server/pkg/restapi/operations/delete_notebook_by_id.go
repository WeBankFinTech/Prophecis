// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteNotebookByIDHandlerFunc turns a function with the right signature into a delete notebook by Id handler
type DeleteNotebookByIDHandlerFunc func(DeleteNotebookByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteNotebookByIDHandlerFunc) Handle(params DeleteNotebookByIDParams) middleware.Responder {
	return fn(params)
}

// DeleteNotebookByIDHandler interface for that can handle valid delete notebook by Id params
type DeleteNotebookByIDHandler interface {
	Handle(DeleteNotebookByIDParams) middleware.Responder
}

// NewDeleteNotebookByID creates a new http.Handler for the delete notebook by Id operation
func NewDeleteNotebookByID(ctx *middleware.Context, handler DeleteNotebookByIDHandler) *DeleteNotebookByID {
	return &DeleteNotebookByID{Context: ctx, Handler: handler}
}

/*DeleteNotebookByID swagger:route DELETE /aide/v1/notebooks/{id} deleteNotebookById

Delete a Notebook in the given id

Delete Notebook.

*/
type DeleteNotebookByID struct {
	Context *middleware.Context
	Handler DeleteNotebookByIDHandler
}

func (o *DeleteNotebookByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteNotebookByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
