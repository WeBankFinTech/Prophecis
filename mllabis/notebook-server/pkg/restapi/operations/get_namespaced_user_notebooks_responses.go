// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "webank/AIDE/notebook-server/pkg/models"
)

// GetNamespacedUserNotebooksOKCode is the HTTP code returned for type GetNamespacedUserNotebooksOK
const GetNamespacedUserNotebooksOKCode int = 200

/*GetNamespacedUserNotebooksOK OK

swagger:response getNamespacedUserNotebooksOK
*/
type GetNamespacedUserNotebooksOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetNotebooksResponse `json:"body,omitempty"`
}

// NewGetNamespacedUserNotebooksOK creates GetNamespacedUserNotebooksOK with default headers values
func NewGetNamespacedUserNotebooksOK() *GetNamespacedUserNotebooksOK {

	return &GetNamespacedUserNotebooksOK{}
}

// WithPayload adds the payload to the get namespaced user notebooks o k response
func (o *GetNamespacedUserNotebooksOK) WithPayload(payload *models.GetNotebooksResponse) *GetNamespacedUserNotebooksOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespaced user notebooks o k response
func (o *GetNamespacedUserNotebooksOK) SetPayload(payload *models.GetNotebooksResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespacedUserNotebooksOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNamespacedUserNotebooksUnauthorizedCode is the HTTP code returned for type GetNamespacedUserNotebooksUnauthorized
const GetNamespacedUserNotebooksUnauthorizedCode int = 401

/*GetNamespacedUserNotebooksUnauthorized Unauthorized

swagger:response getNamespacedUserNotebooksUnauthorized
*/
type GetNamespacedUserNotebooksUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNamespacedUserNotebooksUnauthorized creates GetNamespacedUserNotebooksUnauthorized with default headers values
func NewGetNamespacedUserNotebooksUnauthorized() *GetNamespacedUserNotebooksUnauthorized {

	return &GetNamespacedUserNotebooksUnauthorized{}
}

// WithPayload adds the payload to the get namespaced user notebooks unauthorized response
func (o *GetNamespacedUserNotebooksUnauthorized) WithPayload(payload *models.Error) *GetNamespacedUserNotebooksUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespaced user notebooks unauthorized response
func (o *GetNamespacedUserNotebooksUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespacedUserNotebooksUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNamespacedUserNotebooksNotFoundCode is the HTTP code returned for type GetNamespacedUserNotebooksNotFound
const GetNamespacedUserNotebooksNotFoundCode int = 404

/*GetNamespacedUserNotebooksNotFound The Notebook cannot be found

swagger:response getNamespacedUserNotebooksNotFound
*/
type GetNamespacedUserNotebooksNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNamespacedUserNotebooksNotFound creates GetNamespacedUserNotebooksNotFound with default headers values
func NewGetNamespacedUserNotebooksNotFound() *GetNamespacedUserNotebooksNotFound {

	return &GetNamespacedUserNotebooksNotFound{}
}

// WithPayload adds the payload to the get namespaced user notebooks not found response
func (o *GetNamespacedUserNotebooksNotFound) WithPayload(payload *models.Error) *GetNamespacedUserNotebooksNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespaced user notebooks not found response
func (o *GetNamespacedUserNotebooksNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespacedUserNotebooksNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
