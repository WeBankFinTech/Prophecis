// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// ContainerStatusInfo container status info
// swagger:model ContainerStatusInfo
type ContainerStatusInfo struct {

	// container id
	ContainerID string `json:"containerId,omitempty"`

	// this container status type
	ContainerStatusType string `json:"containerStatusType,omitempty"`

	// container name
	ContainerName string `json:"container_name,omitempty"`

	// fineshed time
	FineshedTime string `json:"fineshedTime,omitempty"`

	// last container state type
	LastContainerStateType string `json:"lastContainerStateType,omitempty"`

	// last finished time
	LastFinishedTime string `json:"lastFinishedTime,omitempty"`

	// last message
	LastMessage string `json:"lastMessage,omitempty"`

	// last started time
	LastStartedTime string `json:"lastStartedTime,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// container namespace
	Namespace string `json:"namespace,omitempty"`

	// started time
	StartedTime string `json:"startedTime,omitempty"`
}

// Validate validates this container status info
func (m *ContainerStatusInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ContainerStatusInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContainerStatusInfo) UnmarshalBinary(b []byte) error {
	var res ContainerStatusInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
