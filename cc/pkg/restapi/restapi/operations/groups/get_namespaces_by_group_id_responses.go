// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-controlcenter-go/pkg/models"
)

// GetNamespacesByGroupIDOKCode is the HTTP code returned for type GetNamespacesByGroupIDOK
const GetNamespacesByGroupIDOKCode int = 200

/*GetNamespacesByGroupIDOK Detailed GroupNamespace and GroupNamespace information.

swagger:response getNamespacesByGroupIdOK
*/
type GetNamespacesByGroupIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.GroupNamespace `json:"body,omitempty"`
}

// NewGetNamespacesByGroupIDOK creates GetNamespacesByGroupIDOK with default headers values
func NewGetNamespacesByGroupIDOK() *GetNamespacesByGroupIDOK {

	return &GetNamespacesByGroupIDOK{}
}

// WithPayload adds the payload to the get namespaces by group Id o k response
func (o *GetNamespacesByGroupIDOK) WithPayload(payload *models.GroupNamespace) *GetNamespacesByGroupIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespaces by group Id o k response
func (o *GetNamespacesByGroupIDOK) SetPayload(payload *models.GroupNamespace) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespacesByGroupIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNamespacesByGroupIDUnauthorizedCode is the HTTP code returned for type GetNamespacesByGroupIDUnauthorized
const GetNamespacesByGroupIDUnauthorizedCode int = 401

/*GetNamespacesByGroupIDUnauthorized Unauthorized

swagger:response getNamespacesByGroupIdUnauthorized
*/
type GetNamespacesByGroupIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNamespacesByGroupIDUnauthorized creates GetNamespacesByGroupIDUnauthorized with default headers values
func NewGetNamespacesByGroupIDUnauthorized() *GetNamespacesByGroupIDUnauthorized {

	return &GetNamespacesByGroupIDUnauthorized{}
}

// WithPayload adds the payload to the get namespaces by group Id unauthorized response
func (o *GetNamespacesByGroupIDUnauthorized) WithPayload(payload *models.Error) *GetNamespacesByGroupIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespaces by group Id unauthorized response
func (o *GetNamespacesByGroupIDUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespacesByGroupIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNamespacesByGroupIDNotFoundCode is the HTTP code returned for type GetNamespacesByGroupIDNotFound
const GetNamespacesByGroupIDNotFoundCode int = 404

/*GetNamespacesByGroupIDNotFound url to add GroupNamespace not found.

swagger:response getNamespacesByGroupIdNotFound
*/
type GetNamespacesByGroupIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNamespacesByGroupIDNotFound creates GetNamespacesByGroupIDNotFound with default headers values
func NewGetNamespacesByGroupIDNotFound() *GetNamespacesByGroupIDNotFound {

	return &GetNamespacesByGroupIDNotFound{}
}

// WithPayload adds the payload to the get namespaces by group Id not found response
func (o *GetNamespacesByGroupIDNotFound) WithPayload(payload *models.Error) *GetNamespacesByGroupIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespaces by group Id not found response
func (o *GetNamespacesByGroupIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespacesByGroupIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
