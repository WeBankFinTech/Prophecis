// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-controlcenter-go/pkg/models"
)

// GetNamespaceByGroupIDAndNamespaceOKCode is the HTTP code returned for type GetNamespaceByGroupIDAndNamespaceOK
const GetNamespaceByGroupIDAndNamespaceOKCode int = 200

/*GetNamespaceByGroupIDAndNamespaceOK Detailed GroupNamespace and GroupNamespace information.

swagger:response getNamespaceByGroupIdAndNamespaceOK
*/
type GetNamespaceByGroupIDAndNamespaceOK struct {

	/*
	  In: Body
	*/
	Payload *models.GroupNamespace `json:"body,omitempty"`
}

// NewGetNamespaceByGroupIDAndNamespaceOK creates GetNamespaceByGroupIDAndNamespaceOK with default headers values
func NewGetNamespaceByGroupIDAndNamespaceOK() *GetNamespaceByGroupIDAndNamespaceOK {

	return &GetNamespaceByGroupIDAndNamespaceOK{}
}

// WithPayload adds the payload to the get namespace by group Id and namespace o k response
func (o *GetNamespaceByGroupIDAndNamespaceOK) WithPayload(payload *models.GroupNamespace) *GetNamespaceByGroupIDAndNamespaceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespace by group Id and namespace o k response
func (o *GetNamespaceByGroupIDAndNamespaceOK) SetPayload(payload *models.GroupNamespace) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespaceByGroupIDAndNamespaceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNamespaceByGroupIDAndNamespaceUnauthorizedCode is the HTTP code returned for type GetNamespaceByGroupIDAndNamespaceUnauthorized
const GetNamespaceByGroupIDAndNamespaceUnauthorizedCode int = 401

/*GetNamespaceByGroupIDAndNamespaceUnauthorized Unauthorized

swagger:response getNamespaceByGroupIdAndNamespaceUnauthorized
*/
type GetNamespaceByGroupIDAndNamespaceUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNamespaceByGroupIDAndNamespaceUnauthorized creates GetNamespaceByGroupIDAndNamespaceUnauthorized with default headers values
func NewGetNamespaceByGroupIDAndNamespaceUnauthorized() *GetNamespaceByGroupIDAndNamespaceUnauthorized {

	return &GetNamespaceByGroupIDAndNamespaceUnauthorized{}
}

// WithPayload adds the payload to the get namespace by group Id and namespace unauthorized response
func (o *GetNamespaceByGroupIDAndNamespaceUnauthorized) WithPayload(payload *models.Error) *GetNamespaceByGroupIDAndNamespaceUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespace by group Id and namespace unauthorized response
func (o *GetNamespaceByGroupIDAndNamespaceUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespaceByGroupIDAndNamespaceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNamespaceByGroupIDAndNamespaceNotFoundCode is the HTTP code returned for type GetNamespaceByGroupIDAndNamespaceNotFound
const GetNamespaceByGroupIDAndNamespaceNotFoundCode int = 404

/*GetNamespaceByGroupIDAndNamespaceNotFound url to add GroupNamespace not found.

swagger:response getNamespaceByGroupIdAndNamespaceNotFound
*/
type GetNamespaceByGroupIDAndNamespaceNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetNamespaceByGroupIDAndNamespaceNotFound creates GetNamespaceByGroupIDAndNamespaceNotFound with default headers values
func NewGetNamespaceByGroupIDAndNamespaceNotFound() *GetNamespaceByGroupIDAndNamespaceNotFound {

	return &GetNamespaceByGroupIDAndNamespaceNotFound{}
}

// WithPayload adds the payload to the get namespace by group Id and namespace not found response
func (o *GetNamespaceByGroupIDAndNamespaceNotFound) WithPayload(payload *models.Error) *GetNamespaceByGroupIDAndNamespaceNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get namespace by group Id and namespace not found response
func (o *GetNamespaceByGroupIDAndNamespaceNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNamespaceByGroupIDAndNamespaceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
