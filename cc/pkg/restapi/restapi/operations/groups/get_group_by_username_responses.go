// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-controlcenter-go/pkg/models"
)

// GetGroupByUsernameOKCode is the HTTP code returned for type GetGroupByUsernameOK
const GetGroupByUsernameOKCode int = 200

/*GetGroupByUsernameOK Detailed Group and Group information.

swagger:response getGroupByUsernameOK
*/
type GetGroupByUsernameOK struct {

	/*
	  In: Body
	*/
	Payload *models.Group `json:"body,omitempty"`
}

// NewGetGroupByUsernameOK creates GetGroupByUsernameOK with default headers values
func NewGetGroupByUsernameOK() *GetGroupByUsernameOK {

	return &GetGroupByUsernameOK{}
}

// WithPayload adds the payload to the get group by username o k response
func (o *GetGroupByUsernameOK) WithPayload(payload *models.Group) *GetGroupByUsernameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group by username o k response
func (o *GetGroupByUsernameOK) SetPayload(payload *models.Group) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupByUsernameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupByUsernameUnauthorizedCode is the HTTP code returned for type GetGroupByUsernameUnauthorized
const GetGroupByUsernameUnauthorizedCode int = 401

/*GetGroupByUsernameUnauthorized Unauthorized

swagger:response getGroupByUsernameUnauthorized
*/
type GetGroupByUsernameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetGroupByUsernameUnauthorized creates GetGroupByUsernameUnauthorized with default headers values
func NewGetGroupByUsernameUnauthorized() *GetGroupByUsernameUnauthorized {

	return &GetGroupByUsernameUnauthorized{}
}

// WithPayload adds the payload to the get group by username unauthorized response
func (o *GetGroupByUsernameUnauthorized) WithPayload(payload *models.Error) *GetGroupByUsernameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group by username unauthorized response
func (o *GetGroupByUsernameUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupByUsernameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGroupByUsernameNotFoundCode is the HTTP code returned for type GetGroupByUsernameNotFound
const GetGroupByUsernameNotFoundCode int = 404

/*GetGroupByUsernameNotFound Model with the given ID not found.

swagger:response getGroupByUsernameNotFound
*/
type GetGroupByUsernameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetGroupByUsernameNotFound creates GetGroupByUsernameNotFound with default headers values
func NewGetGroupByUsernameNotFound() *GetGroupByUsernameNotFound {

	return &GetGroupByUsernameNotFound{}
}

// WithPayload adds the payload to the get group by username not found response
func (o *GetGroupByUsernameNotFound) WithPayload(payload *models.Error) *GetGroupByUsernameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get group by username not found response
func (o *GetGroupByUsernameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGroupByUsernameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
