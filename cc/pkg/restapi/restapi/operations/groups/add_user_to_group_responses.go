// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-controlcenter-go/pkg/models"
)

// AddUserToGroupOKCode is the HTTP code returned for type AddUserToGroupOK
const AddUserToGroupOKCode int = 200

/*AddUserToGroupOK Detailed group and group information.

swagger:response addUserToGroupOK
*/
type AddUserToGroupOK struct {

	/*
	  In: Body
	*/
	Payload *models.UserGroup `json:"body,omitempty"`
}

// NewAddUserToGroupOK creates AddUserToGroupOK with default headers values
func NewAddUserToGroupOK() *AddUserToGroupOK {

	return &AddUserToGroupOK{}
}

// WithPayload adds the payload to the add user to group o k response
func (o *AddUserToGroupOK) WithPayload(payload *models.UserGroup) *AddUserToGroupOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user to group o k response
func (o *AddUserToGroupOK) SetPayload(payload *models.UserGroup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserToGroupOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddUserToGroupUnauthorizedCode is the HTTP code returned for type AddUserToGroupUnauthorized
const AddUserToGroupUnauthorizedCode int = 401

/*AddUserToGroupUnauthorized Unauthorized

swagger:response addUserToGroupUnauthorized
*/
type AddUserToGroupUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddUserToGroupUnauthorized creates AddUserToGroupUnauthorized with default headers values
func NewAddUserToGroupUnauthorized() *AddUserToGroupUnauthorized {

	return &AddUserToGroupUnauthorized{}
}

// WithPayload adds the payload to the add user to group unauthorized response
func (o *AddUserToGroupUnauthorized) WithPayload(payload *models.Error) *AddUserToGroupUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user to group unauthorized response
func (o *AddUserToGroupUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserToGroupUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddUserToGroupNotFoundCode is the HTTP code returned for type AddUserToGroupNotFound
const AddUserToGroupNotFoundCode int = 404

/*AddUserToGroupNotFound url to get allGroups not found.

swagger:response addUserToGroupNotFound
*/
type AddUserToGroupNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddUserToGroupNotFound creates AddUserToGroupNotFound with default headers values
func NewAddUserToGroupNotFound() *AddUserToGroupNotFound {

	return &AddUserToGroupNotFound{}
}

// WithPayload adds the payload to the add user to group not found response
func (o *AddUserToGroupNotFound) WithPayload(payload *models.Error) *AddUserToGroupNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user to group not found response
func (o *AddUserToGroupNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserToGroupNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
