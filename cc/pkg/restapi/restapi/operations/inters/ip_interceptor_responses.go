// Code generated by go-swagger; DO NOT EDIT.

package inters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-controlcenter-go/pkg/models"
)

// IPInterceptorOKCode is the HTTP code returned for type IPInterceptorOK
const IPInterceptorOKCode int = 200

/*IPInterceptorOK user interceptor.

swagger:response ipInterceptorOK
*/
type IPInterceptorOK struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewIPInterceptorOK creates IPInterceptorOK with default headers values
func NewIPInterceptorOK() *IPInterceptorOK {

	return &IPInterceptorOK{}
}

// WithPayload adds the payload to the ip interceptor o k response
func (o *IPInterceptorOK) WithPayload(payload *models.Result) *IPInterceptorOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the ip interceptor o k response
func (o *IPInterceptorOK) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IPInterceptorOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// IPInterceptorUnauthorizedCode is the HTTP code returned for type IPInterceptorUnauthorized
const IPInterceptorUnauthorizedCode int = 401

/*IPInterceptorUnauthorized Unauthorized

swagger:response ipInterceptorUnauthorized
*/
type IPInterceptorUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewIPInterceptorUnauthorized creates IPInterceptorUnauthorized with default headers values
func NewIPInterceptorUnauthorized() *IPInterceptorUnauthorized {

	return &IPInterceptorUnauthorized{}
}

// WithPayload adds the payload to the ip interceptor unauthorized response
func (o *IPInterceptorUnauthorized) WithPayload(payload *models.Error) *IPInterceptorUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the ip interceptor unauthorized response
func (o *IPInterceptorUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IPInterceptorUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// IPInterceptorNotFoundCode is the HTTP code returned for type IPInterceptorNotFound
const IPInterceptorNotFoundCode int = 404

/*IPInterceptorNotFound url to add namespace not found.

swagger:response ipInterceptorNotFound
*/
type IPInterceptorNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewIPInterceptorNotFound creates IPInterceptorNotFound with default headers values
func NewIPInterceptorNotFound() *IPInterceptorNotFound {

	return &IPInterceptorNotFound{}
}

// WithPayload adds the payload to the ip interceptor not found response
func (o *IPInterceptorNotFound) WithPayload(payload *models.Error) *IPInterceptorNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the ip interceptor not found response
func (o *IPInterceptorNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IPInterceptorNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
