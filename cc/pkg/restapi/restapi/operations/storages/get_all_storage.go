// Code generated by go-swagger; DO NOT EDIT.

package storages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetAllStorageHandlerFunc turns a function with the right signature into a get all storage handler
type GetAllStorageHandlerFunc func(GetAllStorageParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAllStorageHandlerFunc) Handle(params GetAllStorageParams) middleware.Responder {
	return fn(params)
}

// GetAllStorageHandler interface for that can handle valid get all storage params
type GetAllStorageHandler interface {
	Handle(GetAllStorageParams) middleware.Responder
}

// NewGetAllStorage creates a new http.Handler for the get all storage operation
func NewGetAllStorage(ctx *middleware.Context, handler GetAllStorageHandler) *GetAllStorage {
	return &GetAllStorage{Context: ctx, Handler: handler}
}

/*GetAllStorage swagger:route GET /cc/v1/storages Storages getAllStorage

Returns a list of Storages.

Optional extended description in Markdown.

*/
type GetAllStorage struct {
	Context *middleware.Context
	Handler GetAllStorageHandler
}

func (o *GetAllStorage) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAllStorageParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
