// Code generated by go-swagger; DO NOT EDIT.

package namespaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-controlcenter-go/pkg/models"
)

// AddNamespaceOKCode is the HTTP code returned for type AddNamespaceOK
const AddNamespaceOKCode int = 200

/*AddNamespaceOK Detailed namespace and namespace information.

swagger:response addNamespaceOK
*/
type AddNamespaceOK struct {

	/*
	  In: Body
	*/
	Payload *models.NamespaceRequest `json:"body,omitempty"`
}

// NewAddNamespaceOK creates AddNamespaceOK with default headers values
func NewAddNamespaceOK() *AddNamespaceOK {

	return &AddNamespaceOK{}
}

// WithPayload adds the payload to the add namespace o k response
func (o *AddNamespaceOK) WithPayload(payload *models.NamespaceRequest) *AddNamespaceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add namespace o k response
func (o *AddNamespaceOK) SetPayload(payload *models.NamespaceRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddNamespaceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddNamespaceUnauthorizedCode is the HTTP code returned for type AddNamespaceUnauthorized
const AddNamespaceUnauthorizedCode int = 401

/*AddNamespaceUnauthorized Unauthorized

swagger:response addNamespaceUnauthorized
*/
type AddNamespaceUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddNamespaceUnauthorized creates AddNamespaceUnauthorized with default headers values
func NewAddNamespaceUnauthorized() *AddNamespaceUnauthorized {

	return &AddNamespaceUnauthorized{}
}

// WithPayload adds the payload to the add namespace unauthorized response
func (o *AddNamespaceUnauthorized) WithPayload(payload *models.Error) *AddNamespaceUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add namespace unauthorized response
func (o *AddNamespaceUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddNamespaceUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddNamespaceNotFoundCode is the HTTP code returned for type AddNamespaceNotFound
const AddNamespaceNotFoundCode int = 404

/*AddNamespaceNotFound url to add namespace not found.

swagger:response addNamespaceNotFound
*/
type AddNamespaceNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddNamespaceNotFound creates AddNamespaceNotFound with default headers values
func NewAddNamespaceNotFound() *AddNamespaceNotFound {

	return &AddNamespaceNotFound{}
}

// WithPayload adds the payload to the add namespace not found response
func (o *AddNamespaceNotFound) WithPayload(payload *models.Error) *AddNamespaceNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add namespace not found response
func (o *AddNamespaceNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddNamespaceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
