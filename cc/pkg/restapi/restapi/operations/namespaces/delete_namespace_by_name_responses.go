// Code generated by go-swagger; DO NOT EDIT.

package namespaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-controlcenter-go/pkg/models"
)

// DeleteNamespaceByNameOKCode is the HTTP code returned for type DeleteNamespaceByNameOK
const DeleteNamespaceByNameOKCode int = 200

/*DeleteNamespaceByNameOK Detailed namespace and namespace information.

swagger:response deleteNamespaceByNameOK
*/
type DeleteNamespaceByNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.NamespaceRequest `json:"body,omitempty"`
}

// NewDeleteNamespaceByNameOK creates DeleteNamespaceByNameOK with default headers values
func NewDeleteNamespaceByNameOK() *DeleteNamespaceByNameOK {

	return &DeleteNamespaceByNameOK{}
}

// WithPayload adds the payload to the delete namespace by name o k response
func (o *DeleteNamespaceByNameOK) WithPayload(payload *models.NamespaceRequest) *DeleteNamespaceByNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete namespace by name o k response
func (o *DeleteNamespaceByNameOK) SetPayload(payload *models.NamespaceRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNamespaceByNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteNamespaceByNameUnauthorizedCode is the HTTP code returned for type DeleteNamespaceByNameUnauthorized
const DeleteNamespaceByNameUnauthorizedCode int = 401

/*DeleteNamespaceByNameUnauthorized Unauthorized

swagger:response deleteNamespaceByNameUnauthorized
*/
type DeleteNamespaceByNameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteNamespaceByNameUnauthorized creates DeleteNamespaceByNameUnauthorized with default headers values
func NewDeleteNamespaceByNameUnauthorized() *DeleteNamespaceByNameUnauthorized {

	return &DeleteNamespaceByNameUnauthorized{}
}

// WithPayload adds the payload to the delete namespace by name unauthorized response
func (o *DeleteNamespaceByNameUnauthorized) WithPayload(payload *models.Error) *DeleteNamespaceByNameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete namespace by name unauthorized response
func (o *DeleteNamespaceByNameUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNamespaceByNameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteNamespaceByNameNotFoundCode is the HTTP code returned for type DeleteNamespaceByNameNotFound
const DeleteNamespaceByNameNotFoundCode int = 404

/*DeleteNamespaceByNameNotFound Model with the given ID not found.

swagger:response deleteNamespaceByNameNotFound
*/
type DeleteNamespaceByNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteNamespaceByNameNotFound creates DeleteNamespaceByNameNotFound with default headers values
func NewDeleteNamespaceByNameNotFound() *DeleteNamespaceByNameNotFound {

	return &DeleteNamespaceByNameNotFound{}
}

// WithPayload adds the payload to the delete namespace by name not found response
func (o *DeleteNamespaceByNameNotFound) WithPayload(payload *models.Error) *DeleteNamespaceByNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete namespace by name not found response
func (o *DeleteNamespaceByNameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNamespaceByNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
