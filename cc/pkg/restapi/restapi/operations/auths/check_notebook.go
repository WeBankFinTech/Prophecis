// Code generated by go-swagger; DO NOT EDIT.

package auths

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CheckNotebookHandlerFunc turns a function with the right signature into a check notebook handler
type CheckNotebookHandlerFunc func(CheckNotebookParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CheckNotebookHandlerFunc) Handle(params CheckNotebookParams) middleware.Responder {
	return fn(params)
}

// CheckNotebookHandler interface for that can handle valid check notebook params
type CheckNotebookHandler interface {
	Handle(CheckNotebookParams) middleware.Responder
}

// NewCheckNotebook creates a new http.Handler for the check notebook operation
func NewCheckNotebook(ctx *middleware.Context, handler CheckNotebookHandler) *CheckNotebook {
	return &CheckNotebook{Context: ctx, Handler: handler}
}

/*CheckNotebook swagger:route GET /cc/v1/auth/access/{namespace}/checknotebook Auths checkNotebook

Check notebook

Check notebook

*/
type CheckNotebook struct {
	Context *middleware.Context
	Handler CheckNotebookHandler
}

func (o *CheckNotebook) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCheckNotebookParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
