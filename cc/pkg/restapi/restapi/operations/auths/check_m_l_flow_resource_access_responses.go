// Code generated by go-swagger; DO NOT EDIT.

package auths

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-controlcenter-go/pkg/models"
)

// CheckMLFlowResourceAccessOKCode is the HTTP code returned for type CheckMLFlowResourceAccessOK
const CheckMLFlowResourceAccessOKCode int = 200

/*CheckMLFlowResourceAccessOK auth by namespace and notebook.

swagger:response checkMLFlowResourceAccessOK
*/
type CheckMLFlowResourceAccessOK struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewCheckMLFlowResourceAccessOK creates CheckMLFlowResourceAccessOK with default headers values
func NewCheckMLFlowResourceAccessOK() *CheckMLFlowResourceAccessOK {

	return &CheckMLFlowResourceAccessOK{}
}

// WithPayload adds the payload to the check m l flow resource access o k response
func (o *CheckMLFlowResourceAccessOK) WithPayload(payload *models.Result) *CheckMLFlowResourceAccessOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the check m l flow resource access o k response
func (o *CheckMLFlowResourceAccessOK) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckMLFlowResourceAccessOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CheckMLFlowResourceAccessUnauthorizedCode is the HTTP code returned for type CheckMLFlowResourceAccessUnauthorized
const CheckMLFlowResourceAccessUnauthorizedCode int = 401

/*CheckMLFlowResourceAccessUnauthorized Unauthorized

swagger:response checkMLFlowResourceAccessUnauthorized
*/
type CheckMLFlowResourceAccessUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCheckMLFlowResourceAccessUnauthorized creates CheckMLFlowResourceAccessUnauthorized with default headers values
func NewCheckMLFlowResourceAccessUnauthorized() *CheckMLFlowResourceAccessUnauthorized {

	return &CheckMLFlowResourceAccessUnauthorized{}
}

// WithPayload adds the payload to the check m l flow resource access unauthorized response
func (o *CheckMLFlowResourceAccessUnauthorized) WithPayload(payload *models.Error) *CheckMLFlowResourceAccessUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the check m l flow resource access unauthorized response
func (o *CheckMLFlowResourceAccessUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckMLFlowResourceAccessUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CheckMLFlowResourceAccessForbiddenCode is the HTTP code returned for type CheckMLFlowResourceAccessForbidden
const CheckMLFlowResourceAccessForbiddenCode int = 403

/*CheckMLFlowResourceAccessForbidden Forbiddent

swagger:response checkMLFlowResourceAccessForbidden
*/
type CheckMLFlowResourceAccessForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCheckMLFlowResourceAccessForbidden creates CheckMLFlowResourceAccessForbidden with default headers values
func NewCheckMLFlowResourceAccessForbidden() *CheckMLFlowResourceAccessForbidden {

	return &CheckMLFlowResourceAccessForbidden{}
}

// WithPayload adds the payload to the check m l flow resource access forbidden response
func (o *CheckMLFlowResourceAccessForbidden) WithPayload(payload *models.Error) *CheckMLFlowResourceAccessForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the check m l flow resource access forbidden response
func (o *CheckMLFlowResourceAccessForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckMLFlowResourceAccessForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CheckMLFlowResourceAccessNotFoundCode is the HTTP code returned for type CheckMLFlowResourceAccessNotFound
const CheckMLFlowResourceAccessNotFoundCode int = 404

/*CheckMLFlowResourceAccessNotFound url to add namespace not found.

swagger:response checkMLFlowResourceAccessNotFound
*/
type CheckMLFlowResourceAccessNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCheckMLFlowResourceAccessNotFound creates CheckMLFlowResourceAccessNotFound with default headers values
func NewCheckMLFlowResourceAccessNotFound() *CheckMLFlowResourceAccessNotFound {

	return &CheckMLFlowResourceAccessNotFound{}
}

// WithPayload adds the payload to the check m l flow resource access not found response
func (o *CheckMLFlowResourceAccessNotFound) WithPayload(payload *models.Error) *CheckMLFlowResourceAccessNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the check m l flow resource access not found response
func (o *CheckMLFlowResourceAccessNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckMLFlowResourceAccessNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
