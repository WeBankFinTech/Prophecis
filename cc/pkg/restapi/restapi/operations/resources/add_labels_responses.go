// Code generated by go-swagger; DO NOT EDIT.

package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mlss-controlcenter-go/pkg/models"
)

// AddLabelsOKCode is the HTTP code returned for type AddLabelsOK
const AddLabelsOKCode int = 200

/*AddLabelsOK Detailed namespace and namespace information.

swagger:response addLabelsOK
*/
type AddLabelsOK struct {

	/*
	  In: Body
	*/
	Payload *models.LabelsResponse `json:"body,omitempty"`
}

// NewAddLabelsOK creates AddLabelsOK with default headers values
func NewAddLabelsOK() *AddLabelsOK {

	return &AddLabelsOK{}
}

// WithPayload adds the payload to the add labels o k response
func (o *AddLabelsOK) WithPayload(payload *models.LabelsResponse) *AddLabelsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add labels o k response
func (o *AddLabelsOK) SetPayload(payload *models.LabelsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddLabelsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddLabelsUnauthorizedCode is the HTTP code returned for type AddLabelsUnauthorized
const AddLabelsUnauthorizedCode int = 401

/*AddLabelsUnauthorized Unauthorized

swagger:response addLabelsUnauthorized
*/
type AddLabelsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddLabelsUnauthorized creates AddLabelsUnauthorized with default headers values
func NewAddLabelsUnauthorized() *AddLabelsUnauthorized {

	return &AddLabelsUnauthorized{}
}

// WithPayload adds the payload to the add labels unauthorized response
func (o *AddLabelsUnauthorized) WithPayload(payload *models.Error) *AddLabelsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add labels unauthorized response
func (o *AddLabelsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddLabelsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddLabelsNotFoundCode is the HTTP code returned for type AddLabelsNotFound
const AddLabelsNotFoundCode int = 404

/*AddLabelsNotFound url to add namespace not found.

swagger:response addLabelsNotFound
*/
type AddLabelsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddLabelsNotFound creates AddLabelsNotFound with default headers values
func NewAddLabelsNotFound() *AddLabelsNotFound {

	return &AddLabelsNotFound{}
}

// WithPayload adds the payload to the add labels not found response
func (o *AddLabelsNotFound) WithPayload(payload *models.Error) *AddLabelsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add labels not found response
func (o *AddLabelsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddLabelsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
