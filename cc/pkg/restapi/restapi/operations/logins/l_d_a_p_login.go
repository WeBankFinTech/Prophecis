// Code generated by go-swagger; DO NOT EDIT.

package logins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// LDAPLoginHandlerFunc turns a function with the right signature into a l d a p login handler
type LDAPLoginHandlerFunc func(LDAPLoginParams) middleware.Responder

// Handle executing the request and returning a response
func (fn LDAPLoginHandlerFunc) Handle(params LDAPLoginParams) middleware.Responder {
	return fn(params)
}

// LDAPLoginHandler interface for that can handle valid l d a p login params
type LDAPLoginHandler interface {
	Handle(LDAPLoginParams) middleware.Responder
}

// NewLDAPLogin creates a new http.Handler for the l d a p login operation
func NewLDAPLogin(ctx *middleware.Context, handler LDAPLoginHandler) *LDAPLogin {
	return &LDAPLogin{Context: ctx, Handler: handler}
}

/*LDAPLogin swagger:route POST /cc/v1/LDAPlogin Logins lDAPLogin

login .

Optional extended description in Markdown.

*/
type LDAPLogin struct {
	Context *middleware.Context
	Handler LDAPLoginHandler
}

func (o *LDAPLogin) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewLDAPLoginParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
