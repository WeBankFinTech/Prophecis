apiVersion: v1
kind: ConfigMap
metadata:
  name: bdap-ui-config
  namespace: {{.Values.namespace}}
data:
  nginx-conf: |
    worker_processes  1;
    events {
        worker_connections  1024;
    }
    error_log  /var/log/nginx/error.log warn;
    http {
        include       mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" '
                          '"cookie: {{.Values.ui.notebook.mlssToken}}{{.Values.ui.notebook.env}}{{.Values.ui.notebook.clusterName.bdap}}" "$cookie_{{.Values.ui.notebook.mlssToken}}{{.Values.ui.notebook.env}}{{.Values.ui.notebook.clusterName.bdap}}" ';
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        keepalive_timeout  1800;
        include /etc/nginx/conf.d/*.conf;
        server_tokens off;
    }  

  ui-conf: |
    upstream cc {
        server {{.Values.gateway.address}}:{{.Values.gateway.port}};
    }
    upstream aide {
        server {{.Values.gateway.address}}:{{.Values.gateway.port}};
    }
    upstream mf {
        server {{.Values.gateway.address}}:{{.Values.gateway.port}};
    }
    upstream di {
        server {{.Values.gateway.address}}:{{.Values.gateway.port}};
    }
    #upstream grafana {
        #server grafana.kube-system.svc.cluster.local:3000;
        #server 127.0.0.1:30809;
    #}
    #upstream tds {
        #server di-storer-rest:8080;
        #server 127.0.0.1:30802;
    #}
    server {
      listen 80;
      # should be real domain
      server_name mlss-aide-gw.webank.oa.com;
      #resolver kube-dns.kube-system.svc.cluster.local valid=60s;
      underscores_in_headers on;
      client_max_body_size 0;
      chunked_transfer_encoding on;
      add_header X-Frame-Options "ALLOW-FROM http://127.0.0.1:8080,http://127.0.0.1:8888";


      location = /auth {
        internal;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header MLSS-RealIP $mlss_realip;
        #proxy_set_header MLSS-Token $mlss_token;
        proxy_set_header MLSS-Token $cookie_Prophecis;
        proxy_pass $auth_request_uri;
      }
      location /notebook {
        resolver kube-dns.kube-system.svc.cluster.local valid=60s;

        #set $mlss_token $http_mlss_token;
        set $mlss_token $cookie_{{.Values.ui.notebook.mlssToken}}{{.Values.ui.notebook.env}}{{.Values.ui.notebook.clusterName.bdap}};
        if ($request_uri ~* (notebook\/([\w-]*)) ) {
          set $mlss_namespace $2;
        }
        if ($request_uri ~* (notebook\/([\w-]*\/([\w-]*))) ) {
          set $mlss_notebook $3;
        }
        set $mlss_realip $remote_addr;
        # set $auth_request_uri "http://cc/api/auth/access/namespaces/$mlss_namespace/notebooks/$mlss_notebook";
        set $auth_request_uri "http://cc/cc/v1/auth/access/namespaces/$mlss_namespace/notebooks/$mlss_notebook";
        auth_request /auth;
        # get header "notebook address" from auth request
        proxy_http_version 1.1;
        proxy_read_timeout 1800s;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        # forward to notebook service
        proxy_pass http://$mlss_notebook.$mlss_namespace.svc.cluster.local:80$request_uri;
      }
      #location /notebookdebug {
      #  resolver kube-dns.kube-system.svc.cluster.local valid=60s;
      #  proxy_pass http://tb-bug.default.svc.cluster.local:8888;
      #}
      location /userAuth {
        internal;
        proxy_pass_request_body off;
        proxy_set_header MLSS-Token $cookie_{{.Values.ui.notebook.mlssToken}}{{.Values.ui.notebook.env}}{{.Values.ui.notebook.clusterName.bdap}};
        proxy_set_header Content-Length "";
        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header MLSS-Userid $http_mlss_userid;
        proxy_set_header MLSS-Auth-Type $http_mlss_auth_type;
        proxy_set_header MLSS-Ticket $http_mlss_ticket;
        proxy_set_header MLSS-UIURL $http_mlss_uiurl;
        proxy_set_header MLSS-Passwd $http_mlss_passwd;
        proxy_set_header MLSS-APPID $http_mlss_appid;
        proxy_set_header MLSS-APPTimestamp $http_mlss_apptimestamp;
        proxy_set_header MLSS-APPSignature $http_mlss_appsignature;
        #proxy_set_header MLSS-Token $mlss_token;
        proxy_pass $auth_request_uri;
      }

      location = /mlflowauth {
        internal;
        proxy_pass_request_body on;
        proxy_set_header Content-Length "";
        proxy_set_header Host            $host;
        proxy_set_header X-Original-METHOD $request_method;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Original-URI $request_uri;

        proxy_set_header MLSS-RealIP $mlss_realip;
        #proxy_set_header MLSS-Token $mlss_token;
        proxy_set_header Origin-Request-URI $http_origin_request_uri;
        proxy_set_header MLSS-Token $cookie_{{.Values.ui.notebook.mlssToken}}{{.Values.ui.notebook.env}}{{.Values.ui.notebook.clusterName.bdap}};
        proxy_pass $auth_request_uri;
      }


      location /mlflow {
        resolver kube-dns.kube-system.svc.cluster.local valid=60s;
        proxy_set_header Host            $host;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-METHOD $request_method;
        proxy_set_header MLSS-Userid $http_mlss_userid;
        proxy_set_header MLSS-Auth-Type $http_mlss_auth_type;
        proxy_set_header MLSS-Ticket $http_mlss_ticket;
        proxy_set_header MLSS-UIURL $http_mlss_uiurl;
        proxy_set_header MLSS-Passwd $http_mlss_passwd;
        proxy_set_header MLSS-APPID $http_mlss_appid;
        proxy_set_header MLSS-APPTimestamp $http_mlss_apptimestamp;
        proxy_set_header MLSS-APPSignature $http_mlss_appsignature;
        #proxy_set_header MLSS-Token $mlss_token;
        proxy_set_header Origin-Request-URI $request_uri;
        set $auth_request_uri http://cc/cc/v1/auth/access/mlflow/uri/test;
        proxy_http_version 1.1;
        proxy_read_timeout 1800s;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        auth_request /mlflowauth;
        if ($request_uri ~* (mlflow)(.*)) {
          set $mlflow_uri $2;
        }
        set $mlss_realip $remote_addr;
        #default_type application/json;
        #return 200 '{"status":"success","result":"$2"}'; 
        proxy_pass  http://{{.Values.gateway.address}}/$mlflow_uri;
      }

      location /api {
        proxy_set_header MLSS-Token $cookie_{{.Values.ui.notebook.mlssToken}}{{.Values.ui.notebook.env}}{{.Values.ui.notebook.clusterName.bdap}};
        proxy_set_header MLSS-RealIP $remote_addr;
        proxy_set_header MLSS-Userid $http_mlss_userid;
        proxy_set_header MLSS-Auth-Type $http_mlss_auth_type;
        proxy_set_header MLSS-Ticket $http_mlss_ticket;
        proxy_set_header MLSS-UIURL $http_mlss_uiurl;
        proxy_set_header MLSS-Passwd $http_mlss_passwd;
        proxy_set_header MLSS-APPID $http_mlss_appid;
        proxy_set_header MLSS-APPTimestamp $http_mlss_apptimestamp;
        proxy_set_header MLSS-APPSignature $http_mlss_appsignature;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;
        proxy_pass http://cc;
      }
      location /cc {
        proxy_set_header MLSS-Token $cookie_Prophecis;
        proxy_set_header MLSS-RealIP $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header MLSS-Userid $http_mlss_userid;
        proxy_set_header MLSS-Auth-Type $http_mlss_auth_type;
        proxy_set_header MLSS-Ticket $http_mlss_ticket;
        proxy_set_header MLSS-UIURL $http_mlss_uiurl;
        proxy_set_header MLSS-Passwd $http_mlss_passwd;
        proxy_set_header MLSS-APPID $http_mlss_appid;
        proxy_set_header MLSS-APPTimestamp $http_mlss_apptimestamp;
        proxy_set_header MLSS-APPSignature $http_mlss_appsignature;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;

        proxy_ssl_trusted_certificate /etc/nginx/ca.crt;
        proxy_ssl_verify       on;
        proxy_ssl_verify_depth 2;

        proxy_pass http://cc;
      }
      location /aide {
        proxy_set_header MLSS-Token $cookie_Prophecis;
        proxy_set_header MLSS-RealIP $remote_addr;
        proxy_set_header MLSS-Userid $http_mlss_userid;
        proxy_set_header MLSS-Auth-Type $http_mlss_auth_type;
        proxy_set_header MLSS-Ticket $http_mlss_ticket;
        proxy_set_header MLSS-UIURL $http_mlss_iurl;
        proxy_set_header MLSS-Passwd $http_mlss_passwd;
        proxy_set_header MLSS-APPID $http_mlss_appid;
        proxy_set_header MLSS-APPTimestamp $http_mlss_apptimestamp;
        proxy_set_header MLSS-APPSignature $http_mlss_appsignature;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;
        proxy_pass http://aide;
      }
      location /mf {
        proxy_set_header MLSS-Token $cookie_Prophecis;
        proxy_set_header MLSS-RealIP $remote_addr;
        proxy_set_header MLSS-Userid $http_mlss_userid;
        proxy_set_header MLSS-Auth-Type $http_mlss_auth_type;
        proxy_set_header MLSS-Ticket $http_mlss_ticket;
        proxy_set_header MLSS-UIURL $http_mlss_iurl;
        proxy_set_header MLSS-Passwd $http_mlss_passwd;
        proxy_set_header MLSS-APPID $http_mlss_appid;
        proxy_set_header MLSS-APPTimestamp $http_mlss_apptimestamp;
        proxy_set_header MLSS-APPSignature $http_mlss_appsignature;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;
        proxy_pass http://mf;
      }
      location /v1 {
        set $mlss_token $cookie_{{.Values.ui.notebook.mlssToken}}{{.Values.ui.notebook.env}}{{.Values.ui.notebook.clusterName.bdap}};
        if ($request_uri ~* (mlss-token-for-logs=([\w-]*)) ) {
          set $mlss_token $2;
        }
        proxy_set_header MLSS-Token $mlss_token;
        proxy_set_header Authorization "Basic dGVkOndlbGNvbWUx";
        proxy_set_header Cookie $http_cookie;
        proxy_set_header MLSS-RealIP $remote_addr;
        set $mlss_userid $http_mlss_userid;
        if ($request_uri ~* (mlss-userid=([\w-]*)) ) {
          set $mlss_userid $2;
        }
        proxy_set_header MLSS-Userid $mlss_userid;
        proxy_set_header MLSS-Auth-Type $http_mlss_auth_type;
        proxy_set_header MLSS-Ticket $http_mlss_ticket;
        proxy_set_header MLSS-UIURL $http_mlss_uiurl;
        proxy_set_header MLSS-Passwd $http_mlss_passwd;
        proxy_set_header MLSS-APPID $http_mlss_appid;
        proxy_set_header MLSS-APPTimestamp $http_mlss_apptimestamp;
        proxy_set_header MLSS-APPSignature $http_mlss_appsignature;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_pass http://di;
      }
      location /di {
        set $mlss_token $cookie_Prophecis;
        #if ($request_uri ~* (mlss-token-for-logs=([\w-]*)) ) {
        #  set $mlss_token $2;
        #}
        proxy_set_header MLSS-Token $mlss_token;
        proxy_set_header Authorization "Basic dGVkOndlbGNvbWUx";
        proxy_set_header Cookie $http_cookie;
        proxy_set_header MLSS-RealIP $remote_addr;
        set $mlss_userid $http_mlss_userid;
        if ($request_uri ~* (mlss-userid=([\w-]*)) ) {
          set $mlss_userid $2;
        }
        proxy_set_header MLSS-Userid $mlss_userid;
        proxy_set_header MLSS-Auth-Type $http_mlss_auth_type;
        proxy_set_header MLSS-Ticket $http_mlss_ticket;
        proxy_set_header MLSS-UIURL $http_mlss_uiurl;
        proxy_set_header MLSS-Passwd $http_mlss_passwd;
        proxy_set_header MLSS-APPID $http_mlss_appid;
        proxy_set_header MLSS-APPTimestamp $http_mlss_apptimestamp;
        proxy_set_header MLSS-APPSignature $http_mlss_appsignature;
        proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection $http_connection;
        proxy_set_header Connection "Upgrade";

        proxy_set_header Origin "";

        proxy_pass http://di;
      }


      location = /linkis/upload {
        set $mlss_token $cookie_{{.Values.ui.notebook.mlssToken}}{{.Values.ui.notebook.env}}{{.Values.ui.notebook.clusterName.bdap}};
        #if ($request_uri ~* (mlss-token-for-logs=([\w-]*)) ) {
        #  set $mlss_token $2;
        #}
        proxy_set_header MLSS-Token $mlss_token;
        proxy_set_header Authorization "Basic dGVkOndlbGNvbWUx";
        proxy_set_header Cookie $http_cookie;
        proxy_set_header MLSS-RealIP $remote_addr;
        set $mlss_userid $http_mlss_userid;
        if ($request_uri ~* (mlss-userid=([\w-]*)) ) {
          set $mlss_userid $2;
        }
        proxy_set_header MLSS-Userid $mlss_userid;
        proxy_set_header MLSS-Auth-Type $http_mlss_auth_type;
        proxy_set_header MLSS-Ticket $http_mlss_ticket;
        proxy_set_header MLSS-UIURL $http_mlss_uiurl;
        proxy_set_header MLSS-Passwd $http_mlss_passwd;
        proxy_set_header MLSS-APPID $http_mlss_appid;
        proxy_set_header MLSS-APPTimestamp $http_mlss_apptimestamp;
        proxy_set_header MLSS-APPSignature $http_mlss_appsignature;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        proxy_set_header Token-User $mlss_userid;
        proxy_set_header Token-Code {{.Values.linkis.tokenCode}};

        proxy_pass http://{{.Values.linkis.address}}/api/rest_j/v1/bml/upload;
      }

      location / {
          root /var/www/html;
          index index.html;
          if ($request_uri ~* (ticket=([.\w-]*)) ) {
             add_header Set-Cookie "ticket=$arg_ticket;$http_cookie";
             rewrite .*  http://{{.Values.gateway.address}}:30803/index.html? redirect;
          }
          add_header Set-Cookie "$http_cookie";

      }


      #location /index.html {
      #    index index.html;
      #    if 
      #    rewrite ^/index.html(.*) /;
      #}


    }
    server {
      listen 8080;
      server_name mlss-aide-gw.webank.oa.com;
      resolver kube-dns.kube-system.svc.cluster.local valid=60s;
      underscores_in_headers on;
      client_max_body_size 0;
      chunked_transfer_encoding on;
      location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_pass http://{{.Values.gateway.address}}:36137;
      }

    }

  env-config-js: |
    var mlssEnvConfig = {
        'production': {
            'ssoLoginUrl': '',
            'ssoLogoutUrl': '',
            'uiServer': '{{.Values.ui.config.bdap.uiServer}}',
            'filterUiServer': {{.Values.ui.config.bdap.filterUiServer}},
            'diApiVersion': '{{.Values.ui.diApiVersion}}',
            'aideApiVersion': '{{.Values.ui.aideApiVersion}}',
            'ccApiVersion': '{{.Values.ui.ccApiVersion}}',
            'DI': {
                'defineImage': '{{.Values.image.registry}}',
                'imageOption': [{{range .Values.ui.di.image.trainingTags}}'{{.name}}',{{end}}],
                'definePython': '{{.Values.ui.di.linkis.hdfsBaseDir}}',
                'pythonOption': [{{- range .Values.ui.di.linkis.pythonOption }}{{- range $key,$val := . }}{key : "{{ $key }}", value : "{{ $val }}"},{{- end}}{{- end}}],
                'baseHDFSPath': '{{.Values.ui.di.linkis.hdfsBaseDir}}',
                'mlFlowUrl': 'http://{{.Values.gateway.address}}:33321/#/',
                'cookieExpires': 8
            },
            'AIDE': {
                'defineImage': '{{.Values.image.registry}}',
                'imageOption': [{{range .Values.ui.aide.image.notebookTags}}'{{.name}}',{{end}}],
                'SparkSessionCount': 3
            },
            'basisPlatform': {
                'grafanaUrl': '{{.Values.ui.grafana.url}}',
                'dashboardUrl': '{{.Values.ui.dashboard.url}}',
                'prometheusUrl': '{{.Values.ui.prometheus.url}}',
                'kibanaUrl': '{{.Values.ui.kibana.url}}'
            },
            'ns': {
                'platformNamespace': '{{.Values.namespace}}'
            },
            'cookiePre': '{{.Values.ui.notebook.mlssToken}}',
            'environment': '{{.Values.ui.notebook.env}}',   // TEST SIT PROD
            'filterEnv': '{{.Values.ui.notebook.clusterName.bdap}}'
        }
    }

  ca-crt: |
    -----BEGIN CERTIFICATE-----
    MIICzDCCAbQCCQCFY7GKWwQBBDANBgkqhkiG9w0BAQsFADAoMQswCQYDVQQGEwJD
    TjEZMBcGA1UEAwwQY29udHJvbGNlbnRlci1nbzAeFw0yMDA1MDcxMDUxMTNaFw0z
    MDA1MDUxMDUxMTNaMCgxCzAJBgNVBAYTAkNOMRkwFwYDVQQDDBBjb250cm9sY2Vu
    dGVyLWdvMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy7p22tSPDmN7
    a7tRndX7NiEDYv+6mhFwSw/liUCe4rECF6v457eqNlmd+qo1JHYxBMelakFZtSt/
    TpcAuz8vRQFmK61qwPruEqg5/S5VtQQNzrGkuOEthOD6+Joepfo1aSiBHl8ec6Fr
    vYJkRijaoL3g2w/91Vt1LncrfsaPZBCKZ2epgsCnLYVQogxu/0gKBng9ilsMcBVA
    GeAeAPmxW/4I+mO1a342L53A8xZU2RaDXbZsBLucH1ONIhLb7Zja1fUCJi7HRmIL
    LfUzgJ62v4tsvZtLRoaA2QA4mEZesIPHeJpgQRmgpD5BmLxX9SHekoLTWqDCAA3z
    XnxjHjgkawIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAIKT6L6pz41uWGCSCQvOu3
    dD8yEIaIwrGL0BBkAJTIsXfdGCMnE/gfmGIUBcl26ASHmsaCK59HW8v7zWYqXLLt
    m5ewtagX+Iw//vtzZznw3gOpNCvhFv0AhMhURvpMI+u+F4HIKf3qrhd7hZZaTzob
    MgxiagJMn5cb3SEN5DykGua56KzFPjLn3mqmgowFpdgghVUycYEUN+BkX2RpkPJp
    usfKIj54OxAQ8rYO2UOPRYEvZ8Iem6oIFsCm+5ZhW3lUIcuEQSR8/WaIFYFRaOXD
    vT7RvkgME3tZ//XtwpTcqTEHpLgJAO6EwONYcEyWpAa1gRHpFSEXEG+py2cAN2rG
    -----END CERTIFICATE-----
      
  server.pem: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEowIBAAKCAQEApjwsLQkpXxxQfCNsnfi+49lQ49jCPwZchTysVB10SidD6mGW
    2uGRzSDrzfBtvoupQLHFEleA2yf9WBso08JQWhNiPc+CvxMxHSWy15f38ZbnPo7g
    EkPKz4Wl3Ef34HfASldsVdpMk8KHP/yKbp0OvHa6cmYoUNPmjqfXamjdoMHQio02
    68SekYOX0Z4lFIIq+FyEZg1UQjiKhjkUvKPXXPxMY8uF+ZWGpydhFWplJL+mLptH
    Q2K2sfNy2eDMO/B0Kum2u+b0AP1dB/vf1dSEtOBJwLKNl+ye0HTGe+d1WHNPSgeV
    Z2jCmFE2Q5xXt86zOutxq+/gSqn/5eeZDMKlJQIDAQABAoIBAFuLiZxnjjQFiMFE
    VN2ODbm2hJhlV1uT6kGpjxFngxIPG5Sol4YEcOGxPoqT3CvyB4xMGcYnEBwgoqDx
    nAM54DwqrpBxhYQqUoLFrv6Rfwa5XrGRxw3n7XlpFVUBAR3JdMi76jpBVKiOmSMA
    tU+DCIl7LOQxJASXHUH0ZmoARATxs+OxzFQvdYhTeHRIaf5upgwerw2xa89y5NKW
    vvuKcroSJdFC/pikAzjHAllzcBD8J0UC1DFsrhmnTv3/md5/GmHd3HxfZbgUtrSy
    N76i2hAzoWHldIpx3b7x1Jtk8nkRG/leP1g1q7f6llJf2NoEPr7bA7mpSaUgmYzv
    0JqJF4ECgYEA0a0mw0gY42LPARikthwYxQ0R7b8eCVnsWbKJJbOPnqkfv9+jD6WQ
    MiL9nshcPsjW2ZgbaVu5OMiQvlGrGYw3BS9kC8cxig3Hrg9zcvhzjINnr6DLlVCi
    1+LB90s5V+WstJlAl02agpdY+B6cUtY5huYFXx2vQfgDXRhB1kacM6ECgYEAyvYS
    j3y+tRroiJ+A8Iy37jAXDFbn9jc7jifSkNCQhxB6YxxFzPW2cNVvZiECFKbE7Vmh
    13oJsWRAMTpfQDOoYBKmugNXu8t8HPnfwq3ZqYBJHbwfpClAteufiIMZViTf1Zw2
    bbHP+zPRjBzw5uKVCHJPClRzMp/HyrEJwbUiwwUCgYAfDL4lwwJ0gchXyDd0BFsi
    qxnRlDC1f8yBR/AJVjrZawAZoNt70K+2zPmzzsXiQkmWtXCxvHSEVSciF+P3h40K
    RodROzE52WqNexpEl0g9MaRkHLKpLOTAhYLlxQz72DYoFF29Si+sUQ9KxvWtSq4A
    LQX0nOe8JCcTXSk6uwAcoQKBgQCBFbSEUiCw6uZOTrQhSj6JXUirbnKlpEdaiHVh
    6WSiopZUhtzWGMjqRrVNTV0XaWICW2mVtGaJzmsNZETEfpZuVC56TDn2lNrhSwNH
    vG6dYZwfL1EohZxEmBGlL0xj/5vlLi9n4RmYeUKjTJzjG+URtDIVLdT+s6TMg4Dj
    FKOBSQKBgGiKUzCrvG2htqRdgRyBsWQ7m2pUrb9rCjBlnGMf6wnzmkFbtt8ADWLj
    aIFWbvkcoAjCPdIIP9j4IyNVCC6SQV7Y3cz+q3SzXCRF3cZqtJ+333VgWgpdKlOr
    Gl85ZY7w2a5cyi1Ca1zB5x3d7uJcuYV2YLZdAz+Of8N9/kp7h6m6
    -----END RSA PRIVATE KEY-----
    -----BEGIN CERTIFICATE-----
    MIIDIDCCAggCCQCZxRrLi6wZVDANBgkqhkiG9w0BAQsFADBSMQswCQYDVQQGEwJD
    TjELMAkGA1UECAwCU1oxITAfBgNVBAoMGEludGVybmV0IFdpZGdpdHMgUHR5IEx0
    ZDETMBEGA1UEAwwKKi53ZW9hLmNvbTAeFw0yMDA2MjEwNzMwNTNaFw0zMDA2MTkw
    NzMwNTNaMFIxCzAJBgNVBAYTAkNOMQswCQYDVQQIDAJTWjEhMB8GA1UECgwYSW50
    ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMRMwEQYDVQQDDAoqLndlb2EuY29tMIIBIjAN
    BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApjwsLQkpXxxQfCNsnfi+49lQ49jC
    PwZchTysVB10SidD6mGW2uGRzSDrzfBtvoupQLHFEleA2yf9WBso08JQWhNiPc+C
    vxMxHSWy15f38ZbnPo7gEkPKz4Wl3Ef34HfASldsVdpMk8KHP/yKbp0OvHa6cmYo
    UNPmjqfXamjdoMHQio0268SekYOX0Z4lFIIq+FyEZg1UQjiKhjkUvKPXXPxMY8uF
    +ZWGpydhFWplJL+mLptHQ2K2sfNy2eDMO/B0Kum2u+b0AP1dB/vf1dSEtOBJwLKN
    l+ye0HTGe+d1WHNPSgeVZ2jCmFE2Q5xXt86zOutxq+/gSqn/5eeZDMKlJQIDAQAB
    MA0GCSqGSIb3DQEBCwUAA4IBAQAFOcsCI56fWWx7Xt9MXKP6blwitrHMUp9Ot/74
    OR7fggJCBCkdtmWYTPCqLpKK6McN/849rOxS44OW+6zdCV1Ht4iY4oBqAg42c+iu
    kKhuTWnoCb4/00jpBX92NFj9HCrzeocNx6PKjr2aG3yvlWPvEOxkL6+GolznR2ue
    EBOdukLxf7u0G/C3ZBAYO90knI5iItb4H54vB58Um3pMtvV0gSEuvYbdBkuCXY6n
    CToPpq2+y5J6zo3y50FgYQ42Uc1OY6qMmzAGlrW7eA+fRr2uquTpLXw8/KGVhI4+
    P/0tK7OoSQCSfln7BRzzKerHuxn3va6Y/aQ3oAz7bEVfYoA+
    -----END CERTIFICATE-----

  server.key: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEowIBAAKCAQEApjwsLQkpXxxQfCNsnfi+49lQ49jCPwZchTysVB10SidD6mGW
    2uGRzSDrzfBtvoupQLHFEleA2yf9WBso08JQWhNiPc+CvxMxHSWy15f38ZbnPo7g
    EkPKz4Wl3Ef34HfASldsVdpMk8KHP/yKbp0OvHa6cmYoUNPmjqfXamjdoMHQio02
    68SekYOX0Z4lFIIq+FyEZg1UQjiKhjkUvKPXXPxMY8uF+ZWGpydhFWplJL+mLptH
    Q2K2sfNy2eDMO/B0Kum2u+b0AP1dB/vf1dSEtOBJwLKNl+ye0HTGe+d1WHNPSgeV
    Z2jCmFE2Q5xXt86zOutxq+/gSqn/5eeZDMKlJQIDAQABAoIBAFuLiZxnjjQFiMFE
    VN2ODbm2hJhlV1uT6kGpjxFngxIPG5Sol4YEcOGxPoqT3CvyB4xMGcYnEBwgoqDx
    nAM54DwqrpBxhYQqUoLFrv6Rfwa5XrGRxw3n7XlpFVUBAR3JdMi76jpBVKiOmSMA
    tU+DCIl7LOQxJASXHUH0ZmoARATxs+OxzFQvdYhTeHRIaf5upgwerw2xa89y5NKW
    vvuKcroSJdFC/pikAzjHAllzcBD8J0UC1DFsrhmnTv3/md5/GmHd3HxfZbgUtrSy
    N76i2hAzoWHldIpx3b7x1Jtk8nkRG/leP1g1q7f6llJf2NoEPr7bA7mpSaUgmYzv
    0JqJF4ECgYEA0a0mw0gY42LPARikthwYxQ0R7b8eCVnsWbKJJbOPnqkfv9+jD6WQ
    MiL9nshcPsjW2ZgbaVu5OMiQvlGrGYw3BS9kC8cxig3Hrg9zcvhzjINnr6DLlVCi
    1+LB90s5V+WstJlAl02agpdY+B6cUtY5huYFXx2vQfgDXRhB1kacM6ECgYEAyvYS
    j3y+tRroiJ+A8Iy37jAXDFbn9jc7jifSkNCQhxB6YxxFzPW2cNVvZiECFKbE7Vmh
    13oJsWRAMTpfQDOoYBKmugNXu8t8HPnfwq3ZqYBJHbwfpClAteufiIMZViTf1Zw2
    bbHP+zPRjBzw5uKVCHJPClRzMp/HyrEJwbUiwwUCgYAfDL4lwwJ0gchXyDd0BFsi
    qxnRlDC1f8yBR/AJVjrZawAZoNt70K+2zPmzzsXiQkmWtXCxvHSEVSciF+P3h40K
    RodROzE52WqNexpEl0g9MaRkHLKpLOTAhYLlxQz72DYoFF29Si+sUQ9KxvWtSq4A
    LQX0nOe8JCcTXSk6uwAcoQKBgQCBFbSEUiCw6uZOTrQhSj6JXUirbnKlpEdaiHVh
    6WSiopZUhtzWGMjqRrVNTV0XaWICW2mVtGaJzmsNZETEfpZuVC56TDn2lNrhSwNH
    vG6dYZwfL1EohZxEmBGlL0xj/5vlLi9n4RmYeUKjTJzjG+URtDIVLdT+s6TMg4Dj
    FKOBSQKBgGiKUzCrvG2htqRdgRyBsWQ7m2pUrb9rCjBlnGMf6wnzmkFbtt8ADWLj
    aIFWbvkcoAjCPdIIP9j4IyNVCC6SQV7Y3cz+q3SzXCRF3cZqtJ+333VgWgpdKlOr
    Gl85ZY7w2a5cyi1Ca1zB5x3d7uJcuYV2YLZdAz+Of8N9/kp7h6m6
    -----END RSA PRIVATE KEY-----
