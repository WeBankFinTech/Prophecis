apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: {{.Values.namespace}}
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        service: mongo
        environment: local
        app: mongo
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
        - name: mongo-pv-volume
          persistentVolumeClaim:
            claimName: mongo-pvc-{{.Values.namespace}}
        - name: timezone-volume
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
            type: File
        - name: config-volume
          configMap:
            defaultMode: 0771
            name: mongo-config
            items:
            - key: init-auth-sh
              path: init-auth.sh
            - key: init-auth-js
              path: init-auth.js
      containers:
        - name: mongo
#          image: mongo:3.0
          image: {{.Values.server_repository}}:mongo-3.0
          imagePullPolicy: Always
          command:
            - bash
            - ./init-mongo/init-auth.sh
          ports:
            - containerPort: 27017
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
          volumeMounts:
            - mountPath: "/data/db"
              name: mongo-pv-volume
              #subPath: {{.Values.persistent.mongo.nfsEnv}}/mongo
            - name: timezone-volume
              mountPath: /etc/localtime
            - name: config-volume
              mountPath: /init-mongo
      imagePullSecrets:
      - name: hubsecret
      nodeSelector:
        {{range $key,$val := .Values.platformNodeSelectors}}
          {{$key}}: {{$val}}
        {{end}}
---

apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: {{.Values.namespace}}
  labels:
    environment: local
spec:
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    service: mongo
